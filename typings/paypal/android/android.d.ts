/// <reference path="android-declarations.d.ts"/>

declare module com {
	export module paypal {
		export module checkout {
			export class PayPalCheckout {
				public static class: java.lang.Class<com.paypal.checkout.PayPalCheckout>;
				public static INSTANCE: com.paypal.checkout.PayPalCheckout;
				public isConfigSet(): boolean;
				/** @deprecated */
				public static start(param0: com.paypal.checkout.createorder.CreateOrder, param1: com.paypal.checkout.approve.OnApprove, param2: com.paypal.checkout.shipping.OnShippingChange): void;
				/** @deprecated */
				public static start(param0: com.paypal.checkout.createorder.CreateOrder, param1: com.paypal.checkout.approve.OnApprove, param2: com.paypal.checkout.shipping.OnShippingChange, param3: com.paypal.checkout.cancel.OnCancel, param4: com.paypal.checkout.error.OnError): void;
				public static registerCallbacks(param0: com.paypal.checkout.approve.OnApprove, param1: com.paypal.checkout.shipping.OnShippingChange, param2: com.paypal.checkout.cancel.OnCancel, param3: com.paypal.checkout.error.OnError): void;
				public static startCheckout(param0: com.paypal.checkout.createorder.CreateOrder): void;
				public static setConfig(param0: com.paypal.checkout.config.CheckoutConfig): void;
				/** @deprecated */
				public static start(param0: com.paypal.checkout.createorder.CreateOrder, param1: com.paypal.checkout.approve.OnApprove): void;
				/** @deprecated */
				public static start(param0: com.paypal.checkout.createorder.CreateOrder): void;
				public static registerCallbacks(param0: com.paypal.checkout.approve.OnApprove, param1: com.paypal.checkout.cancel.OnCancel, param2: com.paypal.checkout.error.OnError): void;
				/** @deprecated */
				public static start(param0: com.paypal.checkout.createorder.CreateOrder, param1: com.paypal.checkout.approve.OnApprove, param2: com.paypal.checkout.shipping.OnShippingChange, param3: com.paypal.checkout.cancel.OnCancel): void;
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export class SnapshotExpiredException {
				public static class: java.lang.Class<com.paypal.checkout.SnapshotExpiredException>;
				public constructor(param0: com.paypal.checkout.internal.build.BuildValidationStatus.Invalid.Expired);
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module approve {
				export class Approval {
					public static class: java.lang.Class<com.paypal.checkout.approve.Approval>;
					public getData(): com.paypal.checkout.approve.ApprovalData;
					public getOrderActions(): com.paypal.checkout.order.OrderActions;
					public setInternalApprovalData$pyplcheckout_externalThreedsRelease(param0: com.paypal.checkout.approve.ApprovalData): void;
					public constructor(param0: com.paypal.checkout.order.OrderActions);
					public getInternalApprovalData$pyplcheckout_externalThreedsRelease(): com.paypal.checkout.approve.ApprovalData;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module approve {
				export class ApprovalData {
					public static class: java.lang.Class<com.paypal.checkout.approve.ApprovalData>;
					public getOrderId(): string;
					public getCorrelationIds(): com.paypal.pyplcheckout.merchant.CorrelationIds;
					public component2(): string;
					public copy(param0: string, param1: string, param2: string, param3: com.paypal.pyplcheckout.pojo.Buyer, param4: com.paypal.pyplcheckout.pojo.Cart, param5: com.paypal.pyplcheckout.pojo.Address, param6: com.paypal.pyplcheckout.pojo.VaultData, param7: string, param8: com.paypal.pyplcheckout.merchant.CorrelationIds): com.paypal.checkout.approve.ApprovalData;
					public component3(): string;
					public component6(): com.paypal.pyplcheckout.pojo.Address;
					public component7(): com.paypal.pyplcheckout.pojo.VaultData;
					public component5(): com.paypal.pyplcheckout.pojo.Cart;
					public constructor(param0: string, param1: string, param2: string, param3: com.paypal.pyplcheckout.pojo.Buyer, param4: com.paypal.pyplcheckout.pojo.Cart, param5: com.paypal.pyplcheckout.pojo.Address, param6: com.paypal.pyplcheckout.pojo.VaultData, param7: string, param8: com.paypal.pyplcheckout.merchant.CorrelationIds);
					public component9(): com.paypal.pyplcheckout.merchant.CorrelationIds;
					/** @deprecated */
					public getShippingAddress(): com.paypal.pyplcheckout.pojo.Address;
					public getVaultData(): com.paypal.pyplcheckout.pojo.VaultData;
					public equals(param0: any): boolean;
					public toString(): string;
					public component1(): string;
					public component4(): com.paypal.pyplcheckout.pojo.Buyer;
					public getPaymentId(): string;
					public getBillingToken(): string;
					public component8(): string;
					public getPayer(): com.paypal.pyplcheckout.pojo.Buyer;
					public static from(param0: com.paypal.pyplcheckout.pojo.ApprovePaymentResponse, param1: com.paypal.pyplcheckout.merchant.CorrelationIds): com.paypal.checkout.approve.ApprovalData;
					public hashCode(): number;
					public getCart(): com.paypal.pyplcheckout.pojo.Cart;
					public getPayerId(): string;
				}
				export module ApprovalData {
					export class Companion {
						public static class: java.lang.Class<com.paypal.checkout.approve.ApprovalData.Companion>;
						public from(param0: com.paypal.pyplcheckout.pojo.ApprovePaymentResponse, param1: com.paypal.pyplcheckout.merchant.CorrelationIds): com.paypal.checkout.approve.ApprovalData;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module approve {
				export class Approval_Factory extends dagger.internal.Factory<com.paypal.checkout.approve.Approval> {
					public static class: java.lang.Class<com.paypal.checkout.approve.Approval_Factory>;
					public static newInstance(param0: com.paypal.checkout.order.OrderActions): com.paypal.checkout.approve.Approval;
					public get(): com.paypal.checkout.approve.Approval;
					public constructor(param0: javax.inject.Provider<com.paypal.checkout.order.OrderActions>);
					public static create(param0: javax.inject.Provider<com.paypal.checkout.order.OrderActions>): com.paypal.checkout.approve.Approval_Factory;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module approve {
				export class OnApprove {
					public static class: java.lang.Class<com.paypal.checkout.approve.OnApprove>;
					/**
					 * Constructs a new instance of the com.paypal.checkout.approve.OnApprove interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onApprove(param0: com.paypal.checkout.approve.Approval): void;
						<clinit>(): void;
					});
					public constructor();
					public onApprove(param0: com.paypal.checkout.approve.Approval): void;
				}
				export module OnApprove {
					export class Companion {
						public static class: java.lang.Class<com.paypal.checkout.approve.OnApprove.Companion>;
						public invoke(param0: any<any,any>): com.paypal.checkout.approve.OnApprove;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module cancel {
				export class OnCancel {
					public static class: java.lang.Class<com.paypal.checkout.cancel.OnCancel>;
					/**
					 * Constructs a new instance of the com.paypal.checkout.cancel.OnCancel interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onCancel(): void;
						<clinit>(): void;
					});
					public constructor();
					public onCancel(): void;
				}
				export module OnCancel {
					export class Companion {
						public static class: java.lang.Class<com.paypal.checkout.cancel.OnCancel.Companion>;
						public invoke(param0: any): com.paypal.checkout.cancel.OnCancel;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module config {
				export class CheckoutConfig {
					public static class: java.lang.Class<com.paypal.checkout.config.CheckoutConfig>;
					public static EMPTY_CLIENT_ID: string;
					public static INVALID_RETURN_URL: string;
					public getClientId(): string;
					public constructor(param0: globalAndroid.app.Application, param1: string, param2: com.paypal.checkout.config.Environment, param3: com.paypal.checkout.createorder.CurrencyCode, param4: com.paypal.checkout.createorder.UserAction);
					public getApplication(): globalAndroid.app.Application;
					public getCurrencyCode(): com.paypal.checkout.createorder.CurrencyCode;
					public constructor(param0: globalAndroid.app.Application, param1: string, param2: com.paypal.checkout.config.Environment);
					public constructor(param0: globalAndroid.app.Application, param1: string, param2: com.paypal.checkout.config.Environment, param3: com.paypal.checkout.createorder.CurrencyCode, param4: com.paypal.checkout.createorder.UserAction, param5: com.paypal.checkout.config.PaymentButtonIntent, param6: com.paypal.checkout.config.SettingsConfig);
					public getUiConfig(): com.paypal.checkout.config.UIConfig;
					public verifyConfig$pyplcheckout_externalThreedsRelease(): void;
					public getSettingsConfig(): com.paypal.checkout.config.SettingsConfig;
					public constructor(param0: globalAndroid.app.Application, param1: string, param2: com.paypal.checkout.config.Environment, param3: com.paypal.checkout.createorder.CurrencyCode, param4: com.paypal.checkout.createorder.UserAction, param5: com.paypal.checkout.config.PaymentButtonIntent, param6: com.paypal.checkout.config.SettingsConfig, param7: com.paypal.checkout.config.UIConfig);
					public getEnvironment(): com.paypal.checkout.config.Environment;
					public constructor(param0: globalAndroid.app.Application, param1: string, param2: com.paypal.checkout.config.Environment, param3: com.paypal.checkout.createorder.CurrencyCode);
					public getPaymentButtonIntent(): com.paypal.checkout.config.PaymentButtonIntent;
					public getUserAction(): com.paypal.checkout.createorder.UserAction;
					public constructor(param0: globalAndroid.app.Application, param1: string, param2: com.paypal.checkout.config.Environment, param3: com.paypal.checkout.createorder.CurrencyCode, param4: com.paypal.checkout.createorder.UserAction, param5: com.paypal.checkout.config.PaymentButtonIntent);
				}
				export module CheckoutConfig {
					export class Companion {
						public static class: java.lang.Class<com.paypal.checkout.config.CheckoutConfig.Companion>;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module config {
				export class Environment {
					public static class: java.lang.Class<com.paypal.checkout.config.Environment>;
					public static LIVE: com.paypal.checkout.config.Environment;
					public static SANDBOX: com.paypal.checkout.config.Environment;
					public static STAGE: com.paypal.checkout.config.Environment;
					public static LOCAL: com.paypal.checkout.config.Environment;
					public static valueOf(param0: string): com.paypal.checkout.config.Environment;
					public toRunTimeEnvironment(): com.paypal.pyplcheckout.merchantIntegration.RunTimeEnvironment;
					public static values(): androidNative.Array<com.paypal.checkout.config.Environment>;
				}
				export module Environment {
					export class WhenMappings {
						public static class: java.lang.Class<com.paypal.checkout.config.Environment.WhenMappings>;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module config {
				export class PaymentButtonIntent {
					public static class: java.lang.Class<com.paypal.checkout.config.PaymentButtonIntent>;
					public static CAPTURE: com.paypal.checkout.config.PaymentButtonIntent;
					public static AUTHORIZE: com.paypal.checkout.config.PaymentButtonIntent;
					public static SUBSCRIPTION: com.paypal.checkout.config.PaymentButtonIntent;
					public static valueOf(param0: string): com.paypal.checkout.config.PaymentButtonIntent;
					public static values(): androidNative.Array<com.paypal.checkout.config.PaymentButtonIntent>;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module config {
				export class SettingsConfig {
					public static class: java.lang.Class<com.paypal.checkout.config.SettingsConfig>;
					public constructor(param0: boolean, param1: boolean);
					public constructor();
					public getShouldFailEligibility(): boolean;
					public getLoggingEnabled(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module config {
				export class UIConfig {
					public static class: java.lang.Class<com.paypal.checkout.config.UIConfig>;
					public constructor(param0: boolean);
					public constructor();
					public getShowExitSurveyDialog(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module createorder {
				export class CreateOrder {
					public static class: java.lang.Class<com.paypal.checkout.createorder.CreateOrder>;
					/**
					 * Constructs a new instance of the com.paypal.checkout.createorder.CreateOrder interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						create(param0: com.paypal.checkout.createorder.CreateOrderActions): void;
						<clinit>(): void;
					});
					public constructor();
					public create(param0: com.paypal.checkout.createorder.CreateOrderActions): void;
				}
				export module CreateOrder {
					export class Companion {
						public static class: java.lang.Class<com.paypal.checkout.createorder.CreateOrder.Companion>;
						public invoke(param0: any<any,any>): com.paypal.checkout.createorder.CreateOrder;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module createorder {
				export class CreateOrderAction {
					public static class: java.lang.Class<com.paypal.checkout.createorder.CreateOrderAction>;
					public execute(param0: com.paypal.checkout.order.Order, param1: any): any;
					public constructor(param0: com.paypal.checkout.createorder.CreateOrderRequestFactory, param1: okhttp3.OkHttpClient, param2: com.google.gson.Gson, param3: com.paypal.checkout.merchanttoken.CreateLsatTokenAction, param4: com.paypal.pyplcheckout.services.Repository, param5: kotlinx.coroutines.CoroutineDispatcher);
					public setAccessToken$pyplcheckout_externalThreedsRelease(param0: string): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module createorder {
				export class CreateOrderAction_Factory extends dagger.internal.Factory<com.paypal.checkout.createorder.CreateOrderAction> {
					public static class: java.lang.Class<com.paypal.checkout.createorder.CreateOrderAction_Factory>;
					public static create(param0: javax.inject.Provider<com.paypal.checkout.createorder.CreateOrderRequestFactory>, param1: javax.inject.Provider<okhttp3.OkHttpClient>, param2: javax.inject.Provider<com.google.gson.Gson>, param3: javax.inject.Provider<com.paypal.checkout.merchanttoken.CreateLsatTokenAction>, param4: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param5: javax.inject.Provider<kotlinx.coroutines.CoroutineDispatcher>): com.paypal.checkout.createorder.CreateOrderAction_Factory;
					public constructor(param0: javax.inject.Provider<com.paypal.checkout.createorder.CreateOrderRequestFactory>, param1: javax.inject.Provider<okhttp3.OkHttpClient>, param2: javax.inject.Provider<com.google.gson.Gson>, param3: javax.inject.Provider<com.paypal.checkout.merchanttoken.CreateLsatTokenAction>, param4: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param5: javax.inject.Provider<kotlinx.coroutines.CoroutineDispatcher>);
					public static newInstance(param0: com.paypal.checkout.createorder.CreateOrderRequestFactory, param1: okhttp3.OkHttpClient, param2: com.google.gson.Gson, param3: com.paypal.checkout.merchanttoken.CreateLsatTokenAction, param4: com.paypal.pyplcheckout.services.Repository, param5: kotlinx.coroutines.CoroutineDispatcher): com.paypal.checkout.createorder.CreateOrderAction;
					public get(): com.paypal.checkout.createorder.CreateOrderAction;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module createorder {
				export class CreateOrderActions {
					public static class: java.lang.Class<com.paypal.checkout.createorder.CreateOrderActions>;
					public internalOnOrderCreated: any<any,any>;
					public getInternalOnOrderCreated$pyplcheckout_externalThreedsRelease(): any<com.paypal.checkout.createorder.OrderCreateResult,any>;
					public setVaultApprovalSessionId(param0: string): void;
					public setInternalOnOrderCreated$pyplcheckout_externalThreedsRelease(param0: any<any,any>): void;
					public setBillingAgreementId(param0: string): void;
					public create(param0: com.paypal.checkout.order.Order, param1: any<any,any>): void;
					public cancel(): void;
					public create(param0: com.paypal.checkout.order.Order, param1: com.paypal.checkout.createorder.CreateOrderActions.OnOrderCreated): void;
					public constructor(param0: any, param1: com.paypal.checkout.createorder.CreateOrderAction, param2: com.paypal.checkout.createorder.ba.BaTokenToEcTokenAction, param3: com.paypal.pyplcheckout.services.Repository);
					public setAccessToken$pyplcheckout_externalThreedsRelease(param0: string): void;
					public set(param0: string): void;
				}
				export module CreateOrderActions {
					export class OnOrderCreated {
						public static class: java.lang.Class<com.paypal.checkout.createorder.CreateOrderActions.OnOrderCreated>;
						/**
						 * Constructs a new instance of the com.paypal.checkout.createorder.CreateOrderActions$OnOrderCreated interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onCreated(param0: string): void;
							<clinit>(): void;
						});
						public constructor();
						public onCreated(param0: string): void;
					}
					export module OnOrderCreated {
						export class Companion {
							public static class: java.lang.Class<com.paypal.checkout.createorder.CreateOrderActions.OnOrderCreated.Companion>;
							public invoke(param0: any<any,any>): com.paypal.checkout.createorder.CreateOrderActions.OnOrderCreated;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module createorder {
				export class CreateOrderActions_Factory extends dagger.internal.Factory<com.paypal.checkout.createorder.CreateOrderActions> {
					public static class: java.lang.Class<com.paypal.checkout.createorder.CreateOrderActions_Factory>;
					public constructor(param0: javax.inject.Provider<any>, param1: javax.inject.Provider<com.paypal.checkout.createorder.CreateOrderAction>, param2: javax.inject.Provider<com.paypal.checkout.createorder.ba.BaTokenToEcTokenAction>, param3: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>);
					public static newInstance(param0: any, param1: com.paypal.checkout.createorder.CreateOrderAction, param2: com.paypal.checkout.createorder.ba.BaTokenToEcTokenAction, param3: com.paypal.pyplcheckout.services.Repository): com.paypal.checkout.createorder.CreateOrderActions;
					public get(): com.paypal.checkout.createorder.CreateOrderActions;
					public static create(param0: javax.inject.Provider<any>, param1: javax.inject.Provider<com.paypal.checkout.createorder.CreateOrderAction>, param2: javax.inject.Provider<com.paypal.checkout.createorder.ba.BaTokenToEcTokenAction>, param3: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>): com.paypal.checkout.createorder.CreateOrderActions_Factory;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module createorder {
				export class CreateOrderRequestFactory {
					public static class: java.lang.Class<com.paypal.checkout.createorder.CreateOrderRequestFactory>;
					public constructor(param0: okhttp3.Request.Builder, param1: com.google.gson.Gson);
					public create$pyplcheckout_externalThreedsRelease(param0: com.paypal.checkout.order.Order, param1: string): okhttp3.Request;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module createorder {
				export class CreateOrderRequestFactory_Factory extends dagger.internal.Factory<com.paypal.checkout.createorder.CreateOrderRequestFactory> {
					public static class: java.lang.Class<com.paypal.checkout.createorder.CreateOrderRequestFactory_Factory>;
					public constructor(param0: javax.inject.Provider<okhttp3.Request.Builder>, param1: javax.inject.Provider<com.google.gson.Gson>);
					public static create(param0: javax.inject.Provider<okhttp3.Request.Builder>, param1: javax.inject.Provider<com.google.gson.Gson>): com.paypal.checkout.createorder.CreateOrderRequestFactory_Factory;
					public get(): com.paypal.checkout.createorder.CreateOrderRequestFactory;
					public static newInstance(param0: okhttp3.Request.Builder, param1: com.google.gson.Gson): com.paypal.checkout.createorder.CreateOrderRequestFactory;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module createorder {
				export class CurrencyCode {
					public static class: java.lang.Class<com.paypal.checkout.createorder.CurrencyCode>;
					public static AUD: com.paypal.checkout.createorder.CurrencyCode;
					public static BRL: com.paypal.checkout.createorder.CurrencyCode;
					public static CAD: com.paypal.checkout.createorder.CurrencyCode;
					public static CNY: com.paypal.checkout.createorder.CurrencyCode;
					public static CZK: com.paypal.checkout.createorder.CurrencyCode;
					public static DKK: com.paypal.checkout.createorder.CurrencyCode;
					public static EUR: com.paypal.checkout.createorder.CurrencyCode;
					public static HKD: com.paypal.checkout.createorder.CurrencyCode;
					public static HUF: com.paypal.checkout.createorder.CurrencyCode;
					public static INR: com.paypal.checkout.createorder.CurrencyCode;
					public static ILS: com.paypal.checkout.createorder.CurrencyCode;
					public static JPY: com.paypal.checkout.createorder.CurrencyCode;
					public static MYR: com.paypal.checkout.createorder.CurrencyCode;
					public static MXN: com.paypal.checkout.createorder.CurrencyCode;
					public static TWD: com.paypal.checkout.createorder.CurrencyCode;
					public static NZD: com.paypal.checkout.createorder.CurrencyCode;
					public static NOK: com.paypal.checkout.createorder.CurrencyCode;
					public static PHP: com.paypal.checkout.createorder.CurrencyCode;
					public static PLN: com.paypal.checkout.createorder.CurrencyCode;
					public static GBP: com.paypal.checkout.createorder.CurrencyCode;
					public static RUB: com.paypal.checkout.createorder.CurrencyCode;
					public static SGD: com.paypal.checkout.createorder.CurrencyCode;
					public static SEK: com.paypal.checkout.createorder.CurrencyCode;
					public static CHF: com.paypal.checkout.createorder.CurrencyCode;
					public static THB: com.paypal.checkout.createorder.CurrencyCode;
					public static USD: com.paypal.checkout.createorder.CurrencyCode;
					public static valueOf(param0: string): com.paypal.checkout.createorder.CurrencyCode;
					public static values(): androidNative.Array<com.paypal.checkout.createorder.CurrencyCode>;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module createorder {
				export class ItemCategory {
					public static class: java.lang.Class<com.paypal.checkout.createorder.ItemCategory>;
					public static DIGITAL_GOODS: com.paypal.checkout.createorder.ItemCategory;
					public static PHYSICAL_GOODS: com.paypal.checkout.createorder.ItemCategory;
					public static values(): androidNative.Array<com.paypal.checkout.createorder.ItemCategory>;
					public static valueOf(param0: string): com.paypal.checkout.createorder.ItemCategory;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module createorder {
				export abstract class OrderCreateResult {
					public static class: java.lang.Class<com.paypal.checkout.createorder.OrderCreateResult>;
				}
				export module OrderCreateResult {
					export class Error extends com.paypal.checkout.createorder.OrderCreateResult {
						public static class: java.lang.Class<com.paypal.checkout.createorder.OrderCreateResult.Error>;
						public getException(): com.paypal.pyplcheckout.exception.PYPLException;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public component1(): com.paypal.pyplcheckout.exception.PYPLException;
						public constructor(param0: com.paypal.pyplcheckout.exception.PYPLException);
						public toString(): string;
						public copy(param0: com.paypal.pyplcheckout.exception.PYPLException): com.paypal.checkout.createorder.OrderCreateResult.Error;
					}
					export class Success extends com.paypal.checkout.createorder.OrderCreateResult {
						public static class: java.lang.Class<com.paypal.checkout.createorder.OrderCreateResult.Success>;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getOrderId(): string;
						public copy(param0: string): com.paypal.checkout.createorder.OrderCreateResult.Success;
						public toString(): string;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module createorder {
				export class OrderIntent {
					public static class: java.lang.Class<com.paypal.checkout.createorder.OrderIntent>;
					public static CAPTURE: com.paypal.checkout.createorder.OrderIntent;
					public static AUTHORIZE: com.paypal.checkout.createorder.OrderIntent;
					public static values(): androidNative.Array<com.paypal.checkout.createorder.OrderIntent>;
					public static valueOf(param0: string): com.paypal.checkout.createorder.OrderIntent;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module createorder {
				export class ProcessingInstruction {
					public static class: java.lang.Class<com.paypal.checkout.createorder.ProcessingInstruction>;
					public static ORDER_SAVED_EXPLICITLY: com.paypal.checkout.createorder.ProcessingInstruction;
					public static ORDER_SAVED_ON_BUYER_APPROVAL: com.paypal.checkout.createorder.ProcessingInstruction;
					public static ORDER_COMPLETE_ON_PAYMENT_APPROVAL: com.paypal.checkout.createorder.ProcessingInstruction;
					public static NO_INSTRUCTION: com.paypal.checkout.createorder.ProcessingInstruction;
					public static valueOf(param0: string): com.paypal.checkout.createorder.ProcessingInstruction;
					public static values(): androidNative.Array<com.paypal.checkout.createorder.ProcessingInstruction>;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module createorder {
				export class ShippingPreference {
					public static class: java.lang.Class<com.paypal.checkout.createorder.ShippingPreference>;
					public static GET_FROM_FILE: com.paypal.checkout.createorder.ShippingPreference;
					public static NO_SHIPPING: com.paypal.checkout.createorder.ShippingPreference;
					public static SET_PROVIDED_ADDRESS: com.paypal.checkout.createorder.ShippingPreference;
					public static values(): androidNative.Array<com.paypal.checkout.createorder.ShippingPreference>;
					public static valueOf(param0: string): com.paypal.checkout.createorder.ShippingPreference;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module createorder {
				export class ShippingType {
					public static class: java.lang.Class<com.paypal.checkout.createorder.ShippingType>;
					public static SHIPPING: com.paypal.checkout.createorder.ShippingType;
					public static PICKUP: com.paypal.checkout.createorder.ShippingType;
					public static values(): androidNative.Array<com.paypal.checkout.createorder.ShippingType>;
					public static valueOf(param0: string): com.paypal.checkout.createorder.ShippingType;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module createorder {
				export class UserAction {
					public static class: java.lang.Class<com.paypal.checkout.createorder.UserAction>;
					public static CONTINUE: com.paypal.checkout.createorder.UserAction;
					public static PAY_NOW: com.paypal.checkout.createorder.UserAction;
					public static values(): androidNative.Array<com.paypal.checkout.createorder.UserAction>;
					public static valueOf(param0: string): com.paypal.checkout.createorder.UserAction;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module createorder {
				export module UserActionKt {
export module  {
					export class WhenMappings {
						public static class: java.lang.Class<com.paypal.checkout.createorder.UserActionKt.WhenMappings>;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module createorder {
				export module ba {
					export class BaTokenToEcTokenAction {
						public static class: java.lang.Class<com.paypal.checkout.createorder.ba.BaTokenToEcTokenAction>;
						public constructor(param0: com.paypal.checkout.createorder.ba.BaTokenToEcTokenRequestFactory, param1: okhttp3.OkHttpClient, param2: com.google.gson.Gson, param3: kotlinx.coroutines.CoroutineDispatcher);
						public execute(param0: string, param1: any): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module createorder {
				export module ba {
					export class BaTokenToEcTokenAction_Factory extends dagger.internal.Factory<com.paypal.checkout.createorder.ba.BaTokenToEcTokenAction> {
						public static class: java.lang.Class<com.paypal.checkout.createorder.ba.BaTokenToEcTokenAction_Factory>;
						public static create(param0: javax.inject.Provider<com.paypal.checkout.createorder.ba.BaTokenToEcTokenRequestFactory>, param1: javax.inject.Provider<okhttp3.OkHttpClient>, param2: javax.inject.Provider<com.google.gson.Gson>, param3: javax.inject.Provider<kotlinx.coroutines.CoroutineDispatcher>): com.paypal.checkout.createorder.ba.BaTokenToEcTokenAction_Factory;
						public get(): com.paypal.checkout.createorder.ba.BaTokenToEcTokenAction;
						public constructor(param0: javax.inject.Provider<com.paypal.checkout.createorder.ba.BaTokenToEcTokenRequestFactory>, param1: javax.inject.Provider<okhttp3.OkHttpClient>, param2: javax.inject.Provider<com.google.gson.Gson>, param3: javax.inject.Provider<kotlinx.coroutines.CoroutineDispatcher>);
						public static newInstance(param0: com.paypal.checkout.createorder.ba.BaTokenToEcTokenRequestFactory, param1: okhttp3.OkHttpClient, param2: com.google.gson.Gson, param3: kotlinx.coroutines.CoroutineDispatcher): com.paypal.checkout.createorder.ba.BaTokenToEcTokenAction;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module createorder {
				export module ba {
					export class BaTokenToEcTokenRequestFactory {
						public static class: java.lang.Class<com.paypal.checkout.createorder.ba.BaTokenToEcTokenRequestFactory>;
						public create$pyplcheckout_externalThreedsRelease(param0: string): okhttp3.Request;
						public constructor(param0: com.paypal.pyplcheckout.model.DebugConfigManager, param1: okhttp3.Request.Builder);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module createorder {
				export module ba {
					export class BaTokenToEcTokenRequestFactory_Factory extends dagger.internal.Factory<com.paypal.checkout.createorder.ba.BaTokenToEcTokenRequestFactory> {
						public static class: java.lang.Class<com.paypal.checkout.createorder.ba.BaTokenToEcTokenRequestFactory_Factory>;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>, param1: javax.inject.Provider<okhttp3.Request.Builder>);
						public static newInstance(param0: com.paypal.pyplcheckout.model.DebugConfigManager, param1: okhttp3.Request.Builder): com.paypal.checkout.createorder.ba.BaTokenToEcTokenRequestFactory;
						public get(): com.paypal.checkout.createorder.ba.BaTokenToEcTokenRequestFactory;
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>, param1: javax.inject.Provider<okhttp3.Request.Builder>): com.paypal.checkout.createorder.ba.BaTokenToEcTokenRequestFactory_Factory;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module createorder {
				export module ba {
					export class BaTokenToEcTokenResponse {
						public static class: java.lang.Class<com.paypal.checkout.createorder.ba.BaTokenToEcTokenResponse>;
						public copy(param0: com.paypal.checkout.createorder.ba.TokenData): com.paypal.checkout.createorder.ba.BaTokenToEcTokenResponse;
						public constructor(param0: com.paypal.checkout.createorder.ba.TokenData);
						public component1(): com.paypal.checkout.createorder.ba.TokenData;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getData(): com.paypal.checkout.createorder.ba.TokenData;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module createorder {
				export module ba {
					export class TokenData {
						public static class: java.lang.Class<com.paypal.checkout.createorder.ba.TokenData>;
						public copy(param0: string): com.paypal.checkout.createorder.ba.TokenData;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getToken(): string;
						public toString(): string;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module error {
				export class CorrelationIds {
					public static class: java.lang.Class<com.paypal.checkout.error.CorrelationIds>;
					public getLsatUpgradeDebugID(): string;
					public getFetchPayloadDebugID(): string;
					public component2(): string;
					public component5(): string;
					public component7(): string;
					public component3(): string;
					public getCurrencyConversionDebugID(): string;
					public getFinishCheckoutDebugID(): string;
					public equals(param0: any): boolean;
					public toString(): string;
					public component1(): string;
					public constructor();
					public getEligibilityDebugID(): string;
					public getFundingEligibilityDebugID(): string;
					public component6(): string;
					public component4(): string;
					public hashCode(): number;
					public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string);
					public getUpdateClientConfigDebugID(): string;
					public copy(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string): com.paypal.checkout.error.CorrelationIds;
				}
				export module CorrelationIds {
					export class Companion {
						public static class: java.lang.Class<com.paypal.checkout.error.CorrelationIds.Companion>;
						public from$pyplcheckout_externalThreedsRelease(param0: com.paypal.pyplcheckout.services.InternalCorrelationIds): com.paypal.checkout.error.CorrelationIds;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module error {
				export class ErrorInfo {
					public static class: java.lang.Class<com.paypal.checkout.error.ErrorInfo>;
					public getOrderId(): string;
					public component1(): java.lang.Throwable;
					public component2(): string;
					public component5(): string;
					public getNativeSdkVersion(): string;
					public copy(param0: java.lang.Throwable, param1: string, param2: com.paypal.checkout.error.CorrelationIds, param3: string, param4: string): com.paypal.checkout.error.ErrorInfo;
					public getCorrelationIds(): com.paypal.checkout.error.CorrelationIds;
					public getError(): java.lang.Throwable;
					public equals(param0: any): boolean;
					public static createErrorInfo(param0: java.lang.Throwable, param1: com.paypal.checkout.error.ErrorReason, param2: com.paypal.pyplcheckout.model.DebugConfigManager): com.paypal.checkout.error.ErrorInfo;
					public getReason(): string;
					public toString(): string;
					public component3(): com.paypal.checkout.error.CorrelationIds;
					public component4(): string;
					public constructor(param0: java.lang.Throwable, param1: string, param2: com.paypal.checkout.error.CorrelationIds, param3: string, param4: string);
					public hashCode(): number;
				}
				export module ErrorInfo {
					export class Companion {
						public static class: java.lang.Class<com.paypal.checkout.error.ErrorInfo.Companion>;
						public createErrorInfo(param0: java.lang.Throwable, param1: com.paypal.checkout.error.ErrorReason, param2: com.paypal.pyplcheckout.model.DebugConfigManager): com.paypal.checkout.error.ErrorInfo;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module error {
				export class ErrorReason {
					public static class: java.lang.Class<com.paypal.checkout.error.ErrorReason>;
					public static USER_AND_CHECKOUT_ERROR: com.paypal.checkout.error.ErrorReason;
					public static CURRENCY_CONVERSION_ERROR: com.paypal.checkout.error.ErrorReason;
					public static CREATE_ORDER_ERROR: com.paypal.checkout.error.ErrorReason;
					public static APPROVE_ORDER_ERROR: com.paypal.checkout.error.ErrorReason;
					public static PATCH_ORDER_ERROR: com.paypal.checkout.error.ErrorReason;
					public static AUTHENTICATION_ERROR: com.paypal.checkout.error.ErrorReason;
					public static ELIGIBILITY_ERROR: com.paypal.checkout.error.ErrorReason;
					public static SHIPPING_CHANGE_ERROR: com.paypal.checkout.error.ErrorReason;
					public static CANCEL_URL_ERROR: com.paypal.checkout.error.ErrorReason;
					public static FEATURE_NOT_SUPPORTED_ERROR: com.paypal.checkout.error.ErrorReason;
					public static CONTINGENCIES_ERROR: com.paypal.checkout.error.ErrorReason;
					public static FUNDING_ELIGIBILITY_ERROR: com.paypal.checkout.error.ErrorReason;
					public static THREE_DS_ERROR: com.paypal.checkout.error.ErrorReason;
					public static CONTINGENCY_CLEARED_ERROR: com.paypal.checkout.error.ErrorReason;
					public static STRONG_CUSTOMER_AUTHENTICATION_ERROR: com.paypal.checkout.error.ErrorReason;
					public static CLIENT_CONFIG_UPDATE_ERROR: com.paypal.checkout.error.ErrorReason;
					public static NO_INTERNET_CONNECTION: com.paypal.checkout.error.ErrorReason;
					public static NO_ORDER_ID_PRESENT_ERROR: com.paypal.checkout.error.ErrorReason;
					public static NONE: com.paypal.checkout.error.ErrorReason;
					public getReason(): string;
					public static valueOf(param0: string): com.paypal.checkout.error.ErrorReason;
					public static values(): androidNative.Array<com.paypal.checkout.error.ErrorReason>;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module error {
				export class OnError {
					public static class: java.lang.Class<com.paypal.checkout.error.OnError>;
					/**
					 * Constructs a new instance of the com.paypal.checkout.error.OnError interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onError(param0: com.paypal.checkout.error.ErrorInfo): void;
						<clinit>(): void;
					});
					public constructor();
					public onError(param0: com.paypal.checkout.error.ErrorInfo): void;
				}
				export module OnError {
					export class Companion {
						public static class: java.lang.Class<com.paypal.checkout.error.OnError.Companion>;
						public invoke(param0: any<any,any>): com.paypal.checkout.error.OnError;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module fundingeligibility {
				export class FundingEligibilityData {
					public static class: java.lang.Class<com.paypal.checkout.fundingeligibility.FundingEligibilityData>;
					public equals(param0: any): boolean;
					public toString(): string;
					public constructor(param0: com.paypal.checkout.fundingeligibility.FundingEligibilityItems);
					public copy(param0: com.paypal.checkout.fundingeligibility.FundingEligibilityItems): com.paypal.checkout.fundingeligibility.FundingEligibilityData;
					public getFundingEligibility(): com.paypal.checkout.fundingeligibility.FundingEligibilityItems;
					public component1(): com.paypal.checkout.fundingeligibility.FundingEligibilityItems;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module fundingeligibility {
				export class FundingEligibilityItem {
					public static class: java.lang.Class<com.paypal.checkout.fundingeligibility.FundingEligibilityItem>;
					public equals(param0: any): boolean;
					public toString(): string;
					public getReasons(): java.util.List<string>;
					public constructor(param0: boolean, param1: java.util.List<string>);
					public getEligible(): boolean;
					public component2(): java.util.List<string>;
					public copy(param0: boolean, param1: java.util.List<string>): com.paypal.checkout.fundingeligibility.FundingEligibilityItem;
					public component1(): boolean;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module fundingeligibility {
				export class FundingEligibilityItems {
					public static class: java.lang.Class<com.paypal.checkout.fundingeligibility.FundingEligibilityItems>;
					public equals(param0: any): boolean;
					public getPaypal(): com.paypal.checkout.fundingeligibility.FundingEligibilityItem;
					public component1(): com.paypal.checkout.fundingeligibility.FundingEligibilityItem;
					public toString(): string;
					public copy(param0: com.paypal.checkout.fundingeligibility.FundingEligibilityItem, param1: com.paypal.checkout.fundingeligibility.FundingEligibilityItem, param2: com.paypal.checkout.fundingeligibility.FundingEligibilityItem): com.paypal.checkout.fundingeligibility.FundingEligibilityItems;
					public constructor(param0: com.paypal.checkout.fundingeligibility.FundingEligibilityItem, param1: com.paypal.checkout.fundingeligibility.FundingEligibilityItem, param2: com.paypal.checkout.fundingeligibility.FundingEligibilityItem);
					public getCredit(): com.paypal.checkout.fundingeligibility.FundingEligibilityItem;
					public getPaylater(): com.paypal.checkout.fundingeligibility.FundingEligibilityItem;
					public hashCode(): number;
					public component3(): com.paypal.checkout.fundingeligibility.FundingEligibilityItem;
					public component2(): com.paypal.checkout.fundingeligibility.FundingEligibilityItem;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module fundingeligibility {
				export class FundingEligibilityRequestFactory {
					public static class: java.lang.Class<com.paypal.checkout.fundingeligibility.FundingEligibilityRequestFactory>;
					public constructor(param0: com.paypal.pyplcheckout.model.DebugConfigManager);
					public create(param0: com.paypal.checkout.config.PaymentButtonIntent): okhttp3.Request;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module fundingeligibility {
				export class FundingEligibilityRequestFactory_Factory extends dagger.internal.Factory<com.paypal.checkout.fundingeligibility.FundingEligibilityRequestFactory> {
					public static class: java.lang.Class<com.paypal.checkout.fundingeligibility.FundingEligibilityRequestFactory_Factory>;
					public get(): com.paypal.checkout.fundingeligibility.FundingEligibilityRequestFactory;
					public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>): com.paypal.checkout.fundingeligibility.FundingEligibilityRequestFactory_Factory;
					public static newInstance(param0: com.paypal.pyplcheckout.model.DebugConfigManager): com.paypal.checkout.fundingeligibility.FundingEligibilityRequestFactory;
					public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module fundingeligibility {
				export class FundingEligibilityResponse {
					public static class: java.lang.Class<com.paypal.checkout.fundingeligibility.FundingEligibilityResponse>;
					public getData(): com.paypal.checkout.fundingeligibility.FundingEligibilityData;
					public component2(): java.util.List<com.paypal.pyplcheckout.pojo.Error>;
					public equals(param0: any): boolean;
					public toString(): string;
					public getError(): java.util.List<com.paypal.pyplcheckout.pojo.Error>;
					public component1(): com.paypal.checkout.fundingeligibility.FundingEligibilityData;
					public copy(param0: com.paypal.checkout.fundingeligibility.FundingEligibilityData, param1: java.util.List<com.paypal.pyplcheckout.pojo.Error>): com.paypal.checkout.fundingeligibility.FundingEligibilityResponse;
					public constructor(param0: com.paypal.checkout.fundingeligibility.FundingEligibilityData, param1: java.util.List<com.paypal.pyplcheckout.pojo.Error>);
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module fundingeligibility {
				export class RetrieveFundingEligibilityAction {
					public static class: java.lang.Class<com.paypal.checkout.fundingeligibility.RetrieveFundingEligibilityAction>;
					public retrieve(param0: com.paypal.checkout.config.PaymentButtonIntent, param1: any): any;
					public constructor(param0: com.paypal.checkout.fundingeligibility.FundingEligibilityRequestFactory, param1: okhttp3.OkHttpClient, param2: kotlinx.coroutines.CoroutineDispatcher);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module fundingeligibility {
				export class RetrieveFundingEligibilityAction_Factory extends dagger.internal.Factory<com.paypal.checkout.fundingeligibility.RetrieveFundingEligibilityAction> {
					public static class: java.lang.Class<com.paypal.checkout.fundingeligibility.RetrieveFundingEligibilityAction_Factory>;
					public static newInstance(param0: com.paypal.checkout.fundingeligibility.FundingEligibilityRequestFactory, param1: okhttp3.OkHttpClient, param2: kotlinx.coroutines.CoroutineDispatcher): com.paypal.checkout.fundingeligibility.RetrieveFundingEligibilityAction;
					public static create(param0: javax.inject.Provider<com.paypal.checkout.fundingeligibility.FundingEligibilityRequestFactory>, param1: javax.inject.Provider<okhttp3.OkHttpClient>, param2: javax.inject.Provider<kotlinx.coroutines.CoroutineDispatcher>): com.paypal.checkout.fundingeligibility.RetrieveFundingEligibilityAction_Factory;
					public get(): com.paypal.checkout.fundingeligibility.RetrieveFundingEligibilityAction;
					public constructor(param0: javax.inject.Provider<com.paypal.checkout.fundingeligibility.FundingEligibilityRequestFactory>, param1: javax.inject.Provider<okhttp3.OkHttpClient>, param2: javax.inject.Provider<kotlinx.coroutines.CoroutineDispatcher>);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module internal {
				export module build {
					export abstract class BuildValidationStatus {
						public static class: java.lang.Class<com.paypal.checkout.internal.build.BuildValidationStatus>;
					}
					export module BuildValidationStatus {
						export abstract class Invalid extends com.paypal.checkout.internal.build.BuildValidationStatus {
							public static class: java.lang.Class<com.paypal.checkout.internal.build.BuildValidationStatus.Invalid>;
							public getReason(): string;
						}
						export module Invalid {
							export class Expired extends com.paypal.checkout.internal.build.BuildValidationStatus.Invalid {
								public static class: java.lang.Class<com.paypal.checkout.internal.build.BuildValidationStatus.Invalid.Expired>;
								public component1(): string;
								public toString(): string;
								public copy(param0: string): com.paypal.checkout.internal.build.BuildValidationStatus.Invalid.Expired;
								public getReason(): string;
								public equals(param0: any): boolean;
								public constructor(param0: string);
								public hashCode(): number;
							}
						}
						export class Valid extends com.paypal.checkout.internal.build.BuildValidationStatus {
							public static class: java.lang.Class<com.paypal.checkout.internal.build.BuildValidationStatus.Valid>;
							public static INSTANCE: com.paypal.checkout.internal.build.BuildValidationStatus.Valid;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module internal {
				export module build {
					export class BuildValidator {
						public static class: java.lang.Class<com.paypal.checkout.internal.build.BuildValidator>;
						public constructor(param0: string, param1: java.util.Date);
						public getValidationStatus(): com.paypal.checkout.internal.build.BuildValidationStatus;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module merchanttoken {
				export class CreateLsatTokenAction {
					public static class: java.lang.Class<com.paypal.checkout.merchanttoken.CreateLsatTokenAction>;
					public static ERROR_RESPONSE_BODY_NULL: string;
					public static ERROR_RESPONSE_BODY_TO_STRING_FAILED: string;
					public static ERROR_ACCESS_TOKEN_MISSING: string;
					public static ERROR_UNABLE_TO_CREATE_ACCESS_TOKEN: string;
					public execute(param0: any): any;
					public constructor(param0: com.paypal.pyplcheckout.model.DebugConfigManager, param1: com.paypal.checkout.merchanttoken.LsatTokenRequestFactory, param2: okhttp3.OkHttpClient, param3: kotlinx.coroutines.CoroutineDispatcher);
				}
				export module CreateLsatTokenAction {
					export class Companion {
						public static class: java.lang.Class<com.paypal.checkout.merchanttoken.CreateLsatTokenAction.Companion>;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module merchanttoken {
				export class CreateLsatTokenAction_Factory extends dagger.internal.Factory<com.paypal.checkout.merchanttoken.CreateLsatTokenAction> {
					public static class: java.lang.Class<com.paypal.checkout.merchanttoken.CreateLsatTokenAction_Factory>;
					public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>, param1: javax.inject.Provider<com.paypal.checkout.merchanttoken.LsatTokenRequestFactory>, param2: javax.inject.Provider<okhttp3.OkHttpClient>, param3: javax.inject.Provider<kotlinx.coroutines.CoroutineDispatcher>): com.paypal.checkout.merchanttoken.CreateLsatTokenAction_Factory;
					public static newInstance(param0: com.paypal.pyplcheckout.model.DebugConfigManager, param1: com.paypal.checkout.merchanttoken.LsatTokenRequestFactory, param2: okhttp3.OkHttpClient, param3: kotlinx.coroutines.CoroutineDispatcher): com.paypal.checkout.merchanttoken.CreateLsatTokenAction;
					public get(): com.paypal.checkout.merchanttoken.CreateLsatTokenAction;
					public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>, param1: javax.inject.Provider<com.paypal.checkout.merchanttoken.LsatTokenRequestFactory>, param2: javax.inject.Provider<okhttp3.OkHttpClient>, param3: javax.inject.Provider<kotlinx.coroutines.CoroutineDispatcher>);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module merchanttoken {
				export class CreateLsatTokenException {
					public static class: java.lang.Class<com.paypal.checkout.merchanttoken.CreateLsatTokenException>;
					public constructor(param0: string, param1: java.lang.Throwable);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module merchanttoken {
				export class GetLsatTokenAction {
					public static class: java.lang.Class<com.paypal.checkout.merchanttoken.GetLsatTokenAction>;
					public execute(param0: any): any;
					public constructor(param0: com.paypal.pyplcheckout.services.Repository, param1: com.paypal.checkout.merchanttoken.CreateLsatTokenAction);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module merchanttoken {
				export class GetLsatTokenAction_Factory extends dagger.internal.Factory<com.paypal.checkout.merchanttoken.GetLsatTokenAction> {
					public static class: java.lang.Class<com.paypal.checkout.merchanttoken.GetLsatTokenAction_Factory>;
					public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param1: javax.inject.Provider<com.paypal.checkout.merchanttoken.CreateLsatTokenAction>);
					public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param1: javax.inject.Provider<com.paypal.checkout.merchanttoken.CreateLsatTokenAction>): com.paypal.checkout.merchanttoken.GetLsatTokenAction_Factory;
					public get(): com.paypal.checkout.merchanttoken.GetLsatTokenAction;
					public static newInstance(param0: com.paypal.pyplcheckout.services.Repository, param1: com.paypal.checkout.merchanttoken.CreateLsatTokenAction): com.paypal.checkout.merchanttoken.GetLsatTokenAction;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module merchanttoken {
				export class LsatTokenRequestFactory {
					public static class: java.lang.Class<com.paypal.checkout.merchanttoken.LsatTokenRequestFactory>;
					public constructor(param0: com.paypal.pyplcheckout.model.DebugConfigManager);
					public create(param0: string): okhttp3.Request;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module merchanttoken {
				export class LsatTokenRequestFactory_Factory extends dagger.internal.Factory<com.paypal.checkout.merchanttoken.LsatTokenRequestFactory> {
					public static class: java.lang.Class<com.paypal.checkout.merchanttoken.LsatTokenRequestFactory_Factory>;
					public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>): com.paypal.checkout.merchanttoken.LsatTokenRequestFactory_Factory;
					public static newInstance(param0: com.paypal.pyplcheckout.model.DebugConfigManager): com.paypal.checkout.merchanttoken.LsatTokenRequestFactory;
					public get(): com.paypal.checkout.merchanttoken.LsatTokenRequestFactory;
					public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module merchanttoken {
				export class UpgradeLsatTokenAction {
					public static class: java.lang.Class<com.paypal.checkout.merchanttoken.UpgradeLsatTokenAction>;
					public static ERROR_LSAT_UPGRADE_FAILED: string;
					public execute(param0: any): any;
					public constructor(param0: com.paypal.pyplcheckout.services.Repository, param1: kotlinx.coroutines.CoroutineDispatcher);
				}
				export module UpgradeLsatTokenAction {
					export class Companion {
						public static class: java.lang.Class<com.paypal.checkout.merchanttoken.UpgradeLsatTokenAction.Companion>;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module merchanttoken {
				export class UpgradeLsatTokenAction_Factory extends dagger.internal.Factory<com.paypal.checkout.merchanttoken.UpgradeLsatTokenAction> {
					public static class: java.lang.Class<com.paypal.checkout.merchanttoken.UpgradeLsatTokenAction_Factory>;
					public static newInstance(param0: com.paypal.pyplcheckout.services.Repository, param1: kotlinx.coroutines.CoroutineDispatcher): com.paypal.checkout.merchanttoken.UpgradeLsatTokenAction;
					public get(): com.paypal.checkout.merchanttoken.UpgradeLsatTokenAction;
					public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param1: javax.inject.Provider<kotlinx.coroutines.CoroutineDispatcher>);
					public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param1: javax.inject.Provider<kotlinx.coroutines.CoroutineDispatcher>): com.paypal.checkout.merchanttoken.UpgradeLsatTokenAction_Factory;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module merchanttoken {
				export abstract class UpgradeLsatTokenResponse {
					public static class: java.lang.Class<com.paypal.checkout.merchanttoken.UpgradeLsatTokenResponse>;
				}
				export module UpgradeLsatTokenResponse {
					export class Failed extends com.paypal.checkout.merchanttoken.UpgradeLsatTokenResponse {
						public static class: java.lang.Class<com.paypal.checkout.merchanttoken.UpgradeLsatTokenResponse.Failed>;
						public static INSTANCE: com.paypal.checkout.merchanttoken.UpgradeLsatTokenResponse.Failed;
					}
					export class Success extends com.paypal.checkout.merchanttoken.UpgradeLsatTokenResponse {
						public static class: java.lang.Class<com.paypal.checkout.merchanttoken.UpgradeLsatTokenResponse.Success>;
						public getUpgradedAccessToken(): string;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public copy(param0: string): com.paypal.checkout.merchanttoken.UpgradeLsatTokenResponse.Success;
						public toString(): string;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export class Address {
					public static class: java.lang.Class<com.paypal.checkout.order.Address>;
					public getAddressLine1(): string;
					public component2(): string;
					public component5(): string;
					public getCountryCode(): string;
					public getAdminArea2(): string;
					public component3(): string;
					public copy(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string): com.paypal.checkout.order.Address;
					public equals(param0: any): boolean;
					public toString(): string;
					public component1(): string;
					public getAddressLine2(): string;
					public getAdminArea1(): string;
					public component6(): string;
					public component4(): string;
					public getPostalCode(): string;
					public hashCode(): number;
					public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string);
				}
				export module Address {
					export class Builder {
						public static class: java.lang.Class<com.paypal.checkout.order.Address.Builder>;
						public adminArea1(param0: string): com.paypal.checkout.order.Address.Builder;
						public constructor();
						public addressLine1(param0: string): com.paypal.checkout.order.Address.Builder;
						public countryCode(param0: string): com.paypal.checkout.order.Address.Builder;
						public postalCode(param0: string): com.paypal.checkout.order.Address.Builder;
						public build(): com.paypal.checkout.order.Address;
						public addressLine2(param0: string): com.paypal.checkout.order.Address.Builder;
						public adminArea2(param0: string): com.paypal.checkout.order.Address.Builder;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export class Amount {
					public static class: java.lang.Class<com.paypal.checkout.order.Amount>;
					public component1(): com.paypal.checkout.createorder.CurrencyCode;
					public equals(param0: any): boolean;
					public getCurrencyCode(): com.paypal.checkout.createorder.CurrencyCode;
					public getValue(): string;
					public copy(param0: com.paypal.checkout.createorder.CurrencyCode, param1: string, param2: com.paypal.checkout.order.BreakDown): com.paypal.checkout.order.Amount;
					public toString(): string;
					public component2(): string;
					public getBreakdown(): com.paypal.checkout.order.BreakDown;
					public component3(): com.paypal.checkout.order.BreakDown;
					public constructor(param0: com.paypal.checkout.createorder.CurrencyCode, param1: string, param2: com.paypal.checkout.order.BreakDown);
					public hashCode(): number;
				}
				export module Amount {
					export class Builder {
						public static class: java.lang.Class<com.paypal.checkout.order.Amount.Builder>;
						public constructor();
						public build(): com.paypal.checkout.order.Amount;
						public currencyCode(param0: com.paypal.checkout.createorder.CurrencyCode): com.paypal.checkout.order.Amount.Builder;
						public value(param0: string): com.paypal.checkout.order.Amount.Builder;
						public breakdown(param0: com.paypal.checkout.order.BreakDown): com.paypal.checkout.order.Amount.Builder;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export class AppContext {
					public static class: java.lang.Class<com.paypal.checkout.order.AppContext>;
					public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: com.paypal.checkout.createorder.ShippingPreference, param6: com.paypal.checkout.createorder.UserAction);
					public getShippingPreference(): com.paypal.checkout.createorder.ShippingPreference;
					public getLocale(): string;
					public getCancelUrl(): string;
					public getBrandName(): string;
					public constructor();
					public getUserAction(): com.paypal.checkout.createorder.UserAction;
					public getLandingPage(): string;
					public getReturnUrl(): string;
				}
				export module AppContext {
					export class Builder {
						public static class: java.lang.Class<com.paypal.checkout.order.AppContext.Builder>;
						public constructor();
						public returnUrl(param0: string): com.paypal.checkout.order.AppContext.Builder;
						public build(): com.paypal.checkout.order.AppContext;
						public userAction(param0: com.paypal.checkout.createorder.UserAction): com.paypal.checkout.order.AppContext.Builder;
						public landingPage(param0: string): com.paypal.checkout.order.AppContext.Builder;
						public cancelUrl(param0: string): com.paypal.checkout.order.AppContext.Builder;
						public shippingPreference(param0: com.paypal.checkout.createorder.ShippingPreference): com.paypal.checkout.order.AppContext.Builder;
						public brandName(param0: string): com.paypal.checkout.order.AppContext.Builder;
						public locale(param0: string): com.paypal.checkout.order.AppContext.Builder;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export class Authorization {
					public static class: java.lang.Class<com.paypal.checkout.order.Authorization>;
					public getAmount(): com.paypal.checkout.order.UnitAmount;
					public copy(param0: string, param1: string, param2: com.paypal.checkout.order.UnitAmount, param3: com.paypal.checkout.order.SellerProtection): com.paypal.checkout.order.Authorization;
					public getId(): string;
					public component2(): string;
					public getStatus(): string;
					public component3(): com.paypal.checkout.order.UnitAmount;
					public equals(param0: any): boolean;
					public component4(): com.paypal.checkout.order.SellerProtection;
					public toString(): string;
					public getSellerProtection(): com.paypal.checkout.order.SellerProtection;
					public component1(): string;
					public constructor(param0: string, param1: string, param2: com.paypal.checkout.order.UnitAmount, param3: com.paypal.checkout.order.SellerProtection);
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export class AuthorizeOrderAction {
					public static class: java.lang.Class<com.paypal.checkout.order.AuthorizeOrderAction>;
					public execute(param0: any): any;
					public constructor(param0: com.paypal.checkout.order.UpdateOrderStatusAction, param1: kotlinx.coroutines.CoroutineDispatcher);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export class AuthorizeOrderAction_Factory extends dagger.internal.Factory<com.paypal.checkout.order.AuthorizeOrderAction> {
					public static class: java.lang.Class<com.paypal.checkout.order.AuthorizeOrderAction_Factory>;
					public get(): com.paypal.checkout.order.AuthorizeOrderAction;
					public static newInstance(param0: com.paypal.checkout.order.UpdateOrderStatusAction, param1: kotlinx.coroutines.CoroutineDispatcher): com.paypal.checkout.order.AuthorizeOrderAction;
					public static create(param0: javax.inject.Provider<com.paypal.checkout.order.UpdateOrderStatusAction>, param1: javax.inject.Provider<kotlinx.coroutines.CoroutineDispatcher>): com.paypal.checkout.order.AuthorizeOrderAction_Factory;
					public constructor(param0: javax.inject.Provider<com.paypal.checkout.order.UpdateOrderStatusAction>, param1: javax.inject.Provider<kotlinx.coroutines.CoroutineDispatcher>);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export abstract class AuthorizeOrderResult {
					public static class: java.lang.Class<com.paypal.checkout.order.AuthorizeOrderResult>;
				}
				export module AuthorizeOrderResult {
					export class Error extends com.paypal.checkout.order.AuthorizeOrderResult {
						public static class: java.lang.Class<com.paypal.checkout.order.AuthorizeOrderResult.Error>;
						public static ERROR_MESSAGE_AUTHORIZE_ORDER: string;
						public static ERROR_REASON_NO_AUTHORIZE_URL: string;
						public static ERROR_REASON_LSAT_UPGRADE_FAILED: string;
						public static ERROR_REASON_AUTHORIZE_FAILED: string;
						public getMessage(): string;
						public copy(param0: string, param1: string): com.paypal.checkout.order.AuthorizeOrderResult.Error;
						public component2(): string;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public constructor(param0: string, param1: string);
						public getReason(): string;
						public toString(): string;
					}
					export module Error {
						export class Companion {
							public static class: java.lang.Class<com.paypal.checkout.order.AuthorizeOrderResult.Error.Companion>;
						}
					}
					export class Success extends com.paypal.checkout.order.AuthorizeOrderResult {
						public static class: java.lang.Class<com.paypal.checkout.order.AuthorizeOrderResult.Success>;
						public constructor(param0: com.paypal.checkout.order.OrderResponse);
						public getOrderResponse(): com.paypal.checkout.order.OrderResponse;
						public component1(): com.paypal.checkout.order.OrderResponse;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public toString(): string;
						public copy(param0: com.paypal.checkout.order.OrderResponse): com.paypal.checkout.order.AuthorizeOrderResult.Success;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export class BreakDown {
					public static class: java.lang.Class<com.paypal.checkout.order.BreakDown>;
					public getShipping(): com.paypal.checkout.order.UnitAmount;
					public getDiscount(): com.paypal.checkout.order.UnitAmount;
					public getHandling(): com.paypal.checkout.order.UnitAmount;
					public component5(): com.paypal.checkout.order.UnitAmount;
					public component6(): com.paypal.checkout.order.UnitAmount;
					public getItemTotal(): com.paypal.checkout.order.UnitAmount;
					public constructor(param0: com.paypal.checkout.order.UnitAmount, param1: com.paypal.checkout.order.UnitAmount, param2: com.paypal.checkout.order.UnitAmount, param3: com.paypal.checkout.order.UnitAmount, param4: com.paypal.checkout.order.UnitAmount, param5: com.paypal.checkout.order.UnitAmount);
					public getShippingDiscount(): com.paypal.checkout.order.UnitAmount;
					public component3(): com.paypal.checkout.order.UnitAmount;
					public equals(param0: any): boolean;
					public getTaxTotal(): com.paypal.checkout.order.UnitAmount;
					public toString(): string;
					public constructor();
					public component4(): com.paypal.checkout.order.UnitAmount;
					public copy(param0: com.paypal.checkout.order.UnitAmount, param1: com.paypal.checkout.order.UnitAmount, param2: com.paypal.checkout.order.UnitAmount, param3: com.paypal.checkout.order.UnitAmount, param4: com.paypal.checkout.order.UnitAmount, param5: com.paypal.checkout.order.UnitAmount): com.paypal.checkout.order.BreakDown;
					public component1(): com.paypal.checkout.order.UnitAmount;
					public hashCode(): number;
					public component2(): com.paypal.checkout.order.UnitAmount;
				}
				export module BreakDown {
					export class Builder {
						public static class: java.lang.Class<com.paypal.checkout.order.BreakDown.Builder>;
						public discount(param0: com.paypal.checkout.order.UnitAmount): com.paypal.checkout.order.BreakDown.Builder;
						public constructor();
						public taxTotal(param0: com.paypal.checkout.order.UnitAmount): com.paypal.checkout.order.BreakDown.Builder;
						public handling(param0: com.paypal.checkout.order.UnitAmount): com.paypal.checkout.order.BreakDown.Builder;
						public shippingDiscount(param0: com.paypal.checkout.order.UnitAmount): com.paypal.checkout.order.BreakDown.Builder;
						public shipping(param0: com.paypal.checkout.order.UnitAmount): com.paypal.checkout.order.BreakDown.Builder;
						public itemTotal(param0: com.paypal.checkout.order.UnitAmount): com.paypal.checkout.order.BreakDown.Builder;
						public build(): com.paypal.checkout.order.BreakDown;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export class Capture {
					public static class: java.lang.Class<com.paypal.checkout.order.Capture>;
					public getFinalCapture(): boolean;
					public getAmount(): com.paypal.checkout.order.UnitAmount;
					public getId(): string;
					public component2(): string;
					public getStatus(): string;
					public component5(): com.paypal.checkout.order.SellerProtection;
					public constructor(param0: string, param1: string, param2: com.paypal.checkout.order.UnitAmount, param3: boolean, param4: com.paypal.checkout.order.SellerProtection);
					public component3(): com.paypal.checkout.order.UnitAmount;
					public equals(param0: any): boolean;
					public toString(): string;
					public getSellerProtection(): com.paypal.checkout.order.SellerProtection;
					public component1(): string;
					public component4(): boolean;
					public copy(param0: string, param1: string, param2: com.paypal.checkout.order.UnitAmount, param3: boolean, param4: com.paypal.checkout.order.SellerProtection): com.paypal.checkout.order.Capture;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export class CaptureOrderAction {
					public static class: java.lang.Class<com.paypal.checkout.order.CaptureOrderAction>;
					public execute(param0: any): any;
					public constructor(param0: com.paypal.checkout.order.UpdateOrderStatusAction, param1: kotlinx.coroutines.CoroutineDispatcher);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export class CaptureOrderAction_Factory extends dagger.internal.Factory<com.paypal.checkout.order.CaptureOrderAction> {
					public static class: java.lang.Class<com.paypal.checkout.order.CaptureOrderAction_Factory>;
					public get(): com.paypal.checkout.order.CaptureOrderAction;
					public static newInstance(param0: com.paypal.checkout.order.UpdateOrderStatusAction, param1: kotlinx.coroutines.CoroutineDispatcher): com.paypal.checkout.order.CaptureOrderAction;
					public constructor(param0: javax.inject.Provider<com.paypal.checkout.order.UpdateOrderStatusAction>, param1: javax.inject.Provider<kotlinx.coroutines.CoroutineDispatcher>);
					public static create(param0: javax.inject.Provider<com.paypal.checkout.order.UpdateOrderStatusAction>, param1: javax.inject.Provider<kotlinx.coroutines.CoroutineDispatcher>): com.paypal.checkout.order.CaptureOrderAction_Factory;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export abstract class CaptureOrderResult {
					public static class: java.lang.Class<com.paypal.checkout.order.CaptureOrderResult>;
				}
				export module CaptureOrderResult {
					export class Error extends com.paypal.checkout.order.CaptureOrderResult {
						public static class: java.lang.Class<com.paypal.checkout.order.CaptureOrderResult.Error>;
						public static ERROR_MESSAGE_CAPTURE_ORDER: string;
						public static ERROR_REASON_NO_CAPTURE_URL: string;
						public static ERROR_REASON_LSAT_UPGRADE_FAILED: string;
						public static ERROR_REASON_CAPTURE_FAILED: string;
						public getMessage(): string;
						public component2(): string;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public copy(param0: string, param1: string): com.paypal.checkout.order.CaptureOrderResult.Error;
						public constructor(param0: string, param1: string);
						public getReason(): string;
						public toString(): string;
					}
					export module Error {
						export class Companion {
							public static class: java.lang.Class<com.paypal.checkout.order.CaptureOrderResult.Error.Companion>;
						}
					}
					export class Success extends com.paypal.checkout.order.CaptureOrderResult {
						public static class: java.lang.Class<com.paypal.checkout.order.CaptureOrderResult.Success>;
						public copy(param0: com.paypal.checkout.order.OrderResponse): com.paypal.checkout.order.CaptureOrderResult.Success;
						public constructor(param0: com.paypal.checkout.order.OrderResponse);
						public getOrderResponse(): com.paypal.checkout.order.OrderResponse;
						public component1(): com.paypal.checkout.order.OrderResponse;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export class DisputeCategory {
					public static class: java.lang.Class<com.paypal.checkout.order.DisputeCategory>;
					public static ITEM_NOT_RECEIVED: com.paypal.checkout.order.DisputeCategory;
					public static UNAUTHORIZED_TRANSACTION: com.paypal.checkout.order.DisputeCategory;
					public static values(): androidNative.Array<com.paypal.checkout.order.DisputeCategory>;
					public static valueOf(param0: string): com.paypal.checkout.order.DisputeCategory;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export class GetOrderAction {
					public static class: java.lang.Class<com.paypal.checkout.order.GetOrderAction>;
					public execute(param0: any): any;
					public constructor(param0: kotlinx.coroutines.CoroutineDispatcher, param1: com.paypal.checkout.merchanttoken.GetLsatTokenAction, param2: com.paypal.checkout.merchanttoken.UpgradeLsatTokenAction, param3: com.paypal.checkout.order.GetOrderRequestFactory, param4: okhttp3.OkHttpClient, param5: com.google.gson.Gson);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export class GetOrderAction_Factory extends dagger.internal.Factory<com.paypal.checkout.order.GetOrderAction> {
					public static class: java.lang.Class<com.paypal.checkout.order.GetOrderAction_Factory>;
					public static create(param0: javax.inject.Provider<kotlinx.coroutines.CoroutineDispatcher>, param1: javax.inject.Provider<com.paypal.checkout.merchanttoken.GetLsatTokenAction>, param2: javax.inject.Provider<com.paypal.checkout.merchanttoken.UpgradeLsatTokenAction>, param3: javax.inject.Provider<com.paypal.checkout.order.GetOrderRequestFactory>, param4: javax.inject.Provider<okhttp3.OkHttpClient>, param5: javax.inject.Provider<com.google.gson.Gson>): com.paypal.checkout.order.GetOrderAction_Factory;
					public get(): com.paypal.checkout.order.GetOrderAction;
					public static newInstance(param0: kotlinx.coroutines.CoroutineDispatcher, param1: com.paypal.checkout.merchanttoken.GetLsatTokenAction, param2: com.paypal.checkout.merchanttoken.UpgradeLsatTokenAction, param3: com.paypal.checkout.order.GetOrderRequestFactory, param4: okhttp3.OkHttpClient, param5: com.google.gson.Gson): com.paypal.checkout.order.GetOrderAction;
					public constructor(param0: javax.inject.Provider<kotlinx.coroutines.CoroutineDispatcher>, param1: javax.inject.Provider<com.paypal.checkout.merchanttoken.GetLsatTokenAction>, param2: javax.inject.Provider<com.paypal.checkout.merchanttoken.UpgradeLsatTokenAction>, param3: javax.inject.Provider<com.paypal.checkout.order.GetOrderRequestFactory>, param4: javax.inject.Provider<okhttp3.OkHttpClient>, param5: javax.inject.Provider<com.google.gson.Gson>);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export class GetOrderRequestFactory {
					public static class: java.lang.Class<com.paypal.checkout.order.GetOrderRequestFactory>;
					public create(param0: com.paypal.checkout.order.OrderContext, param1: string): okhttp3.Request;
					public constructor(param0: com.paypal.pyplcheckout.model.DebugConfigManager, param1: okhttp3.Request.Builder);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export class GetOrderRequestFactory_Factory extends dagger.internal.Factory<com.paypal.checkout.order.GetOrderRequestFactory> {
					public static class: java.lang.Class<com.paypal.checkout.order.GetOrderRequestFactory_Factory>;
					public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>, param1: javax.inject.Provider<okhttp3.Request.Builder>);
					public static newInstance(param0: com.paypal.pyplcheckout.model.DebugConfigManager, param1: okhttp3.Request.Builder): com.paypal.checkout.order.GetOrderRequestFactory;
					public get(): com.paypal.checkout.order.GetOrderRequestFactory;
					public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>, param1: javax.inject.Provider<okhttp3.Request.Builder>): com.paypal.checkout.order.GetOrderRequestFactory_Factory;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export abstract class GetOrderResult {
					public static class: java.lang.Class<com.paypal.checkout.order.GetOrderResult>;
				}
				export module GetOrderResult {
					export class Error extends com.paypal.checkout.order.GetOrderResult {
						public static class: java.lang.Class<com.paypal.checkout.order.GetOrderResult.Error>;
						public static ERROR_MESSAGE_GET_ORDER_FAILED: string;
						public static ERROR_REASON_CAPTURE_FAILED: string;
						public getMessage(): string;
						public component2(): string;
						public copy(param0: string, param1: string): com.paypal.checkout.order.GetOrderResult.Error;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public constructor(param0: string, param1: string);
						public getReason(): string;
						public toString(): string;
					}
					export module Error {
						export class Companion {
							public static class: java.lang.Class<com.paypal.checkout.order.GetOrderResult.Error.Companion>;
						}
					}
					export class Success extends com.paypal.checkout.order.GetOrderResult {
						public static class: java.lang.Class<com.paypal.checkout.order.GetOrderResult.Success>;
						public constructor(param0: com.paypal.checkout.order.OrderResponse);
						public getOrderResponse(): com.paypal.checkout.order.OrderResponse;
						public component1(): com.paypal.checkout.order.OrderResponse;
						public copy(param0: com.paypal.checkout.order.OrderResponse): com.paypal.checkout.order.GetOrderResult.Success;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export class Items {
					public static class: java.lang.Class<com.paypal.checkout.order.Items>;
					public getName(): string;
					public getSku(): string;
					public getUnitAmount(): com.paypal.checkout.order.UnitAmount;
					public getQuantity(): string;
					public getCategory(): com.paypal.checkout.createorder.ItemCategory;
					public getTax(): com.paypal.checkout.order.UnitAmount;
					public getDescription(): string;
				}
				export module Items {
					export class Builder {
						public static class: java.lang.Class<com.paypal.checkout.order.Items.Builder>;
						public quantity(param0: string): com.paypal.checkout.order.Items.Builder;
						public unitAmount(param0: com.paypal.checkout.order.UnitAmount): com.paypal.checkout.order.Items.Builder;
						public constructor();
						public tax(param0: com.paypal.checkout.order.UnitAmount): com.paypal.checkout.order.Items.Builder;
						public sku(param0: string): com.paypal.checkout.order.Items.Builder;
						public build(): com.paypal.checkout.order.Items;
						public name(param0: string): com.paypal.checkout.order.Items.Builder;
						public description(param0: string): com.paypal.checkout.order.Items.Builder;
						public category(param0: com.paypal.checkout.createorder.ItemCategory): com.paypal.checkout.order.Items.Builder;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export class NoValidUpdateOrderStatusUrlFound {
					public static class: java.lang.Class<com.paypal.checkout.order.NoValidUpdateOrderStatusUrlFound>;
					public constructor(param0: com.paypal.checkout.order.OrderContext);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export class OnAuthorizeComplete {
					public static class: java.lang.Class<com.paypal.checkout.order.OnAuthorizeComplete>;
					/**
					 * Constructs a new instance of the com.paypal.checkout.order.OnAuthorizeComplete interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onAuthorizeComplete(param0: com.paypal.checkout.order.AuthorizeOrderResult): void;
						<clinit>(): void;
					});
					public constructor();
					public onAuthorizeComplete(param0: com.paypal.checkout.order.AuthorizeOrderResult): void;
				}
				export module OnAuthorizeComplete {
					export class Companion {
						public static class: java.lang.Class<com.paypal.checkout.order.OnAuthorizeComplete.Companion>;
						public invoke(param0: any<any,any>): com.paypal.checkout.order.OnAuthorizeComplete;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export class OnCaptureComplete {
					public static class: java.lang.Class<com.paypal.checkout.order.OnCaptureComplete>;
					/**
					 * Constructs a new instance of the com.paypal.checkout.order.OnCaptureComplete interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onCaptureComplete(param0: com.paypal.checkout.order.CaptureOrderResult): void;
						<clinit>(): void;
					});
					public constructor();
					public onCaptureComplete(param0: com.paypal.checkout.order.CaptureOrderResult): void;
				}
				export module OnCaptureComplete {
					export class Companion {
						public static class: java.lang.Class<com.paypal.checkout.order.OnCaptureComplete.Companion>;
						public invoke(param0: any<any,any>): com.paypal.checkout.order.OnCaptureComplete;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export class OnExecuteBillingAgreementComplete {
					public static class: java.lang.Class<com.paypal.checkout.order.OnExecuteBillingAgreementComplete>;
					/**
					 * Constructs a new instance of the com.paypal.checkout.order.OnExecuteBillingAgreementComplete interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onExecuteBillingAgreementComplete(param0: com.paypal.checkout.order.billingagreements.ExecuteBillingAgreementResult): void;
						<clinit>(): void;
					});
					public constructor();
					public onExecuteBillingAgreementComplete(param0: com.paypal.checkout.order.billingagreements.ExecuteBillingAgreementResult): void;
				}
				export module OnExecuteBillingAgreementComplete {
					export class Companion {
						public static class: java.lang.Class<com.paypal.checkout.order.OnExecuteBillingAgreementComplete.Companion>;
						public invoke(param0: any<any,any>): com.paypal.checkout.order.OnExecuteBillingAgreementComplete;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export class OnGetOrderDetailsComplete {
					public static class: java.lang.Class<com.paypal.checkout.order.OnGetOrderDetailsComplete>;
					/**
					 * Constructs a new instance of the com.paypal.checkout.order.OnGetOrderDetailsComplete interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onGetOrderDetailsComplete(param0: com.paypal.checkout.order.GetOrderResult): void;
						<clinit>(): void;
					});
					public constructor();
					public onGetOrderDetailsComplete(param0: com.paypal.checkout.order.GetOrderResult): void;
				}
				export module OnGetOrderDetailsComplete {
					export class Companion {
						public static class: java.lang.Class<com.paypal.checkout.order.OnGetOrderDetailsComplete.Companion>;
						public invoke(param0: any<any,any>): com.paypal.checkout.order.OnGetOrderDetailsComplete;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export class Options {
					public static class: java.lang.Class<com.paypal.checkout.order.Options>;
					public getLabel(): string;
					public getType(): com.paypal.checkout.createorder.ShippingType;
					public getAmount(): com.paypal.checkout.order.UnitAmount;
					public getId(): string;
					public component3(): string;
					public copy(param0: string, param1: boolean, param2: string, param3: com.paypal.checkout.createorder.ShippingType, param4: com.paypal.checkout.order.UnitAmount): com.paypal.checkout.order.Options;
					public component5(): com.paypal.checkout.order.UnitAmount;
					public equals(param0: any): boolean;
					public toString(): string;
					public getSelected(): boolean;
					public component1(): string;
					public component4(): com.paypal.checkout.createorder.ShippingType;
					public constructor(param0: string, param1: boolean, param2: string, param3: com.paypal.checkout.createorder.ShippingType, param4: com.paypal.checkout.order.UnitAmount);
					public hashCode(): number;
					public component2(): boolean;
				}
				export module Options {
					export class Builder {
						public static class: java.lang.Class<com.paypal.checkout.order.Options.Builder>;
						public id(param0: string): com.paypal.checkout.order.Options.Builder;
						public constructor();
						public type(param0: com.paypal.checkout.createorder.ShippingType): com.paypal.checkout.order.Options.Builder;
						public build(): com.paypal.checkout.order.Options;
						public amount(param0: com.paypal.checkout.order.UnitAmount): com.paypal.checkout.order.Options.Builder;
						public label(param0: string): com.paypal.checkout.order.Options.Builder;
						public selected(param0: boolean): com.paypal.checkout.order.Options.Builder;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export class Order {
					public static class: java.lang.Class<com.paypal.checkout.order.Order>;
					public constructor(param0: com.paypal.checkout.createorder.OrderIntent, param1: java.util.List<com.paypal.checkout.order.PurchaseUnit>);
					public constructor(param0: com.paypal.checkout.createorder.OrderIntent, param1: com.paypal.checkout.order.AppContext, param2: java.util.List<com.paypal.checkout.order.PurchaseUnit>, param3: com.paypal.checkout.createorder.ProcessingInstruction);
					public getAppContext(): com.paypal.checkout.order.AppContext;
					public constructor(param0: com.paypal.checkout.createorder.OrderIntent, param1: com.paypal.checkout.order.AppContext, param2: java.util.List<com.paypal.checkout.order.PurchaseUnit>);
					public getPurchaseUnitList(): java.util.List<com.paypal.checkout.order.PurchaseUnit>;
					public getProcessingInstruction(): com.paypal.checkout.createorder.ProcessingInstruction;
					public getIntent(): com.paypal.checkout.createorder.OrderIntent;
				}
				export module Order {
					export class Builder {
						public static class: java.lang.Class<com.paypal.checkout.order.Order.Builder>;
						public constructor();
						public intent(param0: com.paypal.checkout.createorder.OrderIntent): com.paypal.checkout.order.Order.Builder;
						public processingInstruction(param0: com.paypal.checkout.createorder.ProcessingInstruction): com.paypal.checkout.order.Order.Builder;
						public appContext(param0: com.paypal.checkout.order.AppContext): com.paypal.checkout.order.Order.Builder;
						public build(): com.paypal.checkout.order.Order;
						public purchaseUnitList(param0: java.util.List<com.paypal.checkout.order.PurchaseUnit>): com.paypal.checkout.order.Order.Builder;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export class OrderActions {
					public static class: java.lang.Class<com.paypal.checkout.order.OrderActions>;
					public authorize(param0: com.paypal.checkout.order.OnAuthorizeComplete): void;
					public capture(param0: any<any,any>): void;
					public authorize(param0: any<any,any>): void;
					public patchOrder(param0: com.paypal.checkout.order.patch.PatchOrderRequest, param1: com.paypal.checkout.order.actions.OnPatchComplete): void;
					public executeBillingAgreement(param0: any<any,any>): void;
					public executeBillingAgreement(param0: com.paypal.checkout.order.OnExecuteBillingAgreementComplete): void;
					public getOrderDetails(param0: com.paypal.checkout.order.OnGetOrderDetailsComplete): void;
					public constructor(param0: com.paypal.checkout.order.CaptureOrderAction, param1: com.paypal.checkout.order.AuthorizeOrderAction, param2: com.paypal.checkout.order.actions.PatchAction, param3: com.paypal.checkout.order.billingagreements.ExecuteBillingAgreementAction, param4: com.paypal.checkout.order.GetOrderAction, param5: any);
					public patchOrder(param0: com.paypal.checkout.order.patch.PatchOrderRequest, param1: any): void;
					public capture(param0: com.paypal.checkout.order.OnCaptureComplete): void;
					public getOrderDetails(param0: any<any,any>): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export class OrderActions_Factory extends dagger.internal.Factory<com.paypal.checkout.order.OrderActions> {
					public static class: java.lang.Class<com.paypal.checkout.order.OrderActions_Factory>;
					public constructor(param0: javax.inject.Provider<com.paypal.checkout.order.CaptureOrderAction>, param1: javax.inject.Provider<com.paypal.checkout.order.AuthorizeOrderAction>, param2: javax.inject.Provider<com.paypal.checkout.order.actions.PatchAction>, param3: javax.inject.Provider<com.paypal.checkout.order.billingagreements.ExecuteBillingAgreementAction>, param4: javax.inject.Provider<com.paypal.checkout.order.GetOrderAction>, param5: javax.inject.Provider<any>);
					public get(): com.paypal.checkout.order.OrderActions;
					public static newInstance(param0: com.paypal.checkout.order.CaptureOrderAction, param1: com.paypal.checkout.order.AuthorizeOrderAction, param2: com.paypal.checkout.order.actions.PatchAction, param3: com.paypal.checkout.order.billingagreements.ExecuteBillingAgreementAction, param4: com.paypal.checkout.order.GetOrderAction, param5: any): com.paypal.checkout.order.OrderActions;
					public static create(param0: javax.inject.Provider<com.paypal.checkout.order.CaptureOrderAction>, param1: javax.inject.Provider<com.paypal.checkout.order.AuthorizeOrderAction>, param2: javax.inject.Provider<com.paypal.checkout.order.actions.PatchAction>, param3: javax.inject.Provider<com.paypal.checkout.order.billingagreements.ExecuteBillingAgreementAction>, param4: javax.inject.Provider<com.paypal.checkout.order.GetOrderAction>, param5: javax.inject.Provider<any>): com.paypal.checkout.order.OrderActions_Factory;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export class OrderContext {
					public static class: java.lang.Class<com.paypal.checkout.order.OrderContext>;
					public getOrderId(): string;
					public getCaptureUrl(): string;
					public component2(): string;
					public getOrderIntent(): com.paypal.checkout.createorder.OrderIntent;
					public component3(): string;
					public getAuthorizeUrl(): string;
					public copy(param0: string, param1: string, param2: string, param3: string): com.paypal.checkout.order.OrderContext;
					public equals(param0: any): boolean;
					public toString(): string;
					public constructor(param0: string, param1: string, param2: string, param3: string);
					public component1(): string;
					public component4(): string;
					public getPatchUrl(): string;
					public hashCode(): number;
					public static create(param0: string, param1: string, param2: string, param3: string): void;
				}
				export module OrderContext {
					export class Companion {
						public static class: java.lang.Class<com.paypal.checkout.order.OrderContext.Companion>;
						public create(param0: string, param1: string, param2: string, param3: string): void;
						public clear(): void;
						public get(): com.paypal.checkout.order.OrderContext;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export class OrderContextNotAvailableException {
					public static class: java.lang.Class<com.paypal.checkout.order.OrderContextNotAvailableException>;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export class OrderResponse {
					public static class: java.lang.Class<com.paypal.checkout.order.OrderResponse>;
					public getId(): string;
					public constructor(param0: string, param1: com.paypal.checkout.order.OrderStatus, param2: java.util.List<com.paypal.checkout.order.PurchaseUnit>, param3: com.paypal.checkout.order.Payer);
					public getPurchaseUnits(): java.util.List<com.paypal.checkout.order.PurchaseUnit>;
					public component4(): com.paypal.checkout.order.Payer;
					public component3(): java.util.List<com.paypal.checkout.order.PurchaseUnit>;
					public getPayer(): com.paypal.checkout.order.Payer;
					public equals(param0: any): boolean;
					public toString(): string;
					public component1(): string;
					public copy(param0: string, param1: com.paypal.checkout.order.OrderStatus, param2: java.util.List<com.paypal.checkout.order.PurchaseUnit>, param3: com.paypal.checkout.order.Payer): com.paypal.checkout.order.OrderResponse;
					public component2(): com.paypal.checkout.order.OrderStatus;
					public hashCode(): number;
					public getStatus(): com.paypal.checkout.order.OrderStatus;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export class OrderStatus {
					public static class: java.lang.Class<com.paypal.checkout.order.OrderStatus>;
					public static CREATED: com.paypal.checkout.order.OrderStatus;
					public static SAVED: com.paypal.checkout.order.OrderStatus;
					public static APPROVED: com.paypal.checkout.order.OrderStatus;
					public static VOIDED: com.paypal.checkout.order.OrderStatus;
					public static COMPLETED: com.paypal.checkout.order.OrderStatus;
					public static PAYER_ACTION_REQUIRED: com.paypal.checkout.order.OrderStatus;
					public static values(): androidNative.Array<com.paypal.checkout.order.OrderStatus>;
					public static valueOf(param0: string): com.paypal.checkout.order.OrderStatus;
				}
				export module OrderStatus {
					export class Companion {
						public static class: java.lang.Class<com.paypal.checkout.order.OrderStatus.Companion>;
						public invoke(param0: string): com.paypal.checkout.order.OrderStatus;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export class Payee {
					public static class: java.lang.Class<com.paypal.checkout.order.Payee>;
					public constructor(param0: string, param1: string);
					public equals(param0: any): boolean;
					public toString(): string;
					public component1(): string;
					public component2(): string;
					public constructor();
					public copy(param0: string, param1: string): com.paypal.checkout.order.Payee;
					public getEmailAddress(): string;
					public getMerchantId(): string;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export class Payer {
					public static class: java.lang.Class<com.paypal.checkout.order.Payer>;
					public copy(param0: string, param1: string, param2: com.paypal.checkout.order.Payer.Name, param3: com.paypal.checkout.order.Payer.Address, param4: com.paypal.checkout.order.Payer.Phone, param5: string, param6: com.paypal.checkout.order.Payer.TaxInfo): com.paypal.checkout.order.Payer;
					public component2(): string;
					public constructor(param0: string, param1: string, param2: com.paypal.checkout.order.Payer.Name, param3: com.paypal.checkout.order.Payer.Address, param4: com.paypal.checkout.order.Payer.Phone, param5: string, param6: com.paypal.checkout.order.Payer.TaxInfo);
					public component4(): com.paypal.checkout.order.Payer.Address;
					public component7(): com.paypal.checkout.order.Payer.TaxInfo;
					public component5(): com.paypal.checkout.order.Payer.Phone;
					public getBirthDate(): string;
					public getPhone(): com.paypal.checkout.order.Payer.Phone;
					public equals(param0: any): boolean;
					public getName(): com.paypal.checkout.order.Payer.Name;
					public component3(): com.paypal.checkout.order.Payer.Name;
					public toString(): string;
					public component1(): string;
					public component6(): string;
					public getAddress(): com.paypal.checkout.order.Payer.Address;
					public getTaxInfo(): com.paypal.checkout.order.Payer.TaxInfo;
					public getEmailAddress(): string;
					public hashCode(): number;
					public getPayerId(): string;
				}
				export module Payer {
					export class Address {
						public static class: java.lang.Class<com.paypal.checkout.order.Payer.Address>;
						public component3(): string;
						public component5(): string;
						public getAddressLine1(): string;
						public getAdminArea2(): string;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getPostalCode(): string;
						public getAddressLine2(): string;
						public getCountryCode(): string;
						public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string);
						public toString(): string;
						public component4(): string;
						public component2(): string;
						public getAdminArea1(): string;
						public component6(): string;
						public copy(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string): com.paypal.checkout.order.Payer.Address;
					}
					export class Name {
						public static class: java.lang.Class<com.paypal.checkout.order.Payer.Name>;
						public copy(param0: string, param1: string): com.paypal.checkout.order.Payer.Name;
						public component2(): string;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public constructor(param0: string, param1: string);
						public getGivenName(): string;
						public getSurname(): string;
						public toString(): string;
					}
					export class Phone {
						public static class: java.lang.Class<com.paypal.checkout.order.Payer.Phone>;
						public getPhoneType(): string;
						public component2(): com.paypal.checkout.order.Payer.Phone.Number;
						public copy(param0: string, param1: com.paypal.checkout.order.Payer.Phone.Number): com.paypal.checkout.order.Payer.Phone;
						public getPhoneNumber(): com.paypal.checkout.order.Payer.Phone.Number;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public constructor(param0: string, param1: com.paypal.checkout.order.Payer.Phone.Number);
						public toString(): string;
					}
					export module Phone {
						export class Number {
							public static class: java.lang.Class<com.paypal.checkout.order.Payer.Phone.Number>;
							public getNationalNumber(): string;
							public hashCode(): number;
							public constructor(param0: string);
							public copy(param0: string): com.paypal.checkout.order.Payer.Phone.Number;
							public toString(): string;
							public equals(param0: any): boolean;
							public component1(): string;
						}
					}
					export class TaxInfo {
						public static class: java.lang.Class<com.paypal.checkout.order.Payer.TaxInfo>;
						public component2(): string;
						public component1(): string;
						public copy(param0: string, param1: string): com.paypal.checkout.order.Payer.TaxInfo;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getTaxId(): string;
						public getTaxIdType(): string;
						public constructor(param0: string, param1: string);
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export class Payments {
					public static class: java.lang.Class<com.paypal.checkout.order.Payments>;
					public equals(param0: any): boolean;
					public component2(): java.util.List<com.paypal.checkout.order.Authorization>;
					public toString(): string;
					public constructor(param0: java.util.List<com.paypal.checkout.order.Capture>, param1: java.util.List<com.paypal.checkout.order.Authorization>);
					public getAuthorizations(): java.util.List<com.paypal.checkout.order.Authorization>;
					public getCaptures(): java.util.List<com.paypal.checkout.order.Capture>;
					public hashCode(): number;
					public component1(): java.util.List<com.paypal.checkout.order.Capture>;
					public copy(param0: java.util.List<com.paypal.checkout.order.Capture>, param1: java.util.List<com.paypal.checkout.order.Authorization>): com.paypal.checkout.order.Payments;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export class PurchaseUnit {
					public static class: java.lang.Class<com.paypal.checkout.order.PurchaseUnit>;
					public component8(): com.paypal.checkout.order.Payments;
					public component2(): string;
					public component5(): string;
					public constructor(param0: string, param1: string, param2: string, param3: string, param4: com.paypal.checkout.order.Amount);
					public getShipping(): com.paypal.checkout.order.Shipping;
					public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: com.paypal.checkout.order.Shipping, param6: java.util.List<com.paypal.checkout.order.Items>, param7: com.paypal.checkout.order.Payments, param8: com.paypal.checkout.order.Amount);
					public getPayee(): com.paypal.checkout.order.Payee;
					public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: com.paypal.checkout.order.Shipping, param6: java.util.List<com.paypal.checkout.order.Items>, param7: com.paypal.checkout.order.Payments, param8: com.paypal.checkout.order.Payee, param9: com.paypal.checkout.order.Amount);
					public component9(): com.paypal.checkout.order.Payee;
					public getSoftDescriptor(): string;
					public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: com.paypal.checkout.order.Amount);
					public getInvoiceId(): string;
					public toString(): string;
					public constructor(param0: string, param1: string, param2: string, param3: com.paypal.checkout.order.Amount);
					public constructor(param0: com.paypal.checkout.order.Amount);
					public component4(): string;
					public copy(param0: string, param1: string, param2: string, param3: string, param4: string, param5: com.paypal.checkout.order.Shipping, param6: java.util.List<com.paypal.checkout.order.Items>, param7: com.paypal.checkout.order.Payments, param8: com.paypal.checkout.order.Payee, param9: com.paypal.checkout.order.Amount): com.paypal.checkout.order.PurchaseUnit;
					public hashCode(): number;
					public constructor(param0: string, param1: com.paypal.checkout.order.Amount);
					public getCustomId(): string;
					public getPayments(): com.paypal.checkout.order.Payments;
					public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: com.paypal.checkout.order.Shipping, param6: com.paypal.checkout.order.Amount);
					public component3(): string;
					public getItems(): java.util.List<com.paypal.checkout.order.Items>;
					public getReferenceId(): string;
					public equals(param0: any): boolean;
					public component10(): com.paypal.checkout.order.Amount;
					public component1(): string;
					public component6(): com.paypal.checkout.order.Shipping;
					public constructor(param0: string, param1: string, param2: com.paypal.checkout.order.Amount);
					public component7(): java.util.List<com.paypal.checkout.order.Items>;
					public getDescription(): string;
					public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: com.paypal.checkout.order.Shipping, param6: java.util.List<com.paypal.checkout.order.Items>, param7: com.paypal.checkout.order.Amount);
					public getAmount(): com.paypal.checkout.order.Amount;
				}
				export module PurchaseUnit {
					export class Builder {
						public static class: java.lang.Class<com.paypal.checkout.order.PurchaseUnit.Builder>;
						public shipping(param0: com.paypal.checkout.order.Shipping): com.paypal.checkout.order.PurchaseUnit.Builder;
						public constructor();
						public referenceId(param0: string): com.paypal.checkout.order.PurchaseUnit.Builder;
						public items(param0: java.util.List<com.paypal.checkout.order.Items>): com.paypal.checkout.order.PurchaseUnit.Builder;
						public amount(param0: com.paypal.checkout.order.Amount): com.paypal.checkout.order.PurchaseUnit.Builder;
						public build(): com.paypal.checkout.order.PurchaseUnit;
						public description(param0: string): com.paypal.checkout.order.PurchaseUnit.Builder;
						public invoiceId(param0: string): com.paypal.checkout.order.PurchaseUnit.Builder;
						public softDescriptor(param0: string): com.paypal.checkout.order.PurchaseUnit.Builder;
						public payee(param0: com.paypal.checkout.order.Payee): com.paypal.checkout.order.PurchaseUnit.Builder;
						public customId(param0: string): com.paypal.checkout.order.PurchaseUnit.Builder;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export class SellerProtection {
					public static class: java.lang.Class<com.paypal.checkout.order.SellerProtection>;
					public equals(param0: any): boolean;
					public toString(): string;
					public constructor(param0: com.paypal.checkout.order.SellerProtectionStatus, param1: java.util.List<any>);
					public getStatus(): com.paypal.checkout.order.SellerProtectionStatus;
					public getDisputeCategories(): java.util.List<com.paypal.checkout.order.DisputeCategory>;
					public component1(): com.paypal.checkout.order.SellerProtectionStatus;
					public component2(): java.util.List<com.paypal.checkout.order.DisputeCategory>;
					public copy(param0: com.paypal.checkout.order.SellerProtectionStatus, param1: java.util.List<any>): com.paypal.checkout.order.SellerProtection;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export class SellerProtectionStatus {
					public static class: java.lang.Class<com.paypal.checkout.order.SellerProtectionStatus>;
					public static ELIGIBLE: com.paypal.checkout.order.SellerProtectionStatus;
					public static PARTIALLY_ELIGIBLE: com.paypal.checkout.order.SellerProtectionStatus;
					public static NOT_ELIGIBLE: com.paypal.checkout.order.SellerProtectionStatus;
					public static values(): androidNative.Array<com.paypal.checkout.order.SellerProtectionStatus>;
					public static valueOf(param0: string): com.paypal.checkout.order.SellerProtectionStatus;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export class Shipping {
					public static class: java.lang.Class<com.paypal.checkout.order.Shipping>;
					public equals(param0: any): boolean;
					public component1(): com.paypal.checkout.order.Address;
					public toString(): string;
					public copy(param0: com.paypal.checkout.order.Address, param1: java.util.List<com.paypal.checkout.order.Options>): com.paypal.checkout.order.Shipping;
					public constructor();
					public constructor(param0: com.paypal.checkout.order.Address, param1: java.util.List<com.paypal.checkout.order.Options>);
					public component2(): java.util.List<com.paypal.checkout.order.Options>;
					public getAddress(): com.paypal.checkout.order.Address;
					public getOptions(): java.util.List<com.paypal.checkout.order.Options>;
					public hashCode(): number;
				}
				export module Shipping {
					export class Builder {
						public static class: java.lang.Class<com.paypal.checkout.order.Shipping.Builder>;
						public build(): com.paypal.checkout.order.Shipping;
						public constructor();
						public options(param0: java.util.List<com.paypal.checkout.order.Options>): com.paypal.checkout.order.Shipping.Builder;
						public address(param0: com.paypal.checkout.order.Address): com.paypal.checkout.order.Shipping.Builder;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export class UnitAmount {
					public static class: java.lang.Class<com.paypal.checkout.order.UnitAmount>;
					public component1(): com.paypal.checkout.createorder.CurrencyCode;
					public copy(param0: com.paypal.checkout.createorder.CurrencyCode, param1: string): com.paypal.checkout.order.UnitAmount;
					public equals(param0: any): boolean;
					public getCurrencyCode(): com.paypal.checkout.createorder.CurrencyCode;
					public getValue(): string;
					public toString(): string;
					public constructor(param0: com.paypal.checkout.createorder.CurrencyCode, param1: string);
					public component2(): string;
					public hashCode(): number;
				}
				export module UnitAmount {
					export class Builder {
						public static class: java.lang.Class<com.paypal.checkout.order.UnitAmount.Builder>;
						public constructor();
						public build(): com.paypal.checkout.order.UnitAmount;
						public currencyCode(param0: com.paypal.checkout.createorder.CurrencyCode): com.paypal.checkout.order.UnitAmount.Builder;
						public value(param0: string): com.paypal.checkout.order.UnitAmount.Builder;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export class UpdateOrderStatusAction {
					public static class: java.lang.Class<com.paypal.checkout.order.UpdateOrderStatusAction>;
					public execute(param0: any): any;
					public constructor(param0: com.paypal.checkout.order.UpdateOrderStatusRequestFactory, param1: com.paypal.checkout.merchanttoken.UpgradeLsatTokenAction, param2: com.paypal.pyplcheckout.model.DebugConfigManager, param3: okhttp3.OkHttpClient, param4: com.google.gson.Gson, param5: kotlinx.coroutines.CoroutineDispatcher, param6: kotlinx.coroutines.CoroutineDispatcher);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export class UpdateOrderStatusAction_Factory extends dagger.internal.Factory<com.paypal.checkout.order.UpdateOrderStatusAction> {
					public static class: java.lang.Class<com.paypal.checkout.order.UpdateOrderStatusAction_Factory>;
					public static create(param0: javax.inject.Provider<com.paypal.checkout.order.UpdateOrderStatusRequestFactory>, param1: javax.inject.Provider<com.paypal.checkout.merchanttoken.UpgradeLsatTokenAction>, param2: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>, param3: javax.inject.Provider<okhttp3.OkHttpClient>, param4: javax.inject.Provider<com.google.gson.Gson>, param5: javax.inject.Provider<kotlinx.coroutines.CoroutineDispatcher>, param6: javax.inject.Provider<kotlinx.coroutines.CoroutineDispatcher>): com.paypal.checkout.order.UpdateOrderStatusAction_Factory;
					public static newInstance(param0: com.paypal.checkout.order.UpdateOrderStatusRequestFactory, param1: com.paypal.checkout.merchanttoken.UpgradeLsatTokenAction, param2: com.paypal.pyplcheckout.model.DebugConfigManager, param3: okhttp3.OkHttpClient, param4: com.google.gson.Gson, param5: kotlinx.coroutines.CoroutineDispatcher, param6: kotlinx.coroutines.CoroutineDispatcher): com.paypal.checkout.order.UpdateOrderStatusAction;
					public constructor(param0: javax.inject.Provider<com.paypal.checkout.order.UpdateOrderStatusRequestFactory>, param1: javax.inject.Provider<com.paypal.checkout.merchanttoken.UpgradeLsatTokenAction>, param2: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>, param3: javax.inject.Provider<okhttp3.OkHttpClient>, param4: javax.inject.Provider<com.google.gson.Gson>, param5: javax.inject.Provider<kotlinx.coroutines.CoroutineDispatcher>, param6: javax.inject.Provider<kotlinx.coroutines.CoroutineDispatcher>);
					public get(): com.paypal.checkout.order.UpdateOrderStatusAction;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export class UpdateOrderStatusRequestFactory {
					public static class: java.lang.Class<com.paypal.checkout.order.UpdateOrderStatusRequestFactory>;
					public constructor();
					public create(param0: com.paypal.checkout.order.OrderContext, param1: string): okhttp3.Request;
				}
				export module UpdateOrderStatusRequestFactory {
					export class WhenMappings {
						public static class: java.lang.Class<com.paypal.checkout.order.UpdateOrderStatusRequestFactory.WhenMappings>;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export class UpdateOrderStatusRequestFactory_Factory extends dagger.internal.Factory<com.paypal.checkout.order.UpdateOrderStatusRequestFactory> {
					public static class: java.lang.Class<com.paypal.checkout.order.UpdateOrderStatusRequestFactory_Factory>;
					public static newInstance(): com.paypal.checkout.order.UpdateOrderStatusRequestFactory;
					public get(): com.paypal.checkout.order.UpdateOrderStatusRequestFactory;
					public constructor();
					public static create(): com.paypal.checkout.order.UpdateOrderStatusRequestFactory_Factory;
				}
				export module UpdateOrderStatusRequestFactory_Factory {
					export class InstanceHolder {
						public static class: java.lang.Class<com.paypal.checkout.order.UpdateOrderStatusRequestFactory_Factory.InstanceHolder>;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export abstract class UpdateOrderStatusResult {
					public static class: java.lang.Class<com.paypal.checkout.order.UpdateOrderStatusResult>;
				}
				export module UpdateOrderStatusResult {
					export abstract class Error extends com.paypal.checkout.order.UpdateOrderStatusResult {
						public static class: java.lang.Class<com.paypal.checkout.order.UpdateOrderStatusResult.Error>;
					}
					export module Error {
						export class InvalidUpdateOrderRequest extends com.paypal.checkout.order.UpdateOrderStatusResult.Error {
							public static class: java.lang.Class<com.paypal.checkout.order.UpdateOrderStatusResult.Error.InvalidUpdateOrderRequest>;
							public static INSTANCE: com.paypal.checkout.order.UpdateOrderStatusResult.Error.InvalidUpdateOrderRequest;
						}
						export class LsatTokenUpgradeError extends com.paypal.checkout.order.UpdateOrderStatusResult.Error {
							public static class: java.lang.Class<com.paypal.checkout.order.UpdateOrderStatusResult.Error.LsatTokenUpgradeError>;
							public static INSTANCE: com.paypal.checkout.order.UpdateOrderStatusResult.Error.LsatTokenUpgradeError;
						}
						export class UpdateOrderStatusError extends com.paypal.checkout.order.UpdateOrderStatusResult.Error {
							public static class: java.lang.Class<com.paypal.checkout.order.UpdateOrderStatusResult.Error.UpdateOrderStatusError>;
							public getResponseCode(): number;
							public component1(): number;
							public hashCode(): number;
							public toString(): string;
							public equals(param0: any): boolean;
							public constructor(param0: number);
							public copy(param0: number): com.paypal.checkout.order.UpdateOrderStatusResult.Error.UpdateOrderStatusError;
						}
					}
					export class Success extends com.paypal.checkout.order.UpdateOrderStatusResult {
						public static class: java.lang.Class<com.paypal.checkout.order.UpdateOrderStatusResult.Success>;
						public constructor(param0: com.paypal.checkout.order.OrderResponse);
						public getOrderResponse(): com.paypal.checkout.order.OrderResponse;
						public component1(): com.paypal.checkout.order.OrderResponse;
						public copy(param0: com.paypal.checkout.order.OrderResponse): com.paypal.checkout.order.UpdateOrderStatusResult.Success;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export module actions {
					export class OnPatchComplete {
						public static class: java.lang.Class<com.paypal.checkout.order.actions.OnPatchComplete>;
						/**
						 * Constructs a new instance of the com.paypal.checkout.order.actions.OnPatchComplete interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onPatchComplete(): void;
							<clinit>(): void;
						});
						public constructor();
						public onPatchComplete(): void;
					}
					export module OnPatchComplete {
						export class Companion {
							public static class: java.lang.Class<com.paypal.checkout.order.actions.OnPatchComplete.Companion>;
							public invoke(param0: any): com.paypal.checkout.order.actions.OnPatchComplete;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export module actions {
					export class PatchAction {
						public static class: java.lang.Class<com.paypal.checkout.order.actions.PatchAction>;
						public patchOrder(param0: com.paypal.checkout.order.patch.PatchOrderRequest, param1: com.paypal.checkout.order.actions.OnPatchComplete): void;
						public constructor(param0: com.paypal.checkout.order.patch.PatchOrderAction, param1: com.paypal.pyplcheckout.events.Events, param2: any);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export module actions {
					export class PatchAction_Factory extends dagger.internal.Factory<com.paypal.checkout.order.actions.PatchAction> {
						public static class: java.lang.Class<com.paypal.checkout.order.actions.PatchAction_Factory>;
						public constructor(param0: javax.inject.Provider<com.paypal.checkout.order.patch.PatchOrderAction>, param1: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param2: javax.inject.Provider<any>);
						public static newInstance(param0: com.paypal.checkout.order.patch.PatchOrderAction, param1: com.paypal.pyplcheckout.events.Events, param2: any): com.paypal.checkout.order.actions.PatchAction;
						public static create(param0: javax.inject.Provider<com.paypal.checkout.order.patch.PatchOrderAction>, param1: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param2: javax.inject.Provider<any>): com.paypal.checkout.order.actions.PatchAction_Factory;
						public get(): com.paypal.checkout.order.actions.PatchAction;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export module billingagreements {
					export abstract class BillingAgreementActionsModule {
						public static class: java.lang.Class<com.paypal.checkout.order.billingagreements.BillingAgreementActionsModule>;
						public constructor();
						public provideExecuteBillingAgreementAction(param0: com.paypal.checkout.order.billingagreements.ExecuteBillingAgreementActionImpl): com.paypal.checkout.order.billingagreements.ExecuteBillingAgreementAction;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export module billingagreements {
					export class ExecuteBillingAgreementAction {
						public static class: java.lang.Class<com.paypal.checkout.order.billingagreements.ExecuteBillingAgreementAction>;
						/**
						 * Constructs a new instance of the com.paypal.checkout.order.billingagreements.ExecuteBillingAgreementAction interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							execute(param0: any): any;
						});
						public constructor();
						public execute(param0: any): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export module billingagreements {
					export class ExecuteBillingAgreementActionImpl extends com.paypal.checkout.order.billingagreements.ExecuteBillingAgreementAction {
						public static class: java.lang.Class<com.paypal.checkout.order.billingagreements.ExecuteBillingAgreementActionImpl>;
						public execute(param0: any): any;
						public constructor(param0: com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsRepository, param1: com.paypal.checkout.merchanttoken.CreateLsatTokenAction, param2: com.paypal.checkout.order.billingagreements.ExecuteBillingAgreementRequestFactory, param3: com.paypal.pyplcheckout.services.Repository, param4: okhttp3.OkHttpClient, param5: com.google.gson.Gson, param6: kotlinx.coroutines.CoroutineDispatcher);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export module billingagreements {
					export class ExecuteBillingAgreementActionImpl_Factory extends dagger.internal.Factory<com.paypal.checkout.order.billingagreements.ExecuteBillingAgreementActionImpl> {
						public static class: java.lang.Class<com.paypal.checkout.order.billingagreements.ExecuteBillingAgreementActionImpl_Factory>;
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsRepository>, param1: javax.inject.Provider<com.paypal.checkout.merchanttoken.CreateLsatTokenAction>, param2: javax.inject.Provider<com.paypal.checkout.order.billingagreements.ExecuteBillingAgreementRequestFactory>, param3: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param4: javax.inject.Provider<okhttp3.OkHttpClient>, param5: javax.inject.Provider<com.google.gson.Gson>, param6: javax.inject.Provider<kotlinx.coroutines.CoroutineDispatcher>): com.paypal.checkout.order.billingagreements.ExecuteBillingAgreementActionImpl_Factory;
						public get(): com.paypal.checkout.order.billingagreements.ExecuteBillingAgreementActionImpl;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsRepository>, param1: javax.inject.Provider<com.paypal.checkout.merchanttoken.CreateLsatTokenAction>, param2: javax.inject.Provider<com.paypal.checkout.order.billingagreements.ExecuteBillingAgreementRequestFactory>, param3: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param4: javax.inject.Provider<okhttp3.OkHttpClient>, param5: javax.inject.Provider<com.google.gson.Gson>, param6: javax.inject.Provider<kotlinx.coroutines.CoroutineDispatcher>);
						public static newInstance(param0: com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsRepository, param1: com.paypal.checkout.merchanttoken.CreateLsatTokenAction, param2: com.paypal.checkout.order.billingagreements.ExecuteBillingAgreementRequestFactory, param3: com.paypal.pyplcheckout.services.Repository, param4: okhttp3.OkHttpClient, param5: com.google.gson.Gson, param6: kotlinx.coroutines.CoroutineDispatcher): com.paypal.checkout.order.billingagreements.ExecuteBillingAgreementActionImpl;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export module billingagreements {
					export class ExecuteBillingAgreementRequestFactory {
						public static class: java.lang.Class<com.paypal.checkout.order.billingagreements.ExecuteBillingAgreementRequestFactory>;
						public create(param0: string, param1: string): okhttp3.Request;
						public constructor(param0: com.paypal.pyplcheckout.model.DebugConfigManager, param1: okhttp3.Request.Builder);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export module billingagreements {
					export class ExecuteBillingAgreementRequestFactory_Factory extends dagger.internal.Factory<com.paypal.checkout.order.billingagreements.ExecuteBillingAgreementRequestFactory> {
						public static class: java.lang.Class<com.paypal.checkout.order.billingagreements.ExecuteBillingAgreementRequestFactory_Factory>;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>, param1: javax.inject.Provider<okhttp3.Request.Builder>);
						public static newInstance(param0: com.paypal.pyplcheckout.model.DebugConfigManager, param1: okhttp3.Request.Builder): com.paypal.checkout.order.billingagreements.ExecuteBillingAgreementRequestFactory;
						public get(): com.paypal.checkout.order.billingagreements.ExecuteBillingAgreementRequestFactory;
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>, param1: javax.inject.Provider<okhttp3.Request.Builder>): com.paypal.checkout.order.billingagreements.ExecuteBillingAgreementRequestFactory_Factory;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export module billingagreements {
					export abstract class ExecuteBillingAgreementResult {
						public static class: java.lang.Class<com.paypal.checkout.order.billingagreements.ExecuteBillingAgreementResult>;
					}
					export module ExecuteBillingAgreementResult {
						export class Error extends com.paypal.checkout.order.billingagreements.ExecuteBillingAgreementResult {
							public static class: java.lang.Class<com.paypal.checkout.order.billingagreements.ExecuteBillingAgreementResult.Error>;
							public static DEFAULT_ERROR_MESSAGE: string;
							public static ERROR_REASON_LSAT_UPGRADE_FAILED: string;
							public static ERROR_REASON_BA_ID_FAILED: string;
							public static ERROR_REASON_NULL_BA_TOKEN: string;
							public static ERROR_REASON_EMPTY_RESPONSE: string;
							public component2(): string;
							public hashCode(): number;
							public constructor(param0: string, param1: string);
							public copy(param0: string, param1: string): com.paypal.checkout.order.billingagreements.ExecuteBillingAgreementResult.Error;
							public toString(): string;
							public equals(param0: any): boolean;
							public component1(): string;
							public getReason(): string;
							public getErrorMessage(): string;
						}
						export module Error {
							export class Companion {
								public static class: java.lang.Class<com.paypal.checkout.order.billingagreements.ExecuteBillingAgreementResult.Error.Companion>;
							}
						}
						export class Success extends com.paypal.checkout.order.billingagreements.ExecuteBillingAgreementResult {
							public static class: java.lang.Class<com.paypal.checkout.order.billingagreements.ExecuteBillingAgreementResult.Success>;
							public component2(): string;
							public hashCode(): number;
							public constructor(param0: string, param1: string);
							public toString(): string;
							public copy(param0: string, param1: string): com.paypal.checkout.order.billingagreements.ExecuteBillingAgreementResult.Success;
							public equals(param0: any): boolean;
							public getBillingId(): string;
							public getStatus(): string;
							public component1(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export module billingagreements {
					export class GetBillingIdError {
						public static class: java.lang.Class<com.paypal.checkout.order.billingagreements.GetBillingIdError>;
						public getMessage(): string;
						public getErrorName(): string;
						public component2(): string;
						public copy(param0: string, param1: string): com.paypal.checkout.order.billingagreements.GetBillingIdError;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public constructor(param0: string, param1: string);
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export module billingagreements {
					export class GetBillingIdResponse {
						public static class: java.lang.Class<com.paypal.checkout.order.billingagreements.GetBillingIdResponse>;
						public copy(param0: string, param1: string): com.paypal.checkout.order.billingagreements.GetBillingIdResponse;
						public getState(): string;
						public component2(): string;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public constructor(param0: string, param1: string);
						public getBillingId(): string;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export module patch {
					export abstract class OrderUpdate {
						public static class: java.lang.Class<com.paypal.checkout.order.patch.OrderUpdate>;
						public static DEFAULT_PURCHASE_UNIT_ID: string;
						public constructor(param0: string, param1: com.paypal.checkout.order.patch.PatchOperation, param2: any);
						public getPurchaseUnitReferenceId(): string;
						public getValue(): any;
						public getPatchOperation(): com.paypal.checkout.order.patch.PatchOperation;
						public getPath$pyplcheckout_externalThreedsRelease(): string;
					}
					export module OrderUpdate {
						export class Companion {
							public static class: java.lang.Class<com.paypal.checkout.order.patch.OrderUpdate.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export module patch {
					export class PatchError {
						public static class: java.lang.Class<com.paypal.checkout.order.patch.PatchError>;
						public component3(): string;
						public copy(param0: string, param1: string, param2: string, param3: string): com.paypal.checkout.order.patch.PatchError;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getValue(): string;
						public toString(): string;
						public constructor(param0: string, param1: string, param2: string, param3: string);
						public component4(): string;
						public getField(): string;
						public component2(): string;
						public getIssue(): string;
						public getDescription(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export module patch {
					export class PatchErrorResponse {
						public static class: java.lang.Class<com.paypal.checkout.order.patch.PatchErrorResponse>;
						public component1(): java.util.List<com.paypal.checkout.order.patch.PatchError>;
						public getDetails(): java.util.List<com.paypal.checkout.order.patch.PatchError>;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public copy(param0: java.util.List<com.paypal.checkout.order.patch.PatchError>): com.paypal.checkout.order.patch.PatchErrorResponse;
						public toString(): string;
						public constructor(param0: java.util.List<com.paypal.checkout.order.patch.PatchError>);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export module patch {
					export class PatchOperation {
						public static class: java.lang.Class<com.paypal.checkout.order.patch.PatchOperation>;
						public static ADD: com.paypal.checkout.order.patch.PatchOperation;
						public static REPLACE: com.paypal.checkout.order.patch.PatchOperation;
						public static REMOVE: com.paypal.checkout.order.patch.PatchOperation;
						public static values(): androidNative.Array<com.paypal.checkout.order.patch.PatchOperation>;
						public static valueOf(param0: string): com.paypal.checkout.order.patch.PatchOperation;
						public getStringValue(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export module patch {
					export class PatchOrderAction {
						public static class: java.lang.Class<com.paypal.checkout.order.patch.PatchOrderAction>;
						public constructor(param0: com.paypal.checkout.order.patch.PatchOrderRequestFactory, param1: com.paypal.checkout.merchanttoken.UpgradeLsatTokenAction, param2: okhttp3.OkHttpClient, param3: com.google.gson.Gson, param4: kotlinx.coroutines.CoroutineDispatcher);
						public execute(param0: com.paypal.checkout.order.patch.PatchOrderRequest, param1: any): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export module patch {
					export class PatchOrderAction_Factory extends dagger.internal.Factory<com.paypal.checkout.order.patch.PatchOrderAction> {
						public static class: java.lang.Class<com.paypal.checkout.order.patch.PatchOrderAction_Factory>;
						public get(): com.paypal.checkout.order.patch.PatchOrderAction;
						public static create(param0: javax.inject.Provider<com.paypal.checkout.order.patch.PatchOrderRequestFactory>, param1: javax.inject.Provider<com.paypal.checkout.merchanttoken.UpgradeLsatTokenAction>, param2: javax.inject.Provider<okhttp3.OkHttpClient>, param3: javax.inject.Provider<com.google.gson.Gson>, param4: javax.inject.Provider<kotlinx.coroutines.CoroutineDispatcher>): com.paypal.checkout.order.patch.PatchOrderAction_Factory;
						public constructor(param0: javax.inject.Provider<com.paypal.checkout.order.patch.PatchOrderRequestFactory>, param1: javax.inject.Provider<com.paypal.checkout.merchanttoken.UpgradeLsatTokenAction>, param2: javax.inject.Provider<okhttp3.OkHttpClient>, param3: javax.inject.Provider<com.google.gson.Gson>, param4: javax.inject.Provider<kotlinx.coroutines.CoroutineDispatcher>);
						public static newInstance(param0: com.paypal.checkout.order.patch.PatchOrderRequestFactory, param1: com.paypal.checkout.merchanttoken.UpgradeLsatTokenAction, param2: okhttp3.OkHttpClient, param3: com.google.gson.Gson, param4: kotlinx.coroutines.CoroutineDispatcher): com.paypal.checkout.order.patch.PatchOrderAction;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export module patch {
					export class PatchOrderRequest {
						public static class: java.lang.Class<com.paypal.checkout.order.patch.PatchOrderRequest>;
						public getOrderUpdates(): java.util.List<com.paypal.checkout.order.patch.OrderUpdate>;
						public constructor(param0: java.util.List<any>);
						public constructor(param0: androidNative.Array<com.paypal.checkout.order.patch.OrderUpdate>);
						public component1(): java.util.List<com.paypal.checkout.order.patch.OrderUpdate>;
						public copy(param0: java.util.List<any>): com.paypal.checkout.order.patch.PatchOrderRequest;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export module patch {
					export class PatchOrderRequestFactory {
						public static class: java.lang.Class<com.paypal.checkout.order.patch.PatchOrderRequestFactory>;
						public constructor(param0: com.google.gson.GsonBuilder);
						public createRequest(param0: string, param1: com.paypal.checkout.order.patch.PatchOrderRequest): okhttp3.Request;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export module patch {
					export class PatchOrderRequestFactory_Factory extends dagger.internal.Factory<com.paypal.checkout.order.patch.PatchOrderRequestFactory> {
						public static class: java.lang.Class<com.paypal.checkout.order.patch.PatchOrderRequestFactory_Factory>;
						public get(): com.paypal.checkout.order.patch.PatchOrderRequestFactory;
						public static newInstance(param0: com.google.gson.GsonBuilder): com.paypal.checkout.order.patch.PatchOrderRequestFactory;
						public static create(param0: javax.inject.Provider<com.google.gson.GsonBuilder>): com.paypal.checkout.order.patch.PatchOrderRequestFactory_Factory;
						public constructor(param0: javax.inject.Provider<com.google.gson.GsonBuilder>);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export module patch {
					export class PatchRequestBody {
						public static class: java.lang.Class<com.paypal.checkout.order.patch.PatchRequestBody>;
						public getValue(): any;
						public component2(): string;
						public component3(): any;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getPath(): string;
						public getOp(): string;
						public constructor(param0: string, param1: string, param2: any);
						public copy(param0: string, param1: string, param2: any): com.paypal.checkout.order.patch.PatchRequestBody;
						public toString(): string;
					}
					export module PatchRequestBody {
						export class Companion {
							public static class: java.lang.Class<com.paypal.checkout.order.patch.PatchRequestBody.Companion>;
							public fromPatchOrderRequest(param0: com.paypal.checkout.order.patch.PatchOrderRequest): java.util.List<com.paypal.checkout.order.patch.PatchRequestBody>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export module patch {
					export module fields {
						export abstract class PatchAmount extends com.paypal.checkout.order.patch.OrderUpdate {
							public static class: java.lang.Class<com.paypal.checkout.order.patch.fields.PatchAmount>;
							public getAmount(): com.paypal.checkout.order.Amount;
							public getPath$pyplcheckout_externalThreedsRelease(): string;
						}
						export module PatchAmount {
							export class Replace extends com.paypal.checkout.order.patch.fields.PatchAmount {
								public static class: java.lang.Class<com.paypal.checkout.order.patch.fields.PatchAmount.Replace>;
								public constructor(param0: com.paypal.checkout.order.Amount, param1: string);
								public constructor(param0: string, param1: com.paypal.checkout.order.patch.PatchOperation, param2: any);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export module patch {
					export module fields {
						export abstract class PatchShippingAddress extends com.paypal.checkout.order.patch.OrderUpdate {
							public static class: java.lang.Class<com.paypal.checkout.order.patch.fields.PatchShippingAddress>;
							public getAddress(): com.paypal.checkout.order.Address;
							public getPath$pyplcheckout_externalThreedsRelease(): string;
						}
						export module PatchShippingAddress {
							export class Add extends com.paypal.checkout.order.patch.fields.PatchShippingAddress {
								public static class: java.lang.Class<com.paypal.checkout.order.patch.fields.PatchShippingAddress.Add>;
								public constructor(param0: com.paypal.checkout.order.Address, param1: string);
								public constructor(param0: string, param1: com.paypal.checkout.order.patch.PatchOperation, param2: any);
							}
							export class Replace extends com.paypal.checkout.order.patch.fields.PatchShippingAddress {
								public static class: java.lang.Class<com.paypal.checkout.order.patch.fields.PatchShippingAddress.Replace>;
								public constructor(param0: com.paypal.checkout.order.Address, param1: string);
								public constructor(param0: string, param1: com.paypal.checkout.order.patch.PatchOperation, param2: any);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module order {
				export module patch {
					export module fields {
						export abstract class PatchShippingOptions extends com.paypal.checkout.order.patch.OrderUpdate {
							public static class: java.lang.Class<com.paypal.checkout.order.patch.fields.PatchShippingOptions>;
							public getOptions(): java.util.List<com.paypal.checkout.order.Options>;
							public getPath$pyplcheckout_externalThreedsRelease(): string;
						}
						export module PatchShippingOptions {
							export class Replace extends com.paypal.checkout.order.patch.fields.PatchShippingOptions {
								public static class: java.lang.Class<com.paypal.checkout.order.patch.fields.PatchShippingOptions.Replace>;
								public constructor(param0: string, param1: com.paypal.checkout.order.patch.PatchOperation, param2: any);
								public constructor(param0: java.util.List<com.paypal.checkout.order.Options>, param1: string);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module paymentbutton {
				export class FundingEligibilityState {
					public static class: java.lang.Class<com.paypal.checkout.paymentbutton.FundingEligibilityState>;
					public component2(): java.util.List<com.paypal.pyplcheckout.pojo.Error>;
					public equals(param0: any): boolean;
					public toString(): string;
					public getError(): java.util.List<com.paypal.pyplcheckout.pojo.Error>;
					public getPaymentsButtonMap(): java.util.Map<com.paypal.checkout.paymentbutton.PaymentFundingType,com.paypal.checkout.fundingeligibility.FundingEligibilityItem>;
					public copy(param0: java.util.Map<com.paypal.checkout.paymentbutton.PaymentFundingType,com.paypal.checkout.fundingeligibility.FundingEligibilityItem>, param1: java.util.List<com.paypal.pyplcheckout.pojo.Error>): com.paypal.checkout.paymentbutton.FundingEligibilityState;
					public component1(): java.util.Map<com.paypal.checkout.paymentbutton.PaymentFundingType,com.paypal.checkout.fundingeligibility.FundingEligibilityItem>;
					public constructor(param0: java.util.Map<com.paypal.checkout.paymentbutton.PaymentFundingType,com.paypal.checkout.fundingeligibility.FundingEligibilityItem>, param1: java.util.List<com.paypal.pyplcheckout.pojo.Error>);
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module paymentbutton {
				export class PayLaterButton extends com.paypal.checkout.paymentbutton.PayPalButton {
					public static class: java.lang.Class<com.paypal.checkout.paymentbutton.PayLaterButton>;
					public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public constructor(param0: globalAndroid.content.Context);
					public getFundingType$pyplcheckout_externalThreedsRelease(): com.paypal.checkout.paymentbutton.PaymentButtonFundingType;
					public _$_findCachedViewById(param0: number): globalAndroid.view.View;
					public _$_clearFindViewByIdCache(): void;
					public getWordmarkDarkLuminanceResId(): number;
					public setLabel(param0: com.paypal.checkout.paymentbutton.PayPalButtonLabel): void;
					public getWordmarkLightLuminanceResId(): number;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					public getLabel(): com.paypal.checkout.paymentbutton.PayPalButtonLabel;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module paymentbutton {
				export class PayLaterButtonUi {
					public static class: java.lang.Class<com.paypal.checkout.paymentbutton.PayLaterButtonUi>;
					public equals(param0: any): boolean;
					public constructor(param0: com.paypal.checkout.paymentbutton.PayPalButtonColor, param1: com.paypal.checkout.paymentbutton.PaymentButtonAttributes);
					public getAttributes(): com.paypal.checkout.paymentbutton.PaymentButtonAttributes;
					public toString(): string;
					public getColor(): com.paypal.checkout.paymentbutton.PayPalButtonColor;
					public component1(): com.paypal.checkout.paymentbutton.PayPalButtonColor;
					public copy(param0: com.paypal.checkout.paymentbutton.PayPalButtonColor, param1: com.paypal.checkout.paymentbutton.PaymentButtonAttributes): com.paypal.checkout.paymentbutton.PayLaterButtonUi;
					public setColor(param0: com.paypal.checkout.paymentbutton.PayPalButtonColor): void;
					public setAttributes(param0: com.paypal.checkout.paymentbutton.PaymentButtonAttributes): void;
					public hashCode(): number;
					public component2(): com.paypal.checkout.paymentbutton.PaymentButtonAttributes;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module paymentbutton {
				export class PayPalButton extends com.paypal.checkout.paymentbutton.PaymentButton<com.paypal.checkout.paymentbutton.PayPalButtonColor> {
					public static class: java.lang.Class<com.paypal.checkout.paymentbutton.PayPalButton>;
					public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
					public _$_findCachedViewById(param0: number): globalAndroid.view.View;
					public _$_clearFindViewByIdCache(): void;
					public setLabel(param0: com.paypal.checkout.paymentbutton.PayPalButtonLabel): void;
					public getWordmarkLightLuminanceResId(): number;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					public getLabel(): com.paypal.checkout.paymentbutton.PayPalButtonLabel;
					public getColor(): any;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public constructor(param0: globalAndroid.content.Context);
					public updateLabel(param0: com.paypal.checkout.paymentbutton.PayPalButtonLabel): void;
					public getFundingType$pyplcheckout_externalThreedsRelease(): com.paypal.checkout.paymentbutton.PaymentButtonFundingType;
					public setColor(param0: any): void;
					public getColor(): com.paypal.checkout.paymentbutton.PayPalButtonColor;
					public getWordmarkDarkLuminanceResId(): number;
					public setColor(param0: com.paypal.checkout.paymentbutton.PayPalButtonColor): void;
				}
				export module PayPalButton {
					export class WhenMappings {
						public static class: java.lang.Class<com.paypal.checkout.paymentbutton.PayPalButton.WhenMappings>;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module paymentbutton {
				export class PayPalButtonColor extends com.paypal.checkout.paymentbutton.PaymentButtonColor {
					public static class: java.lang.Class<com.paypal.checkout.paymentbutton.PayPalButtonColor>;
					public static GOLD: com.paypal.checkout.paymentbutton.PayPalButtonColor;
					public static BLUE: com.paypal.checkout.paymentbutton.PayPalButtonColor;
					public static WHITE: com.paypal.checkout.paymentbutton.PayPalButtonColor;
					public static BLACK: com.paypal.checkout.paymentbutton.PayPalButtonColor;
					public static SILVER: com.paypal.checkout.paymentbutton.PayPalButtonColor;
					public static values(): androidNative.Array<com.paypal.checkout.paymentbutton.PayPalButtonColor>;
					public getHasOutline(): boolean;
					public getValue(): number;
					public retrieveColorResource(param0: globalAndroid.content.Context): globalAndroid.content.res.ColorStateList;
					public getColorResId(): number;
					public getLuminance(): com.paypal.checkout.paymentbutton.PaymentButtonColorLuminance;
					public static valueOf(param0: string): com.paypal.checkout.paymentbutton.PayPalButtonColor;
				}
				export module PayPalButtonColor {
					export class Companion {
						public static class: java.lang.Class<com.paypal.checkout.paymentbutton.PayPalButtonColor.Companion>;
						public invoke(param0: number): com.paypal.checkout.paymentbutton.PayPalButtonColor;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module paymentbutton {
				export class PayPalButtonLabel {
					public static class: java.lang.Class<com.paypal.checkout.paymentbutton.PayPalButtonLabel>;
					public static PAYPAL: com.paypal.checkout.paymentbutton.PayPalButtonLabel;
					public static CHECKOUT: com.paypal.checkout.paymentbutton.PayPalButtonLabel;
					public static BUY_NOW: com.paypal.checkout.paymentbutton.PayPalButtonLabel;
					public static PAY: com.paypal.checkout.paymentbutton.PayPalButtonLabel;
					public static PAY_LATER: com.paypal.checkout.paymentbutton.PayPalButtonLabel;
					public static values(): androidNative.Array<com.paypal.checkout.paymentbutton.PayPalButtonLabel>;
					public getPosition(): com.paypal.checkout.paymentbutton.PayPalButtonLabel.Position;
					public static valueOf(param0: string): com.paypal.checkout.paymentbutton.PayPalButtonLabel;
					public getValue(): number;
					public retrieveLabel(param0: globalAndroid.content.Context): string;
				}
				export module PayPalButtonLabel {
					export class Companion {
						public static class: java.lang.Class<com.paypal.checkout.paymentbutton.PayPalButtonLabel.Companion>;
						public invoke(param0: number): com.paypal.checkout.paymentbutton.PayPalButtonLabel;
					}
					export class Position {
						public static class: java.lang.Class<com.paypal.checkout.paymentbutton.PayPalButtonLabel.Position>;
						public static START: com.paypal.checkout.paymentbutton.PayPalButtonLabel.Position;
						public static END: com.paypal.checkout.paymentbutton.PayPalButtonLabel.Position;
						public static valueOf(param0: string): com.paypal.checkout.paymentbutton.PayPalButtonLabel.Position;
						public static values(): androidNative.Array<com.paypal.checkout.paymentbutton.PayPalButtonLabel.Position>;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module paymentbutton {
				export class PayPalButtonUi {
					public static class: java.lang.Class<com.paypal.checkout.paymentbutton.PayPalButtonUi>;
					public component2(): com.paypal.checkout.paymentbutton.PayPalButtonLabel;
					public copy(param0: com.paypal.checkout.paymentbutton.PayPalButtonColor, param1: com.paypal.checkout.paymentbutton.PayPalButtonLabel, param2: com.paypal.checkout.paymentbutton.PaymentButtonAttributes): com.paypal.checkout.paymentbutton.PayPalButtonUi;
					public getAttributes(): com.paypal.checkout.paymentbutton.PaymentButtonAttributes;
					public setLabel(param0: com.paypal.checkout.paymentbutton.PayPalButtonLabel): void;
					public getLabel(): com.paypal.checkout.paymentbutton.PayPalButtonLabel;
					public equals(param0: any): boolean;
					public toString(): string;
					public getColor(): com.paypal.checkout.paymentbutton.PayPalButtonColor;
					public component1(): com.paypal.checkout.paymentbutton.PayPalButtonColor;
					public constructor(param0: com.paypal.checkout.paymentbutton.PayPalButtonColor, param1: com.paypal.checkout.paymentbutton.PayPalButtonLabel, param2: com.paypal.checkout.paymentbutton.PaymentButtonAttributes);
					public setColor(param0: com.paypal.checkout.paymentbutton.PayPalButtonColor): void;
					public setAttributes(param0: com.paypal.checkout.paymentbutton.PaymentButtonAttributes): void;
					public hashCode(): number;
					public component3(): com.paypal.checkout.paymentbutton.PaymentButtonAttributes;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module paymentbutton {
				export class PayPalCreditButton extends com.paypal.checkout.paymentbutton.PaymentButton<com.paypal.checkout.paymentbutton.PayPalCreditButtonColor> {
					public static class: java.lang.Class<com.paypal.checkout.paymentbutton.PayPalCreditButton>;
					public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public constructor(param0: globalAndroid.content.Context);
					public getFundingType$pyplcheckout_externalThreedsRelease(): com.paypal.checkout.paymentbutton.PaymentButtonFundingType;
					public _$_findCachedViewById(param0: number): globalAndroid.view.View;
					public setColor(param0: any): void;
					public _$_clearFindViewByIdCache(): void;
					public getWordmarkDarkLuminanceResId(): number;
					public getColor(): com.paypal.checkout.paymentbutton.PayPalCreditButtonColor;
					public getWordmarkLightLuminanceResId(): number;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					public setColor(param0: com.paypal.checkout.paymentbutton.PayPalCreditButtonColor): void;
					public getColor(): any;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module paymentbutton {
				export class PayPalCreditButtonColor extends com.paypal.checkout.paymentbutton.PaymentButtonColor {
					public static class: java.lang.Class<com.paypal.checkout.paymentbutton.PayPalCreditButtonColor>;
					public static DARK_BLUE: com.paypal.checkout.paymentbutton.PayPalCreditButtonColor;
					public static BLACK: com.paypal.checkout.paymentbutton.PayPalCreditButtonColor;
					public static valueOf(param0: string): com.paypal.checkout.paymentbutton.PayPalCreditButtonColor;
					public getHasOutline(): boolean;
					public static values(): androidNative.Array<com.paypal.checkout.paymentbutton.PayPalCreditButtonColor>;
					public getValue(): number;
					public retrieveColorResource(param0: globalAndroid.content.Context): globalAndroid.content.res.ColorStateList;
					public getColorResId(): number;
					public getLuminance(): com.paypal.checkout.paymentbutton.PaymentButtonColorLuminance;
				}
				export module PayPalCreditButtonColor {
					export class Companion {
						public static class: java.lang.Class<com.paypal.checkout.paymentbutton.PayPalCreditButtonColor.Companion>;
						public invoke(param0: number): com.paypal.checkout.paymentbutton.PayPalCreditButtonColor;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module paymentbutton {
				export class PayPalCreditButtonUi {
					public static class: java.lang.Class<com.paypal.checkout.paymentbutton.PayPalCreditButtonUi>;
					public equals(param0: any): boolean;
					public getAttributes(): com.paypal.checkout.paymentbutton.PaymentButtonAttributes;
					public toString(): string;
					public constructor(param0: com.paypal.checkout.paymentbutton.PayPalCreditButtonColor, param1: com.paypal.checkout.paymentbutton.PaymentButtonAttributes);
					public getColor(): com.paypal.checkout.paymentbutton.PayPalCreditButtonColor;
					public setAttributes(param0: com.paypal.checkout.paymentbutton.PaymentButtonAttributes): void;
					public setColor(param0: com.paypal.checkout.paymentbutton.PayPalCreditButtonColor): void;
					public hashCode(): number;
					public component1(): com.paypal.checkout.paymentbutton.PayPalCreditButtonColor;
					public component2(): com.paypal.checkout.paymentbutton.PaymentButtonAttributes;
					public copy(param0: com.paypal.checkout.paymentbutton.PayPalCreditButtonColor, param1: com.paypal.checkout.paymentbutton.PaymentButtonAttributes): com.paypal.checkout.paymentbutton.PayPalCreditButtonUi;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module paymentbutton {
				export abstract class PaymentButton<C>  extends globalAndroid.widget.LinearLayout {
					public static class: java.lang.Class<com.paypal.checkout.paymentbutton.PaymentButton<any>>;
					public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
					public getPaymentButtonEligibilityStatusChanged(): com.paypal.checkout.paymentbutton.PaymentButtonEligibilityStatusChanged;
					public setPrefixTextVisibility(param0: number): void;
					public onAttachedToWindow(): void;
					public setShape(param0: com.paypal.checkout.paymentbutton.PaymentButtonShape): void;
					public getColor(): any;
					public setPaymentButtonEligibilityStatusChanged(param0: com.paypal.checkout.paymentbutton.PaymentButtonEligibilityStatusChanged): void;
					public getEligibilityStatus(): com.paypal.checkout.paymentbutton.PaymentButtonEligibilityStatus;
					public getOnEligibilityStatusChanged(): any<com.paypal.checkout.paymentbutton.PaymentButtonEligibilityStatus,any>;
					public setup(param0: com.paypal.checkout.createorder.CreateOrder, param1: com.paypal.checkout.approve.OnApprove, param2: com.paypal.checkout.shipping.OnShippingChange, param3: com.paypal.checkout.cancel.OnCancel): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public setPrefixText(param0: string): void;
					public setColor(param0: any): void;
					public getPrefixTextVisibility(): number;
					public getWordmarkDarkLuminanceResId(): number;
					public setSize(param0: com.paypal.checkout.paymentbutton.PaymentButtonSize): void;
					public setup(param0: com.paypal.checkout.createorder.CreateOrder, param1: com.paypal.checkout.approve.OnApprove, param2: com.paypal.checkout.shipping.OnShippingChange): void;
					public onDetachedFromWindow(): void;
					public setup(param0: com.paypal.checkout.createorder.CreateOrder): void;
					public onDraw(param0: globalAndroid.graphics.Canvas): void;
					public getSuffixTextVisibility(): number;
					public setOnClickListener(param0: globalAndroid.view.View.OnClickListener): void;
					public _$_findCachedViewById(param0: number): globalAndroid.view.View;
					public _$_clearFindViewByIdCache(): void;
					public getWordmarkLightLuminanceResId(): number;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					public getSize(): com.paypal.checkout.paymentbutton.PaymentButtonSize;
					public setup(param0: com.paypal.checkout.createorder.CreateOrder, param1: com.paypal.checkout.approve.OnApprove, param2: com.paypal.checkout.shipping.OnShippingChange, param3: com.paypal.checkout.cancel.OnCancel, param4: com.paypal.checkout.error.OnError): void;
					public setup(param0: com.paypal.checkout.createorder.CreateOrder, param1: com.paypal.checkout.approve.OnApprove): void;
					public constructor(param0: globalAndroid.content.Context);
					public getFundingType$pyplcheckout_externalThreedsRelease(): com.paypal.checkout.paymentbutton.PaymentButtonFundingType;
					public updateShapeDrawableFillColor(param0: any): void;
					public setSuffixTextVisibility(param0: number): void;
					public getShape(): com.paypal.checkout.paymentbutton.PaymentButtonShape;
					public setVisibility(param0: number): void;
					public getPrefixText(): string;
					public getSuffixText(): string;
					public setOnEligibilityStatusChanged(param0: any<any,any>): void;
					public setSuffixText(param0: string): void;
				}
				export module PaymentButton {
					export class Companion {
						public static class: java.lang.Class<com.paypal.checkout.paymentbutton.PaymentButton.Companion>;
					}
					export class WhenMappings {
						public static class: java.lang.Class<com.paypal.checkout.paymentbutton.PaymentButton.WhenMappings>;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module paymentbutton {
				export class PaymentButtonAttributes {
					public static class: java.lang.Class<com.paypal.checkout.paymentbutton.PaymentButtonAttributes>;
					public setEnabled(param0: boolean): void;
					public component2(): com.paypal.checkout.paymentbutton.PaymentButtonSize;
					public getSize(): com.paypal.checkout.paymentbutton.PaymentButtonSize;
					public setShape(param0: com.paypal.checkout.paymentbutton.PaymentButtonShape): void;
					public copy(param0: com.paypal.checkout.paymentbutton.PaymentButtonShape, param1: com.paypal.checkout.paymentbutton.PaymentButtonSize, param2: boolean): com.paypal.checkout.paymentbutton.PaymentButtonAttributes;
					public equals(param0: any): boolean;
					public toString(): string;
					public constructor(param0: com.paypal.checkout.paymentbutton.PaymentButtonShape, param1: com.paypal.checkout.paymentbutton.PaymentButtonSize, param2: boolean);
					public component1(): com.paypal.checkout.paymentbutton.PaymentButtonShape;
					public getShape(): com.paypal.checkout.paymentbutton.PaymentButtonShape;
					public setSize(param0: com.paypal.checkout.paymentbutton.PaymentButtonSize): void;
					public component3(): boolean;
					public isEnabled(): boolean;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module paymentbutton {
				export class PaymentButtonColor {
					public static class: java.lang.Class<com.paypal.checkout.paymentbutton.PaymentButtonColor>;
					/**
					 * Constructs a new instance of the com.paypal.checkout.paymentbutton.PaymentButtonColor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getColorResId(): number;
						getHasOutline(): boolean;
						getLuminance(): com.paypal.checkout.paymentbutton.PaymentButtonColorLuminance;
						retrieveColorResource(param0: globalAndroid.content.Context): globalAndroid.content.res.ColorStateList;
					});
					public constructor();
					public getHasOutline(): boolean;
					public retrieveColorResource(param0: globalAndroid.content.Context): globalAndroid.content.res.ColorStateList;
					public getColorResId(): number;
					public getLuminance(): com.paypal.checkout.paymentbutton.PaymentButtonColorLuminance;
				}
				export module PaymentButtonColor {
					export class DefaultImpls {
						public static class: java.lang.Class<com.paypal.checkout.paymentbutton.PaymentButtonColor.DefaultImpls>;
						public static retrieveColorResource(param0: com.paypal.checkout.paymentbutton.PaymentButtonColor, param1: globalAndroid.content.Context): globalAndroid.content.res.ColorStateList;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module paymentbutton {
				export class PaymentButtonColorLuminance {
					public static class: java.lang.Class<com.paypal.checkout.paymentbutton.PaymentButtonColorLuminance>;
					public static DARK: com.paypal.checkout.paymentbutton.PaymentButtonColorLuminance;
					public static LIGHT: com.paypal.checkout.paymentbutton.PaymentButtonColorLuminance;
					public static values(): androidNative.Array<com.paypal.checkout.paymentbutton.PaymentButtonColorLuminance>;
					public static valueOf(param0: string): com.paypal.checkout.paymentbutton.PaymentButtonColorLuminance;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module paymentbutton {
				export class PaymentButtonContainer implements com.paypal.pyplcheckout.navigation.interfaces.ContentView, com.paypal.pyplcheckout.navigation.interfaces.ICustomViewsViewModel {
					public static class: java.lang.Class<com.paypal.checkout.paymentbutton.PaymentButtonContainer>;
					public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
					public static TAG: string;
					public getPaypalCreditButtonColor(): com.paypal.checkout.paymentbutton.PayPalCreditButtonColor;
					public getPaypalCreditButtonSize(): com.paypal.checkout.paymentbutton.PaymentButtonSize;
					public removeListeners(): void;
					public initViewModelObservers(): void;
					public setPayLaterButtonUi(param0: com.paypal.checkout.paymentbutton.PayLaterButtonUi): void;
					public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
					public setup(param0: com.paypal.checkout.createorder.CreateOrder, param1: com.paypal.checkout.approve.OnApprove, param2: com.paypal.checkout.shipping.OnShippingChange, param3: com.paypal.checkout.cancel.OnCancel): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public setPaypalCreditButtonEnabled(param0: boolean): void;
					public getPaypalButtonEnabled(): boolean;
					public setPaypalCreditButtonSize(param0: com.paypal.checkout.paymentbutton.PaymentButtonSize): void;
					public setup(param0: com.paypal.checkout.createorder.CreateOrder): void;
					public setPaypalButtonShape(param0: com.paypal.checkout.paymentbutton.PaymentButtonShape): void;
					public setPaypalCreditButtonColor(param0: com.paypal.checkout.paymentbutton.PayPalCreditButtonColor): void;
					public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
					public _$_findCachedViewById(param0: number): globalAndroid.view.View;
					public getPaypalButtonShape(): com.paypal.checkout.paymentbutton.PaymentButtonShape;
					public _$_clearFindViewByIdCache(): void;
					public getPayLaterButtonColor(): com.paypal.checkout.paymentbutton.PayPalButtonColor;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: com.paypal.checkout.paymentbutton.PayPalButtonUi, param4: com.paypal.checkout.paymentbutton.PayPalCreditButtonUi, param5: com.paypal.checkout.paymentbutton.PayLaterButtonUi, param6: com.paypal.checkout.paymentbutton.PaymentButtonContainerViewState);
					public setPaypalButtonColor(param0: com.paypal.checkout.paymentbutton.PayPalButtonColor): void;
					public getPayLaterButtonShape(): com.paypal.checkout.paymentbutton.PaymentButtonShape;
					public setPayLaterButtonShape(param0: com.paypal.checkout.paymentbutton.PaymentButtonShape): void;
					public setup(param0: com.paypal.checkout.createorder.CreateOrder, param1: com.paypal.checkout.approve.OnApprove, param2: com.paypal.checkout.shipping.OnShippingChange, param3: com.paypal.checkout.cancel.OnCancel, param4: com.paypal.checkout.error.OnError): void;
					public setup(param0: com.paypal.checkout.createorder.CreateOrder, param1: com.paypal.checkout.approve.OnApprove): void;
					public getLifecycleOwner(param0: globalAndroid.view.View): androidx.lifecycle.LifecycleOwner;
					public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
					public setPayLaterButtonColor(param0: com.paypal.checkout.paymentbutton.PayPalButtonColor): void;
					public getPayLaterButtonSize(): com.paypal.checkout.paymentbutton.PaymentButtonSize;
					public getComponentActivity(param0: globalAndroid.content.Context): androidx.activity.ComponentActivity;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: com.paypal.checkout.paymentbutton.PayPalButtonUi);
					public setPayLaterButtonEnabled(param0: boolean): void;
					public setViewState(param0: com.paypal.checkout.paymentbutton.PaymentButtonContainerViewState): void;
					public getContentViewMinHeight(): number;
					public getPaypalButtonColor(): com.paypal.checkout.paymentbutton.PayPalButtonColor;
					public getPaypalButtonSize(): com.paypal.checkout.paymentbutton.PaymentButtonSize;
					public setPayPalButtonUi(param0: com.paypal.checkout.paymentbutton.PayPalButtonUi): void;
					public getIsAnchoredToBottomSheet(): boolean;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: com.paypal.checkout.paymentbutton.PayPalButtonUi, param4: com.paypal.checkout.paymentbutton.PayPalCreditButtonUi);
					public setContentViewVisibility(param0: number): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: com.paypal.checkout.paymentbutton.PayPalButtonUi, param4: com.paypal.checkout.paymentbutton.PayPalCreditButtonUi, param5: com.paypal.checkout.paymentbutton.PayLaterButtonUi);
					public setup(param0: com.paypal.checkout.createorder.CreateOrder, param1: com.paypal.checkout.approve.OnApprove, param2: com.paypal.checkout.shipping.OnShippingChange): void;
					public getPaypalButtonLabel(): com.paypal.checkout.paymentbutton.PayPalButtonLabel;
					public getPaypalCreditButtonShape(): com.paypal.checkout.paymentbutton.PaymentButtonShape;
					public setPayLaterButtonSize(param0: com.paypal.checkout.paymentbutton.PaymentButtonSize): void;
					public getPayLaterButtonEnabled(): boolean;
					public setPaypalButtonLabel(param0: com.paypal.checkout.paymentbutton.PayPalButtonLabel): void;
					public setPaypalButtonSize(param0: com.paypal.checkout.paymentbutton.PaymentButtonSize): void;
					public setPaypalCreditButtonShape(param0: com.paypal.checkout.paymentbutton.PaymentButtonShape): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					public getViewId(): string;
					public constructor(param0: globalAndroid.content.Context);
					public getViewState(): com.paypal.checkout.paymentbutton.PaymentButtonContainerViewState;
					public getPaypalCreditButtonEnabled(): boolean;
					public setPayPalCreditButtonUi(param0: com.paypal.checkout.paymentbutton.PayPalCreditButtonUi): void;
					public setPaypalButtonEnabled(param0: boolean): void;
				}
				export module PaymentButtonContainer {
					export class Companion {
						public static class: java.lang.Class<com.paypal.checkout.paymentbutton.PaymentButtonContainer.Companion>;
					}
					export class WhenMappings {
						public static class: java.lang.Class<com.paypal.checkout.paymentbutton.PaymentButtonContainer.WhenMappings>;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module paymentbutton {
				export class PaymentButtonContainerViewState {
					public static class: java.lang.Class<com.paypal.checkout.paymentbutton.PaymentButtonContainerViewState>;
					/**
					 * Constructs a new instance of the com.paypal.checkout.paymentbutton.PaymentButtonContainerViewState interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onLoading(): void;
						onFinish(param0: com.paypal.checkout.paymentbutton.FundingEligibilityState, param1: java.lang.Exception): void;
						<clinit>(): void;
					});
					public constructor();
					public onFinish(param0: com.paypal.checkout.paymentbutton.FundingEligibilityState, param1: java.lang.Exception): void;
					public onLoading(): void;
				}
				export module PaymentButtonContainerViewState {
					export class Companion {
						public static class: java.lang.Class<com.paypal.checkout.paymentbutton.PaymentButtonContainerViewState.Companion>;
						public invoke(param0: any, param1: any<any,any,any>): com.paypal.checkout.paymentbutton.PaymentButtonContainerViewState;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module paymentbutton {
				export abstract class PaymentButtonEligibilityStatus {
					public static class: java.lang.Class<com.paypal.checkout.paymentbutton.PaymentButtonEligibilityStatus>;
					public toString(): string;
				}
				export module PaymentButtonEligibilityStatus {
					export class Eligible extends com.paypal.checkout.paymentbutton.PaymentButtonEligibilityStatus {
						public static class: java.lang.Class<com.paypal.checkout.paymentbutton.PaymentButtonEligibilityStatus.Eligible>;
						public static INSTANCE: com.paypal.checkout.paymentbutton.PaymentButtonEligibilityStatus.Eligible;
					}
					export class Error extends com.paypal.checkout.paymentbutton.PaymentButtonEligibilityStatus {
						public static class: java.lang.Class<com.paypal.checkout.paymentbutton.PaymentButtonEligibilityStatus.Error>;
						public static INSTANCE: com.paypal.checkout.paymentbutton.PaymentButtonEligibilityStatus.Error;
					}
					export class Ineligible extends com.paypal.checkout.paymentbutton.PaymentButtonEligibilityStatus {
						public static class: java.lang.Class<com.paypal.checkout.paymentbutton.PaymentButtonEligibilityStatus.Ineligible>;
						public static INSTANCE: com.paypal.checkout.paymentbutton.PaymentButtonEligibilityStatus.Ineligible;
					}
					export class Loading extends com.paypal.checkout.paymentbutton.PaymentButtonEligibilityStatus {
						public static class: java.lang.Class<com.paypal.checkout.paymentbutton.PaymentButtonEligibilityStatus.Loading>;
						public static INSTANCE: com.paypal.checkout.paymentbutton.PaymentButtonEligibilityStatus.Loading;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module paymentbutton {
				export class PaymentButtonEligibilityStatusChanged {
					public static class: java.lang.Class<com.paypal.checkout.paymentbutton.PaymentButtonEligibilityStatusChanged>;
					/**
					 * Constructs a new instance of the com.paypal.checkout.paymentbutton.PaymentButtonEligibilityStatusChanged interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onPaymentButtonEligibilityStatusChanged(param0: com.paypal.checkout.paymentbutton.PaymentButtonEligibilityStatus): void;
					});
					public constructor();
					public onPaymentButtonEligibilityStatusChanged(param0: com.paypal.checkout.paymentbutton.PaymentButtonEligibilityStatus): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module paymentbutton {
				export class PaymentButtonFundingType {
					public static class: java.lang.Class<com.paypal.checkout.paymentbutton.PaymentButtonFundingType>;
					public static PAYPAL: com.paypal.checkout.paymentbutton.PaymentButtonFundingType;
					public static PAY_LATER: com.paypal.checkout.paymentbutton.PaymentButtonFundingType;
					public static PAYPAL_CREDIT: com.paypal.checkout.paymentbutton.PaymentButtonFundingType;
					public static valueOf(param0: string): com.paypal.checkout.paymentbutton.PaymentButtonFundingType;
					public static values(): androidNative.Array<com.paypal.checkout.paymentbutton.PaymentButtonFundingType>;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module paymentbutton {
				export class PaymentButtonShape {
					public static class: java.lang.Class<com.paypal.checkout.paymentbutton.PaymentButtonShape>;
					public static ROUNDED: com.paypal.checkout.paymentbutton.PaymentButtonShape;
					public static PILL: com.paypal.checkout.paymentbutton.PaymentButtonShape;
					public static RECTANGLE: com.paypal.checkout.paymentbutton.PaymentButtonShape;
					public static valueOf(param0: string): com.paypal.checkout.paymentbutton.PaymentButtonShape;
					public getValue(): number;
					public static values(): androidNative.Array<com.paypal.checkout.paymentbutton.PaymentButtonShape>;
				}
				export module PaymentButtonShape {
					export class Companion {
						public static class: java.lang.Class<com.paypal.checkout.paymentbutton.PaymentButtonShape.Companion>;
						public invoke(param0: number): com.paypal.checkout.paymentbutton.PaymentButtonShape;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module paymentbutton {
				export class PaymentButtonSize {
					public static class: java.lang.Class<com.paypal.checkout.paymentbutton.PaymentButtonSize>;
					public static SMALL: com.paypal.checkout.paymentbutton.PaymentButtonSize;
					public static MEDIUM: com.paypal.checkout.paymentbutton.PaymentButtonSize;
					public static LARGE: com.paypal.checkout.paymentbutton.PaymentButtonSize;
					public getLabelTextSizeResId(): number;
					public getMinHeightResId(): number;
					public getValue(): number;
					public getVerticalPaddingResId(): number;
					public static valueOf(param0: string): com.paypal.checkout.paymentbutton.PaymentButtonSize;
					public static values(): androidNative.Array<com.paypal.checkout.paymentbutton.PaymentButtonSize>;
				}
				export module PaymentButtonSize {
					export class Companion {
						public static class: java.lang.Class<com.paypal.checkout.paymentbutton.PaymentButtonSize.Companion>;
						public invoke(param0: number): com.paypal.checkout.paymentbutton.PaymentButtonSize;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module paymentbutton {
				export class PaymentFundingType {
					public static class: java.lang.Class<com.paypal.checkout.paymentbutton.PaymentFundingType>;
					public static PAYPAL: com.paypal.checkout.paymentbutton.PaymentFundingType;
					public static PAYPAL_CREDIT: com.paypal.checkout.paymentbutton.PaymentFundingType;
					public static PAY_LATER: com.paypal.checkout.paymentbutton.PaymentFundingType;
					public getFundingType(): string;
					public static values(): androidNative.Array<com.paypal.checkout.paymentbutton.PaymentFundingType>;
					public static valueOf(param0: string): com.paypal.checkout.paymentbutton.PaymentFundingType;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module shipping {
				export class OnShippingChange {
					public static class: java.lang.Class<com.paypal.checkout.shipping.OnShippingChange>;
					/**
					 * Constructs a new instance of the com.paypal.checkout.shipping.OnShippingChange interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onShippingChanged(param0: com.paypal.checkout.shipping.ShippingChangeData, param1: com.paypal.checkout.shipping.ShippingChangeActions): void;
						<clinit>(): void;
					});
					public constructor();
					public onShippingChanged(param0: com.paypal.checkout.shipping.ShippingChangeData, param1: com.paypal.checkout.shipping.ShippingChangeActions): void;
				}
				export module OnShippingChange {
					export class Companion {
						public static class: java.lang.Class<com.paypal.checkout.shipping.OnShippingChange.Companion>;
						public invoke(param0: any<any,any,any>): com.paypal.checkout.shipping.OnShippingChange;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module shipping {
				export class ShippingChangeActions {
					public static class: java.lang.Class<com.paypal.checkout.shipping.ShippingChangeActions>;
					public constructor(param0: com.paypal.checkout.order.actions.PatchAction, param1: com.paypal.pyplcheckout.events.Events);
					public patchOrder(param0: com.paypal.checkout.order.patch.PatchOrderRequest, param1: com.paypal.checkout.order.actions.OnPatchComplete): void;
					public patchOrder(param0: com.paypal.checkout.order.patch.PatchOrderRequest, param1: any): void;
					public approve(): void;
					public reject(): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module shipping {
				export class ShippingChangeActions_Factory extends dagger.internal.Factory<com.paypal.checkout.shipping.ShippingChangeActions> {
					public static class: java.lang.Class<com.paypal.checkout.shipping.ShippingChangeActions_Factory>;
					public constructor(param0: javax.inject.Provider<com.paypal.checkout.order.actions.PatchAction>, param1: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>);
					public get(): com.paypal.checkout.shipping.ShippingChangeActions;
					public static newInstance(param0: com.paypal.checkout.order.actions.PatchAction, param1: com.paypal.pyplcheckout.events.Events): com.paypal.checkout.shipping.ShippingChangeActions;
					public static create(param0: javax.inject.Provider<com.paypal.checkout.order.actions.PatchAction>, param1: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>): com.paypal.checkout.shipping.ShippingChangeActions_Factory;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module shipping {
				export class ShippingChangeData {
					public static class: java.lang.Class<com.paypal.checkout.shipping.ShippingChangeData>;
					public component5(): java.util.List<com.paypal.checkout.order.Options>;
					public component2(): string;
					public getShippingAddress(): com.paypal.checkout.order.Address;
					public getSelectedShippingOption(): com.paypal.checkout.order.Options;
					public copy(param0: string, param1: string, param2: com.paypal.checkout.shipping.ShippingChangeType, param3: com.paypal.checkout.order.Address, param4: java.util.List<com.paypal.checkout.order.Options>): com.paypal.checkout.shipping.ShippingChangeData;
					public equals(param0: any): boolean;
					public constructor(param0: string, param1: string, param2: com.paypal.checkout.shipping.ShippingChangeType, param3: com.paypal.checkout.order.Address, param4: java.util.List<com.paypal.checkout.order.Options>);
					public toString(): string;
					public getPayToken(): string;
					public component1(): string;
					public component4(): com.paypal.checkout.order.Address;
					public getPaymentId(): string;
					public getShippingChangeType(): com.paypal.checkout.shipping.ShippingChangeType;
					public component3(): com.paypal.checkout.shipping.ShippingChangeType;
					public getShippingOptions(): java.util.List<com.paypal.checkout.order.Options>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module checkout {
			export module shipping {
				export class ShippingChangeType {
					public static class: java.lang.Class<com.paypal.checkout.shipping.ShippingChangeType>;
					public static ADDRESS_CHANGE: com.paypal.checkout.shipping.ShippingChangeType;
					public static OPTION_CHANGE: com.paypal.checkout.shipping.ShippingChangeType;
					public static valueOf(param0: string): com.paypal.checkout.shipping.ShippingChangeType;
					public static values(): androidNative.Array<com.paypal.checkout.shipping.ShippingChangeType>;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export class BuildConfig {
				public static class: java.lang.Class<com.paypal.pyplcheckout.BuildConfig>;
				public static DEBUG: boolean;
				public static LIBRARY_PACKAGE_NAME: string;
				public static BUILD_TYPE: string;
				public static FLAVOR: string;
				public static FLAVOR_clientType: string;
				public static FLAVOR_threeDsType: string;
				public static AMPLITUDE_EVENT_UPLOAD_THRESHOLD: number;
				public static APP_NAME: string;
				public static Build_Type: string;
				public static IS_1P: boolean;
				public static IS_SHIPPING_CALLBACK_ENABLED: boolean;
				public static RES_ID: string;
				public static THIRD_PARTY_VERSION: string;
				public static VERSION_NAME: string;
				public constructor();
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module ab {
				export class Ab {
					public static class: java.lang.Class<com.paypal.pyplcheckout.ab.Ab>;
					/**
					 * Constructs a new instance of the com.paypal.pyplcheckout.ab.Ab interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getCache(): java.util.Map<string,com.paypal.pyplcheckout.ab.experiment.DataResponse>;
						setCache(param0: java.util.Map<string,any>): void;
						getTreatment(param0: com.paypal.pyplcheckout.ab.experiment.ExperimentRequest): com.paypal.pyplcheckout.ab.experiment.ExperimentResponse;
						getTreatmentRemote(param0: com.paypal.pyplcheckout.ab.experiment.ExperimentRequest, param1: com.paypal.pyplcheckout.ab.experiment.ExperimentCallback): void;
						setup(param0: string): void;
						<clinit>(): void;
					});
					public constructor();
					public getTreatmentRemote(param0: com.paypal.pyplcheckout.ab.experiment.ExperimentRequest, param1: com.paypal.pyplcheckout.ab.experiment.ExperimentCallback): void;
					public setCache(param0: java.util.Map<string,any>): void;
					public setup(param0: string): void;
					public getTreatment(param0: com.paypal.pyplcheckout.ab.experiment.ExperimentRequest): com.paypal.pyplcheckout.ab.experiment.ExperimentResponse;
					public getCache(): java.util.Map<string,com.paypal.pyplcheckout.ab.experiment.DataResponse>;
				}
				export module Ab {
					export class Companion {
						public static class: java.lang.Class<com.paypal.pyplcheckout.ab.Ab.Companion>;
						public empty(): com.paypal.pyplcheckout.ab.Ab;
					}
					export class Type {
						public static class: java.lang.Class<com.paypal.pyplcheckout.ab.Ab.Type>;
						public static ELMO: com.paypal.pyplcheckout.ab.Ab.Type;
						public static AMPLITUDE: com.paypal.pyplcheckout.ab.Ab.Type;
						public static valueOf(param0: string): com.paypal.pyplcheckout.ab.Ab.Type;
						public static values(): androidNative.Array<com.paypal.pyplcheckout.ab.Ab.Type>;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module ab {
				export class AbManager {
					public static class: java.lang.Class<com.paypal.pyplcheckout.ab.AbManager>;
					public getTreatmentRemote(param0: com.paypal.pyplcheckout.ab.experiment.ExperimentRequest, param1: com.paypal.pyplcheckout.ab.experiment.ExperimentCallback): void;
					public isExperimentDisabled(param0: com.paypal.pyplcheckout.ab.experiment.ExperimentRequest): com.paypal.pyplcheckout.ab.experiment.ExperimentResponse;
					public constructor(param0: com.paypal.pyplcheckout.ab.Ab, param1: com.paypal.pyplcheckout.model.DebugConfigManager);
					public initRemoteCache(param0: string): void;
					public getTreatment(param0: com.paypal.pyplcheckout.ab.experiment.ExperimentRequest): com.paypal.pyplcheckout.ab.experiment.ExperimentResponse;
					public evaluateExperimentResponse(param0: com.paypal.pyplcheckout.ab.elmo.ElmoAbExperiment, param1: string, param2: string): boolean;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module ab {
				export class AbManager_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.ab.AbManager> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.ab.AbManager_Factory>;
					public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.ab.Ab>, param1: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>): com.paypal.pyplcheckout.ab.AbManager_Factory;
					public static newInstance(param0: com.paypal.pyplcheckout.ab.Ab, param1: com.paypal.pyplcheckout.model.DebugConfigManager): com.paypal.pyplcheckout.ab.AbManager;
					public get(): com.paypal.pyplcheckout.ab.AbManager;
					public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.ab.Ab>, param1: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module ab {
				export class AbUUIDProvider {
					public static class: java.lang.Class<com.paypal.pyplcheckout.ab.AbUUIDProvider>;
					public static INSTANCE: com.paypal.pyplcheckout.ab.AbUUIDProvider;
					public static getUUID(param0: globalAndroid.content.Context): string;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module ab {
				export module di {
					export abstract class AbModule {
						public static class: java.lang.Class<com.paypal.pyplcheckout.ab.di.AbModule>;
						public constructor();
						public providesAb(param0: com.paypal.pyplcheckout.ab.elmo.Elmo): com.paypal.pyplcheckout.ab.Ab;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module ab {
				export module elmo {
					export class Elmo extends com.paypal.pyplcheckout.ab.Ab {
						public static class: java.lang.Class<com.paypal.pyplcheckout.ab.elmo.Elmo>;
						public setup(param0: string): void;
						public setCache(param0: java.util.Map<string,any>): void;
						public getTreatment(param0: com.paypal.pyplcheckout.ab.experiment.ExperimentRequest): com.paypal.pyplcheckout.ab.experiment.ExperimentResponse;
						public constructor(param0: globalAndroid.content.Context, param1: com.paypal.pyplcheckout.ab.elmo.ElmoApi, param2: kotlinx.coroutines.CoroutineDispatcher);
						public getCache(): java.util.Map<string,com.paypal.pyplcheckout.ab.experiment.DataResponse>;
						public getTreatmentRemote(param0: com.paypal.pyplcheckout.ab.experiment.ExperimentRequest, param1: com.paypal.pyplcheckout.ab.experiment.ExperimentCallback): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module ab {
				export module elmo {
					export class ElmoAbExperiment extends com.paypal.pyplcheckout.ab.experiment.Experiment {
						public static class: java.lang.Class<com.paypal.pyplcheckout.ab.elmo.ElmoAbExperiment>;
						public static ELMO_RESOURCE: string;
						public static NOT_IMPLEMENTED: string;
						public static BACKGROUND_SCRIM: com.paypal.pyplcheckout.ab.elmo.ElmoAbExperiment;
						public static CONTINUE_CART_EXPERIMENT: com.paypal.pyplcheckout.ab.elmo.ElmoAbExperiment;
						public static FALLBACK_TO_CCT_EXPERIMENT: com.paypal.pyplcheckout.ab.elmo.ElmoAbExperiment;
						public static ADD_SHIPPING_EXPERIMENT: com.paypal.pyplcheckout.ab.elmo.ElmoAbExperiment;
						public static NATIVE_ADD_CARD_EXPERIMENT: com.paypal.pyplcheckout.ab.elmo.ElmoAbExperiment;
						public static RTM_LOADER_SPINNER: com.paypal.pyplcheckout.ab.elmo.ElmoAbExperiment;
						public static NETWORK_CALL_RETRY: com.paypal.pyplcheckout.ab.elmo.ElmoAbExperiment;
						public static NXO_3P_PAY_WITH_CRYPTO: com.paypal.pyplcheckout.ab.elmo.ElmoAbExperiment;
						public static NXO_1P_PAY_WITH_CRYPTO: com.paypal.pyplcheckout.ab.elmo.ElmoAbExperiment;
						public static NXO_3P_SDK_ELIGIBILITY: com.paypal.pyplcheckout.ab.elmo.ElmoAbExperiment;
						public static ANDROID_OVER_CAPTURE_TEXT: com.paypal.pyplcheckout.ab.elmo.ElmoAbExperiment;
						public static NATIVE_OTP_AUTHENTICATION: com.paypal.pyplcheckout.ab.elmo.ElmoAbExperiment;
						public static NATIVE_ADDRESS_VALIDATION: com.paypal.pyplcheckout.ab.elmo.ElmoAbExperiment;
						public static valueOf(param0: string): com.paypal.pyplcheckout.ab.elmo.ElmoAbExperiment;
						public experimentName(): string;
						public getExperimentName(): string;
						public static values(): androidNative.Array<com.paypal.pyplcheckout.ab.elmo.ElmoAbExperiment>;
					}
					export module ElmoAbExperiment {
						export class Companion {
							public static class: java.lang.Class<com.paypal.pyplcheckout.ab.elmo.ElmoAbExperiment.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module ab {
				export module elmo {
					export class ElmoAbQuery {
						public static class: java.lang.Class<com.paypal.pyplcheckout.ab.elmo.ElmoAbQuery>;
						public static INSTANCE: com.paypal.pyplcheckout.ab.elmo.ElmoAbQuery;
						public get(param0: string, param1: string): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module ab {
				export module elmo {
					export class ElmoApi {
						public static class: java.lang.Class<com.paypal.pyplcheckout.ab.elmo.ElmoApi>;
						public constructor(param0: okhttp3.OkHttpClient);
						public getExperiments(param0: string, param1: string, param2: string, param3: any): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module ab {
				export module elmo {
					export class ElmoApi_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.ab.elmo.ElmoApi> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.ab.elmo.ElmoApi_Factory>;
						public constructor(param0: javax.inject.Provider<okhttp3.OkHttpClient>);
						public get(): com.paypal.pyplcheckout.ab.elmo.ElmoApi;
						public static create(param0: javax.inject.Provider<okhttp3.OkHttpClient>): com.paypal.pyplcheckout.ab.elmo.ElmoApi_Factory;
						public static newInstance(param0: okhttp3.OkHttpClient): com.paypal.pyplcheckout.ab.elmo.ElmoApi;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module ab {
				export module elmo {
					export class ElmoData {
						public static class: java.lang.Class<com.paypal.pyplcheckout.ab.elmo.ElmoData>;
						public constructor(param0: com.paypal.pyplcheckout.ab.elmo.ElmoExperiment);
						public copy(param0: com.paypal.pyplcheckout.ab.elmo.ElmoExperiment): com.paypal.pyplcheckout.ab.elmo.ElmoData;
						public getElmoExperiment(): com.paypal.pyplcheckout.ab.elmo.ElmoExperiment;
						public component1(): com.paypal.pyplcheckout.ab.elmo.ElmoExperiment;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module ab {
				export module elmo {
					export class ElmoExperiment {
						public static class: java.lang.Class<com.paypal.pyplcheckout.ab.elmo.ElmoExperiment>;
						public constructor(param0: java.util.List<com.paypal.pyplcheckout.ab.elmo.Treatment>);
						public copy(param0: java.util.List<com.paypal.pyplcheckout.ab.elmo.Treatment>): com.paypal.pyplcheckout.ab.elmo.ElmoExperiment;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getTreatments(): java.util.List<com.paypal.pyplcheckout.ab.elmo.Treatment>;
						public component1(): java.util.List<com.paypal.pyplcheckout.ab.elmo.Treatment>;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module ab {
				export module elmo {
					export class ElmoResponse {
						public static class: java.lang.Class<com.paypal.pyplcheckout.ab.elmo.ElmoResponse>;
						public copy(param0: com.paypal.pyplcheckout.ab.elmo.ElmoData): com.paypal.pyplcheckout.ab.elmo.ElmoResponse;
						public constructor(param0: com.paypal.pyplcheckout.ab.elmo.ElmoData);
						public hashCode(): number;
						public equals(param0: any): boolean;
						public component1(): com.paypal.pyplcheckout.ab.elmo.ElmoData;
						public getData(): com.paypal.pyplcheckout.ab.elmo.ElmoData;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module ab {
				export module elmo {
					export class ElmoTreatment extends com.paypal.pyplcheckout.ab.experiment.Treatment {
						public static class: java.lang.Class<com.paypal.pyplcheckout.ab.elmo.ElmoTreatment>;
						public static SCRIM_TREATMENT_CTRL: com.paypal.pyplcheckout.ab.elmo.ElmoTreatment;
						public static SCRIM_TREATMENT_OPACITY_BLACK_TRMT: com.paypal.pyplcheckout.ab.elmo.ElmoTreatment;
						public static SCRIM_TREATMENT_BLUE_SWIRL_TRMT: com.paypal.pyplcheckout.ab.elmo.ElmoTreatment;
						public static CONTINUE_CART_EXPERIMENT_CTRL: com.paypal.pyplcheckout.ab.elmo.ElmoTreatment;
						public static CONTINUE_CART_EXPERIMENT_TRMT: com.paypal.pyplcheckout.ab.elmo.ElmoTreatment;
						public static ADD_SHIPPING_EXPERIMENT_CTRL: com.paypal.pyplcheckout.ab.elmo.ElmoTreatment;
						public static ADD_SHIPPING_EXPERIMENT_TRMT: com.paypal.pyplcheckout.ab.elmo.ElmoTreatment;
						public static NATIVE_ADD_CARD_EXPERIMENT_CTRL: com.paypal.pyplcheckout.ab.elmo.ElmoTreatment;
						public static NATIVE_ADD_CARD_EXPERIMENT_TRMT: com.paypal.pyplcheckout.ab.elmo.ElmoTreatment;
						public static RTM_LOADER_SPINNER_CTRL: com.paypal.pyplcheckout.ab.elmo.ElmoTreatment;
						public static RTM_LOADER_SPINNER_TRMT: com.paypal.pyplcheckout.ab.elmo.ElmoTreatment;
						public static FALLBACK_TO_CCT_EXPERIMENT_CTRL: com.paypal.pyplcheckout.ab.elmo.ElmoTreatment;
						public static FALLBACK_TO_CCT_EXPERIMENT_TRMT: com.paypal.pyplcheckout.ab.elmo.ElmoTreatment;
						public static NXO_1P_PAY_WITH_CRYPTO_CTRL: com.paypal.pyplcheckout.ab.elmo.ElmoTreatment;
						public static NXO_1P_PAY_WITH_CRYPTO_TRMT: com.paypal.pyplcheckout.ab.elmo.ElmoTreatment;
						public static NXO_3P_PAY_WITH_CRYPTO_CTRL: com.paypal.pyplcheckout.ab.elmo.ElmoTreatment;
						public static NXO_3P_PAY_WITH_CRYPTO_TRMT: com.paypal.pyplcheckout.ab.elmo.ElmoTreatment;
						public static NXO_3P_SDK_ELIGIBILITY_CTRL: com.paypal.pyplcheckout.ab.elmo.ElmoTreatment;
						public static NXO_3P_SDK_ELIGIBILITY_TRMT: com.paypal.pyplcheckout.ab.elmo.ElmoTreatment;
						public static ANDROID_OVER_CAPTURE_TEXT_CTRL: com.paypal.pyplcheckout.ab.elmo.ElmoTreatment;
						public static ANDROID_OVER_CAPTURE_TEXT_TRMT: com.paypal.pyplcheckout.ab.elmo.ElmoTreatment;
						public static NATIVE_OTP_AUTHENTICATION_CTRL: com.paypal.pyplcheckout.ab.elmo.ElmoTreatment;
						public static NATIVE_OTP_AUTHENTICATION_TRMT: com.paypal.pyplcheckout.ab.elmo.ElmoTreatment;
						public static NATIVE_ADDRESS_VALIDATION_CTRL: com.paypal.pyplcheckout.ab.elmo.ElmoTreatment;
						public static NATIVE_ADDRESS_VALIDATION_TRMT: com.paypal.pyplcheckout.ab.elmo.ElmoTreatment;
						public treatmentName(): string;
						public static valueOf(param0: string): com.paypal.pyplcheckout.ab.elmo.ElmoTreatment;
						public static values(): androidNative.Array<com.paypal.pyplcheckout.ab.elmo.ElmoTreatment>;
						public getTreatmentName(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module ab {
				export module elmo {
					export class Elmo_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.ab.elmo.Elmo> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.ab.elmo.Elmo_Factory>;
						public constructor(param0: javax.inject.Provider<globalAndroid.content.Context>, param1: javax.inject.Provider<com.paypal.pyplcheckout.ab.elmo.ElmoApi>, param2: javax.inject.Provider<kotlinx.coroutines.CoroutineDispatcher>);
						public get(): com.paypal.pyplcheckout.ab.elmo.Elmo;
						public static create(param0: javax.inject.Provider<globalAndroid.content.Context>, param1: javax.inject.Provider<com.paypal.pyplcheckout.ab.elmo.ElmoApi>, param2: javax.inject.Provider<kotlinx.coroutines.CoroutineDispatcher>): com.paypal.pyplcheckout.ab.elmo.Elmo_Factory;
						public static newInstance(param0: globalAndroid.content.Context, param1: com.paypal.pyplcheckout.ab.elmo.ElmoApi, param2: kotlinx.coroutines.CoroutineDispatcher): com.paypal.pyplcheckout.ab.elmo.Elmo;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module ab {
				export module elmo {
					export class Treatment {
						public static class: java.lang.Class<com.paypal.pyplcheckout.ab.elmo.Treatment>;
						public getExperimentId(): string;
						public component3(): string;
						public component5(): string;
						public getVersion(): string;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getExperimentName(): string;
						public getTreatmentName(): string;
						public toString(): string;
						public component4(): string;
						public getFactors(): java.util.Map<string,string>;
						public component2(): string;
						public copy(param0: string, param1: string, param2: string, param3: string, param4: string, param5: java.util.Map<string,string>): com.paypal.pyplcheckout.ab.elmo.Treatment;
						public component6(): java.util.Map<string,string>;
						public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: java.util.Map<string,string>);
						public getTreatmentId(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module ab {
				export module experiment {
					export class DataResponse {
						public static class: java.lang.Class<com.paypal.pyplcheckout.ab.experiment.DataResponse>;
						public getTreatmentName(): string;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module ab {
				export module experiment {
					export class ElmoDataResponse extends com.paypal.pyplcheckout.ab.experiment.DataResponse {
						public static class: java.lang.Class<com.paypal.pyplcheckout.ab.experiment.ElmoDataResponse>;
						public component2(): java.util.Map<string,string>;
						public copy(param0: string, param1: java.util.Map<string,string>): com.paypal.pyplcheckout.ab.experiment.ElmoDataResponse;
						public getExtras(): java.util.Map<string,string>;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getTreatmentName(): string;
						public constructor(param0: string, param1: java.util.Map<string,string>);
						public toString(): string;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module ab {
				export module experiment {
					export class Experiment {
						public static class: java.lang.Class<com.paypal.pyplcheckout.ab.experiment.Experiment>;
						/**
						 * Constructs a new instance of the com.paypal.pyplcheckout.ab.experiment.Experiment interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							experimentName(): string;
						});
						public constructor();
						public experimentName(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module ab {
				export module experiment {
					export class ExperimentCallback {
						public static class: java.lang.Class<com.paypal.pyplcheckout.ab.experiment.ExperimentCallback>;
						/**
						 * Constructs a new instance of the com.paypal.pyplcheckout.ab.experiment.ExperimentCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onResponse(param0: com.paypal.pyplcheckout.ab.experiment.ExperimentResponse): void;
						});
						public constructor();
						public onResponse(param0: com.paypal.pyplcheckout.ab.experiment.ExperimentResponse): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module ab {
				export module experiment {
					export class ExperimentRequest {
						public static class: java.lang.Class<com.paypal.pyplcheckout.ab.experiment.ExperimentRequest>;
						public getExperiment(): com.paypal.pyplcheckout.ab.experiment.Experiment;
						public constructor(param0: com.paypal.pyplcheckout.ab.experiment.Experiment);
						public component2(): string;
						public constructor(param0: com.paypal.pyplcheckout.ab.experiment.Experiment, param1: string);
						public hashCode(): number;
						public equals(param0: any): boolean;
						public copy(param0: com.paypal.pyplcheckout.ab.experiment.Experiment, param1: string): com.paypal.pyplcheckout.ab.experiment.ExperimentRequest;
						public getTreatmentId(): string;
						public component1(): com.paypal.pyplcheckout.ab.experiment.Experiment;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module ab {
				export module experiment {
					export abstract class ExperimentResponse {
						public static class: java.lang.Class<com.paypal.pyplcheckout.ab.experiment.ExperimentResponse>;
					}
					export module ExperimentResponse {
						export class Disable extends com.paypal.pyplcheckout.ab.experiment.ExperimentResponse {
							public static class: java.lang.Class<com.paypal.pyplcheckout.ab.experiment.ExperimentResponse.Disable>;
							public static INSTANCE: com.paypal.pyplcheckout.ab.experiment.ExperimentResponse.Disable;
						}
						export class Failure extends com.paypal.pyplcheckout.ab.experiment.ExperimentResponse {
							public static class: java.lang.Class<com.paypal.pyplcheckout.ab.experiment.ExperimentResponse.Failure>;
							public copy(param0: java.lang.Exception): com.paypal.pyplcheckout.ab.experiment.ExperimentResponse.Failure;
							public component1(): java.lang.Exception;
							public hashCode(): number;
							public constructor(param0: java.lang.Exception);
							public toString(): string;
							public equals(param0: any): boolean;
							public getError(): java.lang.Exception;
						}
						export class Success extends com.paypal.pyplcheckout.ab.experiment.ExperimentResponse {
							public static class: java.lang.Class<com.paypal.pyplcheckout.ab.experiment.ExperimentResponse.Success>;
							public hashCode(): number;
							public component1(): com.paypal.pyplcheckout.ab.experiment.DataResponse;
							public toString(): string;
							public constructor(param0: com.paypal.pyplcheckout.ab.experiment.DataResponse);
							public getResponse(): com.paypal.pyplcheckout.ab.experiment.DataResponse;
							public copy(param0: com.paypal.pyplcheckout.ab.experiment.DataResponse): com.paypal.pyplcheckout.ab.experiment.ExperimentResponse.Success;
							public equals(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module ab {
				export module experiment {
					export class ExternalExperimentData {
						public static class: java.lang.Class<com.paypal.pyplcheckout.ab.experiment.ExternalExperimentData>;
						public copy(param0: string, param1: string): com.paypal.pyplcheckout.ab.experiment.ExternalExperimentData;
						public component2(): string;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public constructor(param0: string, param1: string);
						public getExperimentName(): string;
						public getTreatmentName(): string;
						public getKey(): string;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module ab {
				export module experiment {
					export class Treatment {
						public static class: java.lang.Class<com.paypal.pyplcheckout.ab.experiment.Treatment>;
						/**
						 * Constructs a new instance of the com.paypal.pyplcheckout.ab.experiment.Treatment interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							treatmentName(): string;
						});
						public constructor();
						public treatmentName(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module ab {
				export module featureflag {
					export class DeveloperSettingsFFCache extends com.paypal.pyplcheckout.common.cache.PreferenceStoreImpl {
						public static class: java.lang.Class<com.paypal.pyplcheckout.ab.featureflag.DeveloperSettingsFFCache>;
						public constructor(param0: globalAndroid.content.Context);
						public setBoolean(param0: androidx.datastore.preferences.core.Preferences.Key<java.lang.Boolean>, param1: boolean, param2: any): any;
						public setString(param0: androidx.datastore.preferences.core.Preferences.Key<string>, param1: string, param2: any): any;
						public getPreferenceBoolean(param0: string, param1: any): any;
						public setBooleanDataStorePref(param0: string, param1: boolean): void;
						public getPreferenceString(param0: string, param1: any): any;
						public getPreferenceInt(param0: string, param1: any): any;
						public setInt(param0: androidx.datastore.preferences.core.Preferences.Key<java.lang.Integer>, param1: number, param2: any): any;
						public clear(param0: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module ab {
				export module featureflag {
					export class DeveloperSettingsFFCache_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.ab.featureflag.DeveloperSettingsFFCache> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.ab.featureflag.DeveloperSettingsFFCache_Factory>;
						public static create(param0: javax.inject.Provider<globalAndroid.content.Context>): com.paypal.pyplcheckout.ab.featureflag.DeveloperSettingsFFCache_Factory;
						public static newInstance(param0: globalAndroid.content.Context): com.paypal.pyplcheckout.ab.featureflag.DeveloperSettingsFFCache;
						public get(): com.paypal.pyplcheckout.ab.featureflag.DeveloperSettingsFFCache;
						public constructor(param0: javax.inject.Provider<globalAndroid.content.Context>);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module ab {
				export module featureflag {
					export class Feature {
						public static class: java.lang.Class<com.paypal.pyplcheckout.ab.featureflag.Feature>;
						public static ADD_SHIPPING: com.paypal.pyplcheckout.ab.featureflag.Feature;
						public static ADD_CARD: com.paypal.pyplcheckout.ab.featureflag.Feature;
						public static SHIPPING_CALLBACK: com.paypal.pyplcheckout.ab.featureflag.Feature;
						public static AMPLITUDE_REST_API: com.paypal.pyplcheckout.ab.featureflag.Feature;
						public static NATIVE_BA: com.paypal.pyplcheckout.ab.featureflag.Feature;
						public static CRYPTO_PAYMENTS: com.paypal.pyplcheckout.ab.featureflag.Feature;
						public static THIRD_PARTY_3DS: com.paypal.pyplcheckout.ab.featureflag.Feature;
						public static ADD_CARD_3DS: com.paypal.pyplcheckout.ab.featureflag.Feature;
						public static ADDRESS_SUGGESTION: com.paypal.pyplcheckout.ab.featureflag.Feature;
						public getFeature(): string;
						public static values(): androidNative.Array<com.paypal.pyplcheckout.ab.featureflag.Feature>;
						public static valueOf(param0: string): com.paypal.pyplcheckout.ab.featureflag.Feature;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module ab {
				export module featureflag {
					export class FeatureFlagManager {
						public static class: java.lang.Class<com.paypal.pyplcheckout.ab.featureflag.FeatureFlagManager>;
						public static INSTANCE: com.paypal.pyplcheckout.ab.featureflag.FeatureFlagManager;
						public enable(param0: com.paypal.pyplcheckout.ab.featureflag.Feature): void;
						public static isEnabled(param0: com.paypal.pyplcheckout.ab.featureflag.Feature, param1: boolean): com.paypal.pyplcheckout.ab.featureflag.FeatureResponse;
						public static isEnabled(param0: com.paypal.pyplcheckout.ab.featureflag.Feature): com.paypal.pyplcheckout.ab.featureflag.FeatureResponse;
						public getLocalOverrideRuntimeFeatures(): java.util.Set<com.paypal.pyplcheckout.ab.featureflag.Feature>;
						public disable(param0: com.paypal.pyplcheckout.ab.featureflag.Feature): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module ab {
				export module featureflag {
					export abstract class FeatureResponse {
						public static class: java.lang.Class<com.paypal.pyplcheckout.ab.featureflag.FeatureResponse>;
						public isEnabled(): boolean;
					}
					export module FeatureResponse {
						export class Disabled extends com.paypal.pyplcheckout.ab.featureflag.FeatureResponse {
							public static class: java.lang.Class<com.paypal.pyplcheckout.ab.featureflag.FeatureResponse.Disabled>;
							public static INSTANCE: com.paypal.pyplcheckout.ab.featureflag.FeatureResponse.Disabled;
						}
						export class EnableOverride extends com.paypal.pyplcheckout.ab.featureflag.FeatureResponse {
							public static class: java.lang.Class<com.paypal.pyplcheckout.ab.featureflag.FeatureResponse.EnableOverride>;
							public static INSTANCE: com.paypal.pyplcheckout.ab.featureflag.FeatureResponse.EnableOverride;
						}
						export class Enabled extends com.paypal.pyplcheckout.ab.featureflag.FeatureResponse {
							public static class: java.lang.Class<com.paypal.pyplcheckout.ab.featureflag.FeatureResponse.Enabled>;
							public static INSTANCE: com.paypal.pyplcheckout.ab.featureflag.FeatureResponse.Enabled;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addcard {
				export class AddCardViewModel {
					public static class: java.lang.Class<com.paypal.pyplcheckout.addcard.AddCardViewModel>;
					public setNativeAddCardListener(param0: any): void;
					public showAddCardError(param0: com.paypal.pyplcheckout.addcard.AddCardViewModel.AddCardAlertUiModel.Error): void;
					public getAddCardLoadingState(): androidx.lifecycle.LiveData<com.paypal.pyplcheckout.addcard.AddCardViewModel.AddCardLoadingState>;
					public addCard(param0: string, param1: string, param2: string, param3: string, param4: androidx.appcompat.app.AppCompatActivity): void;
					public handleThreeDSAddCardSuccess(): void;
					public constructor(param0: com.paypal.pyplcheckout.services.Repository, param1: globalAndroid.content.Context, param2: com.paypal.pyplcheckout.events.Events, param3: com.google.gson.Gson, param4: com.paypal.pyplcheckout.addcard.usecase.GetAddCardEnabledUseCase, param5: com.paypal.pyplcheckout.threeds.usecase.StartAddCardThreeDsUseCase, param6: com.paypal.pyplcheckout.addcard.usecase.AddCardUseCase, param7: com.paypal.pyplcheckout.utils.PYPLCheckoutUtils, param8: com.paypal.pyplcheckout.model.DebugConfigManager);
					public showAddCardSuccess(param0: com.paypal.pyplcheckout.addcard.AddCardViewModel.AddCardAlertUiModel.Success): void;
					public isNativeAddCardEnabled(): boolean;
					public handleAddCardSuccess(param0: com.paypal.pyplcheckout.pojo.FundingInstrument): void;
					public setPaymentProcessorFromCardNumber(param0: string, param1: com.paypal.pyplcheckout.model.PaymentProcessors): void;
					public getNativeAddCardListener(): any;
					public getCardNumber(): androidx.lifecycle.LiveData<string>;
					public getPaymentProcessor(): androidx.lifecycle.LiveData<com.paypal.pyplcheckout.model.PaymentProcessors>;
					public getAddCardAlertUiModel(): androidx.lifecycle.LiveData<com.paypal.pyplcheckout.addcard.AddCardViewModel.AddCardAlertUiModel>;
					public getSupportedFundingSources(): java.util.List<com.paypal.pyplcheckout.pojo.CardIssuerType>;
				}
				export module AddCardViewModel {
					export abstract class AddCardAlertUiModel {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addcard.AddCardViewModel.AddCardAlertUiModel>;
						public getBackgroundColor(): number;
						public getHeader(): string;
						public getTextColor(): number;
						public getDescription(): string;
					}
					export module AddCardAlertUiModel {
						export abstract class Error extends com.paypal.pyplcheckout.addcard.AddCardViewModel.AddCardAlertUiModel {
							public static class: java.lang.Class<com.paypal.pyplcheckout.addcard.AddCardViewModel.AddCardAlertUiModel.Error>;
						}
						export module Error {
							export class Generic extends com.paypal.pyplcheckout.addcard.AddCardViewModel.AddCardAlertUiModel.Error {
								public static class: java.lang.Class<com.paypal.pyplcheckout.addcard.AddCardViewModel.AddCardAlertUiModel.Error.Generic>;
								public toString(): string;
								public getBackgroundColor(): number;
								public equals(param0: any): boolean;
								public constructor(param0: string, param1: string, param2: number, param3: number);
								public getHeader(): string;
								public component3(): number;
								public component2(): string;
								public component1(): string;
								public copy(param0: string, param1: string, param2: number, param3: number): com.paypal.pyplcheckout.addcard.AddCardViewModel.AddCardAlertUiModel.Error.Generic;
								public component4(): number;
								public getDescription(): string;
								public getTextColor(): number;
								public hashCode(): number;
							}
							export class Three_Ds_Replan extends com.paypal.pyplcheckout.addcard.AddCardViewModel.AddCardAlertUiModel.Error {
								public static class: java.lang.Class<com.paypal.pyplcheckout.addcard.AddCardViewModel.AddCardAlertUiModel.Error.Three_Ds_Replan>;
								public toString(): string;
								public getBackgroundColor(): number;
								public equals(param0: any): boolean;
								public constructor(param0: string, param1: string, param2: number, param3: number);
								public getHeader(): string;
								public component3(): number;
								public component2(): string;
								public component1(): string;
								public component4(): number;
								public copy(param0: string, param1: string, param2: number, param3: number): com.paypal.pyplcheckout.addcard.AddCardViewModel.AddCardAlertUiModel.Error.Three_Ds_Replan;
								public getDescription(): string;
								public getTextColor(): number;
								public hashCode(): number;
							}
							export class Validation extends com.paypal.pyplcheckout.addcard.AddCardViewModel.AddCardAlertUiModel.Error {
								public static class: java.lang.Class<com.paypal.pyplcheckout.addcard.AddCardViewModel.AddCardAlertUiModel.Error.Validation>;
								public toString(): string;
								public getBackgroundColor(): number;
								public equals(param0: any): boolean;
								public constructor(param0: string, param1: string, param2: number, param3: number);
								public getHeader(): string;
								public component3(): number;
								public component2(): string;
								public component1(): string;
								public component4(): number;
								public getDescription(): string;
								public getTextColor(): number;
								public hashCode(): number;
								public copy(param0: string, param1: string, param2: number, param3: number): com.paypal.pyplcheckout.addcard.AddCardViewModel.AddCardAlertUiModel.Error.Validation;
							}
						}
						export class Success extends com.paypal.pyplcheckout.addcard.AddCardViewModel.AddCardAlertUiModel {
							public static class: java.lang.Class<com.paypal.pyplcheckout.addcard.AddCardViewModel.AddCardAlertUiModel.Success>;
							public component2(): string;
							public hashCode(): number;
							public toString(): string;
							public getDescription(): string;
							public copy(param0: string, param1: string, param2: number, param3: number): com.paypal.pyplcheckout.addcard.AddCardViewModel.AddCardAlertUiModel.Success;
							public component1(): string;
							public getHeader(): string;
							public constructor(param0: string, param1: string, param2: number, param3: number);
							public component4(): number;
							public getTextColor(): number;
							public component3(): number;
							public getBackgroundColor(): number;
							public equals(param0: any): boolean;
						}
					}
					export abstract class AddCardLoadingState {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addcard.AddCardViewModel.AddCardLoadingState>;
					}
					export module AddCardLoadingState {
						export class Empty extends com.paypal.pyplcheckout.addcard.AddCardViewModel.AddCardLoadingState {
							public static class: java.lang.Class<com.paypal.pyplcheckout.addcard.AddCardViewModel.AddCardLoadingState.Empty>;
							public static INSTANCE: com.paypal.pyplcheckout.addcard.AddCardViewModel.AddCardLoadingState.Empty;
						}
						export class Idle extends com.paypal.pyplcheckout.addcard.AddCardViewModel.AddCardLoadingState {
							public static class: java.lang.Class<com.paypal.pyplcheckout.addcard.AddCardViewModel.AddCardLoadingState.Idle>;
							public getExpiry(): string;
							public copy(param0: string, param1: string, param2: string, param3: string): com.paypal.pyplcheckout.addcard.AddCardViewModel.AddCardLoadingState.Idle;
							public component2(): string;
							public hashCode(): number;
							public toString(): string;
							public getCsc(): string;
							public component3(): string;
							public component1(): string;
							public constructor(param0: string, param1: string, param2: string, param3: string);
							public getCardNumber(): string;
							public getZipCode(): string;
							public component4(): string;
							public equals(param0: any): boolean;
						}
						export class Loading extends com.paypal.pyplcheckout.addcard.AddCardViewModel.AddCardLoadingState {
							public static class: java.lang.Class<com.paypal.pyplcheckout.addcard.AddCardViewModel.AddCardLoadingState.Loading>;
							public getExpiry(): string;
							public component2(): string;
							public hashCode(): number;
							public toString(): string;
							public getCsc(): string;
							public component3(): string;
							public component1(): string;
							public copy(param0: string, param1: string, param2: string, param3: string): com.paypal.pyplcheckout.addcard.AddCardViewModel.AddCardLoadingState.Loading;
							public constructor(param0: string, param1: string, param2: string, param3: string);
							public getCardNumber(): string;
							public getZipCode(): string;
							public component4(): string;
							public equals(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addcard {
				export class AddCardViewModel_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.addcard.AddCardViewModel> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.addcard.AddCardViewModel_Factory>;
					public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param1: javax.inject.Provider<globalAndroid.content.Context>, param2: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param3: javax.inject.Provider<com.google.gson.Gson>, param4: javax.inject.Provider<com.paypal.pyplcheckout.addcard.usecase.GetAddCardEnabledUseCase>, param5: javax.inject.Provider<com.paypal.pyplcheckout.threeds.usecase.StartAddCardThreeDsUseCase>, param6: javax.inject.Provider<com.paypal.pyplcheckout.addcard.usecase.AddCardUseCase>, param7: javax.inject.Provider<com.paypal.pyplcheckout.utils.PYPLCheckoutUtils>, param8: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>);
					public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param1: javax.inject.Provider<globalAndroid.content.Context>, param2: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param3: javax.inject.Provider<com.google.gson.Gson>, param4: javax.inject.Provider<com.paypal.pyplcheckout.addcard.usecase.GetAddCardEnabledUseCase>, param5: javax.inject.Provider<com.paypal.pyplcheckout.threeds.usecase.StartAddCardThreeDsUseCase>, param6: javax.inject.Provider<com.paypal.pyplcheckout.addcard.usecase.AddCardUseCase>, param7: javax.inject.Provider<com.paypal.pyplcheckout.utils.PYPLCheckoutUtils>, param8: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>): com.paypal.pyplcheckout.addcard.AddCardViewModel_Factory;
					public get(): com.paypal.pyplcheckout.addcard.AddCardViewModel;
					public static newInstance(param0: com.paypal.pyplcheckout.services.Repository, param1: globalAndroid.content.Context, param2: com.paypal.pyplcheckout.events.Events, param3: com.google.gson.Gson, param4: com.paypal.pyplcheckout.addcard.usecase.GetAddCardEnabledUseCase, param5: com.paypal.pyplcheckout.threeds.usecase.StartAddCardThreeDsUseCase, param6: com.paypal.pyplcheckout.addcard.usecase.AddCardUseCase, param7: com.paypal.pyplcheckout.utils.PYPLCheckoutUtils, param8: com.paypal.pyplcheckout.model.DebugConfigManager): com.paypal.pyplcheckout.addcard.AddCardViewModel;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addcard {
				export class UpgradeAccessToken {
					public static class: java.lang.Class<com.paypal.pyplcheckout.addcard.UpgradeAccessToken>;
					/**
					 * Constructs a new instance of the com.paypal.pyplcheckout.addcard.UpgradeAccessToken interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getUserAccessToken(param0: com.paypal.pyplcheckout.addcard.UpgradeAccessTokenListener): void;
					});
					public constructor();
					public getUserAccessToken(param0: com.paypal.pyplcheckout.addcard.UpgradeAccessTokenListener): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addcard {
				export class UpgradeAccessTokenListener {
					public static class: java.lang.Class<com.paypal.pyplcheckout.addcard.UpgradeAccessTokenListener>;
					/**
					 * Constructs a new instance of the com.paypal.pyplcheckout.addcard.UpgradeAccessTokenListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onSuccess(param0: string, param1: java.util.Map<string,any>): void;
						onFailure(param0: java.lang.Exception, param1: string): void;
					});
					public constructor();
					public onSuccess(param0: string, param1: java.util.Map<string,any>): void;
					public onFailure(param0: java.lang.Exception, param1: string): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addcard {
				export class UpgradeAccessTokenListenerImpl extends com.paypal.pyplcheckout.addcard.UpgradeAccessTokenListener {
					public static class: java.lang.Class<com.paypal.pyplcheckout.addcard.UpgradeAccessTokenListenerImpl>;
					public onSuccess(param0: string, param1: java.util.Map<string,any>): void;
					public onFailure(param0: java.lang.Exception, param1: string): void;
					public constructor(param0: any, param1: any<any,any>, param2: com.paypal.pyplcheckout.utils.PYPLCheckoutUtils);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addcard {
				export module usecase {
					export class AddCardAuthenticationException extends com.paypal.pyplcheckout.services.ApiErrorException {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addcard.usecase.AddCardAuthenticationException>;
						public getErrorCode(): number;
						public constructor(param0: number);
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addcard {
				export module usecase {
					export class AddCardContingencyException extends com.paypal.pyplcheckout.services.ApiErrorException {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addcard.usecase.AddCardContingencyException>;
						public getError(): com.paypal.pyplcheckout.pojo.AddCardError;
						public constructor(param0: string, param1: com.paypal.pyplcheckout.pojo.AddCardError);
						public getFundingInstrumentId(): string;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addcard {
				export module usecase {
					export class AddCardUseCase {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addcard.usecase.AddCardUseCase>;
						public constructor(param0: com.paypal.pyplcheckout.services.Repository, param1: com.paypal.pyplcheckout.flavorauth.ClearAccessTokenUseCase);
						public invoke-bMdYcbs(param0: androidx.appcompat.app.AppCompatActivity, param1: string, param2: string, param3: string, param4: string, param5: string, param6: any): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addcard {
				export module usecase {
					export class AddCardUseCase_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.addcard.usecase.AddCardUseCase> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addcard.usecase.AddCardUseCase_Factory>;
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param1: javax.inject.Provider<com.paypal.pyplcheckout.flavorauth.ClearAccessTokenUseCase>): com.paypal.pyplcheckout.addcard.usecase.AddCardUseCase_Factory;
						public get(): com.paypal.pyplcheckout.addcard.usecase.AddCardUseCase;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param1: javax.inject.Provider<com.paypal.pyplcheckout.flavorauth.ClearAccessTokenUseCase>);
						public static newInstance(param0: com.paypal.pyplcheckout.services.Repository, param1: com.paypal.pyplcheckout.flavorauth.ClearAccessTokenUseCase): com.paypal.pyplcheckout.addcard.usecase.AddCardUseCase;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addcard {
				export module usecase {
					export class GetAddCardEnabledUseCase {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addcard.usecase.GetAddCardEnabledUseCase>;
						public constructor(param0: com.paypal.pyplcheckout.ab.AbManager, param1: com.paypal.pyplcheckout.model.DebugConfigManager);
						public invoke(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addcard {
				export module usecase {
					export class GetAddCardEnabledUseCase_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.addcard.usecase.GetAddCardEnabledUseCase> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addcard.usecase.GetAddCardEnabledUseCase_Factory>;
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.ab.AbManager>, param1: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>): com.paypal.pyplcheckout.addcard.usecase.GetAddCardEnabledUseCase_Factory;
						public get(): com.paypal.pyplcheckout.addcard.usecase.GetAddCardEnabledUseCase;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.ab.AbManager>, param1: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>);
						public static newInstance(param0: com.paypal.pyplcheckout.ab.AbManager, param1: com.paypal.pyplcheckout.model.DebugConfigManager): com.paypal.pyplcheckout.addcard.usecase.GetAddCardEnabledUseCase;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressbook {
				export abstract class AddressReviewState {
					public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.AddressReviewState>;
				}
				export module AddressReviewState {
					export class Loading extends com.paypal.pyplcheckout.addressbook.AddressReviewState {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.AddressReviewState.Loading>;
						public static INSTANCE: com.paypal.pyplcheckout.addressbook.AddressReviewState.Loading;
					}
					export class ShowAddressSuccess extends com.paypal.pyplcheckout.addressbook.AddressReviewState {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.AddressReviewState.ShowAddressSuccess>;
						public static INSTANCE: com.paypal.pyplcheckout.addressbook.AddressReviewState.ShowAddressSuccess;
					}
					export class ShowAddressSuggestion extends com.paypal.pyplcheckout.addressbook.AddressReviewState {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.AddressReviewState.ShowAddressSuggestion>;
						public static INSTANCE: com.paypal.pyplcheckout.addressbook.AddressReviewState.ShowAddressSuggestion;
					}
					export class ShowError extends com.paypal.pyplcheckout.addressbook.AddressReviewState {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.AddressReviewState.ShowError>;
						public constructor(param0: number, param1: java.lang.Exception);
						public copy(param0: number, param1: java.lang.Exception): com.paypal.pyplcheckout.addressbook.AddressReviewState.ShowError;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getException(): java.lang.Exception;
						public getErrorMessage(): number;
						public component1(): number;
						public component2(): java.lang.Exception;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressbook {
				export module model {
					export class AddressBookViewContentPageConfig extends com.paypal.pyplcheckout.navigation.ContentPage {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.model.AddressBookViewContentPageConfig>;
						public setFooterContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
						public constructor();
						public getBodyContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public setHeaderContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
						public getHeaderContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
						public setBodyContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
						public getHeaderContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public getTopBannerContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public removeContentViewListeners(): void;
						public getBodyContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
						public addViewsToContainer(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param1: globalAndroid.view.ViewGroup): void;
						public removeViewsFromContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup): void;
						public getFooterContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public addViewsToContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup): void;
						public constructor(param0: globalAndroid.content.Context, param1: androidx.fragment.app.Fragment, param2: com.paypal.pyplcheckout.addressbook.model.AddressBookViewListenerImpl, param3: com.paypal.pyplcheckout.navigation.ContentPage);
						public getFooterContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
						public clearHomeScreenViews(): void;
						public removeViewsFromContainer(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param1: globalAndroid.view.ViewGroup): void;
						public constructor(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param1: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param2: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param3: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>);
						public addViewsToContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup, param2: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressbook {
				export module model {
					export class AddressBookViewListenerImpl extends com.paypal.pyplcheckout.addressbook.view.interfaces.AddressBookViewListener {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.model.AddressBookViewListenerImpl>;
						public onPayPalBackArrowClick(): void;
						public constructor();
						public constructor(param0: com.paypal.pyplcheckout.addressbook.view.interfaces.PayPalAddressBookHeaderViewListener, param1: com.paypal.pyplcheckout.addressbook.view.interfaces.PayPalAddressBookInfoViewListener);
						public onPayPalAddNewAddressClick(): void;
						public onPayPalAddressSelected(param0: number): void;
						public onPayPalPickUpSelected(param0: number, param1: com.paypal.pyplcheckout.pojo.ShippingMethodType): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressbook {
				export module model {
					export class NewShippingAddressReviewViewListenerImpl extends com.paypal.pyplcheckout.addressbook.view.interfaces.AddressBookViewListener {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.model.NewShippingAddressReviewViewListenerImpl>;
						public onPayPalBackArrowClick(): void;
						public constructor();
						public constructor(param0: com.paypal.pyplcheckout.addressbook.view.interfaces.PayPalNewAddressReviewHeaderViewListener, param1: com.paypal.pyplcheckout.addressbook.view.interfaces.PayPalNewShippingAddressReviewViewListener, param2: com.paypal.pyplcheckout.home.view.interfaces.PayPalAddNewShippingAddressButtonClickedListener);
						public onPayPalAddNewAddressClick(): void;
						public onPayPalAddressSelected(param0: number): void;
						public onPayPalPickUpSelected(param0: number, param1: com.paypal.pyplcheckout.pojo.ShippingMethodType): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressbook {
				export module model {
					export class NewShippingAddressViewListenerImpl implements com.paypal.pyplcheckout.addressbook.view.interfaces.PayPalNewShippingAddressViewListener, com.paypal.pyplcheckout.addressbook.view.interfaces.PayPalAddressBookHeaderViewListener {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.model.NewShippingAddressViewListenerImpl>;
						public onPayPalBackArrowClick(): void;
						public constructor();
						public constructor(param0: com.paypal.pyplcheckout.addressbook.view.interfaces.PayPalNewAddressHeaderViewListener, param1: com.paypal.pyplcheckout.addressbook.view.interfaces.PayPalNewShippingAddressViewListener);
						public onPayPalAddNewAddressClick(): void;
						public onPayPalAddressSelected(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressbook {
				export module model {
					export class ShippingAddressReviewViewContentPageConfig extends com.paypal.pyplcheckout.navigation.ContentPage {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.model.ShippingAddressReviewViewContentPageConfig>;
						public setFooterContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
						public constructor();
						public getBodyContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public setHeaderContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
						public getHeaderContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
						public setBodyContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
						public getHeaderContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public getTopBannerContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public removeContentViewListeners(): void;
						public getBodyContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
						public addViewsToContainer(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param1: globalAndroid.view.ViewGroup): void;
						public removeViewsFromContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup): void;
						public getFooterContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public addViewsToContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup): void;
						public getFooterContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
						public clearHomeScreenViews(): void;
						public constructor(param0: globalAndroid.content.Context, param1: androidx.fragment.app.Fragment, param2: com.paypal.pyplcheckout.addressbook.model.NewShippingAddressReviewViewListenerImpl, param3: com.paypal.pyplcheckout.navigation.ContentPage);
						public removeViewsFromContainer(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param1: globalAndroid.view.ViewGroup): void;
						public constructor(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param1: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param2: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param3: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>);
						public addViewsToContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup, param2: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressbook {
				export module model {
					export class ShippingAddressViewContentPageConfig extends com.paypal.pyplcheckout.navigation.ContentPage {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.model.ShippingAddressViewContentPageConfig>;
						public setFooterContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
						public constructor();
						public getBodyContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public setHeaderContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
						public getHeaderContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
						public setBodyContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
						public getHeaderContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public getTopBannerContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public removeContentViewListeners(): void;
						public getBodyContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
						public constructor(param0: globalAndroid.content.Context, param1: androidx.fragment.app.Fragment, param2: com.paypal.pyplcheckout.addressbook.model.NewShippingAddressViewListenerImpl, param3: com.paypal.pyplcheckout.navigation.ContentPage);
						public addViewsToContainer(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param1: globalAndroid.view.ViewGroup): void;
						public removeViewsFromContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup): void;
						public getFooterContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public addViewsToContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup): void;
						public getFooterContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
						public clearHomeScreenViews(): void;
						public removeViewsFromContainer(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param1: globalAndroid.view.ViewGroup): void;
						public constructor(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param1: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param2: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param3: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>);
						public addViewsToContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup, param2: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressbook {
				export module usecase {
					export class AddShippingUseCase {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.usecase.AddShippingUseCase>;
						public constructor(param0: com.paypal.pyplcheckout.addressvalidation.AddressRepository);
						public invoke(param0: com.paypal.pyplcheckout.pojo.PortableShippingAddressRequest, param1: any): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressbook {
				export module usecase {
					export class AddShippingUseCase_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.addressbook.usecase.AddShippingUseCase> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.usecase.AddShippingUseCase_Factory>;
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.addressvalidation.AddressRepository>): com.paypal.pyplcheckout.addressbook.usecase.AddShippingUseCase_Factory;
						public static newInstance(param0: com.paypal.pyplcheckout.addressvalidation.AddressRepository): com.paypal.pyplcheckout.addressbook.usecase.AddShippingUseCase;
						public get(): com.paypal.pyplcheckout.addressbook.usecase.AddShippingUseCase;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.addressvalidation.AddressRepository>);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressbook {
				export module usecase {
					export class RetrieveInputAddressUseCase {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.usecase.RetrieveInputAddressUseCase>;
						public constructor(param0: com.paypal.pyplcheckout.addressvalidation.AddressRepository);
						public invoke(): com.paypal.pyplcheckout.pojo.PortableShippingAddressRequest;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressbook {
				export module usecase {
					export class RetrieveInputAddressUseCase_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.addressbook.usecase.RetrieveInputAddressUseCase> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.usecase.RetrieveInputAddressUseCase_Factory>;
						public static newInstance(param0: com.paypal.pyplcheckout.addressvalidation.AddressRepository): com.paypal.pyplcheckout.addressbook.usecase.RetrieveInputAddressUseCase;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.addressvalidation.AddressRepository>);
						public get(): com.paypal.pyplcheckout.addressbook.usecase.RetrieveInputAddressUseCase;
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.addressvalidation.AddressRepository>): com.paypal.pyplcheckout.addressbook.usecase.RetrieveInputAddressUseCase_Factory;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressbook {
				export module usecase {
					export class RetrieveValidatedAddressUseCase {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.usecase.RetrieveValidatedAddressUseCase>;
						public constructor(param0: com.paypal.pyplcheckout.addressvalidation.AddressRepository);
						public invoke(): com.paypal.pyplcheckout.pojo.AddressValidation;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressbook {
				export module usecase {
					export class RetrieveValidatedAddressUseCase_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.addressbook.usecase.RetrieveValidatedAddressUseCase> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.usecase.RetrieveValidatedAddressUseCase_Factory>;
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.addressvalidation.AddressRepository>): com.paypal.pyplcheckout.addressbook.usecase.RetrieveValidatedAddressUseCase_Factory;
						public static newInstance(param0: com.paypal.pyplcheckout.addressvalidation.AddressRepository): com.paypal.pyplcheckout.addressbook.usecase.RetrieveValidatedAddressUseCase;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.addressvalidation.AddressRepository>);
						public get(): com.paypal.pyplcheckout.addressbook.usecase.RetrieveValidatedAddressUseCase;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressbook {
				export module usecase {
					export class ValidateAndAddAddressUseCase {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.usecase.ValidateAndAddAddressUseCase>;
						public invoke(param0: com.paypal.pyplcheckout.pojo.PortableShippingAddressRequest, param1: any): any;
						public constructor(param0: com.paypal.pyplcheckout.addressbook.usecase.AddShippingUseCase, param1: com.paypal.pyplcheckout.addressvalidation.ValidateAddressUseCase, param2: com.paypal.pyplcheckout.ab.AbManager);
					}
					export module ValidateAndAddAddressUseCase {
						export abstract class AddAddressResult {
							public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.usecase.ValidateAndAddAddressUseCase.AddAddressResult>;
						}
						export module AddAddressResult {
							export class AddAddressSuccess extends com.paypal.pyplcheckout.addressbook.usecase.ValidateAndAddAddressUseCase.AddAddressResult {
								public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.usecase.ValidateAndAddAddressUseCase.AddAddressResult.AddAddressSuccess>;
								public static INSTANCE: com.paypal.pyplcheckout.addressbook.usecase.ValidateAndAddAddressUseCase.AddAddressResult.AddAddressSuccess;
							}
							export class Error extends com.paypal.pyplcheckout.addressbook.usecase.ValidateAndAddAddressUseCase.AddAddressResult {
								public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.usecase.ValidateAndAddAddressUseCase.AddAddressResult.Error>;
								public getException(): java.lang.Exception;
								public component1(): java.lang.Exception;
								public toString(): string;
								public constructor(param0: java.lang.Exception);
								public equals(param0: any): boolean;
								public hashCode(): number;
								public copy(param0: java.lang.Exception): com.paypal.pyplcheckout.addressbook.usecase.ValidateAndAddAddressUseCase.AddAddressResult.Error;
							}
							export class InvalidAddress extends com.paypal.pyplcheckout.addressbook.usecase.ValidateAndAddAddressUseCase.AddAddressResult {
								public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.usecase.ValidateAndAddAddressUseCase.AddAddressResult.InvalidAddress>;
								public static INSTANCE: com.paypal.pyplcheckout.addressbook.usecase.ValidateAndAddAddressUseCase.AddAddressResult.InvalidAddress;
							}
							export class ShowAddressSuggestion extends com.paypal.pyplcheckout.addressbook.usecase.ValidateAndAddAddressUseCase.AddAddressResult {
								public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.usecase.ValidateAndAddAddressUseCase.AddAddressResult.ShowAddressSuggestion>;
								public toString(): string;
								public equals(param0: any): boolean;
								public copy(param0: com.paypal.pyplcheckout.pojo.AddressValidation): com.paypal.pyplcheckout.addressbook.usecase.ValidateAndAddAddressUseCase.AddAddressResult.ShowAddressSuggestion;
								public getAddressValidation(): com.paypal.pyplcheckout.pojo.AddressValidation;
								public component1(): com.paypal.pyplcheckout.pojo.AddressValidation;
								public constructor(param0: com.paypal.pyplcheckout.pojo.AddressValidation);
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressbook {
				export module usecase {
					export class ValidateAndAddAddressUseCase_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.addressbook.usecase.ValidateAndAddAddressUseCase> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.usecase.ValidateAndAddAddressUseCase_Factory>;
						public get(): com.paypal.pyplcheckout.addressbook.usecase.ValidateAndAddAddressUseCase;
						public static newInstance(param0: com.paypal.pyplcheckout.addressbook.usecase.AddShippingUseCase, param1: com.paypal.pyplcheckout.addressvalidation.ValidateAddressUseCase, param2: com.paypal.pyplcheckout.ab.AbManager): com.paypal.pyplcheckout.addressbook.usecase.ValidateAndAddAddressUseCase;
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.addressbook.usecase.AddShippingUseCase>, param1: javax.inject.Provider<com.paypal.pyplcheckout.addressvalidation.ValidateAddressUseCase>, param2: javax.inject.Provider<com.paypal.pyplcheckout.ab.AbManager>): com.paypal.pyplcheckout.addressbook.usecase.ValidateAndAddAddressUseCase_Factory;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.addressbook.usecase.AddShippingUseCase>, param1: javax.inject.Provider<com.paypal.pyplcheckout.addressvalidation.ValidateAddressUseCase>, param2: javax.inject.Provider<com.paypal.pyplcheckout.ab.AbManager>);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressbook {
				export module view {
					export class AddressRecommendationViewModel {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.AddressRecommendationViewModel>;
						public constructor(param0: com.paypal.pyplcheckout.addressbook.usecase.RetrieveInputAddressUseCase, param1: com.paypal.pyplcheckout.addressbook.usecase.RetrieveValidatedAddressUseCase, param2: com.paypal.pyplcheckout.addressbook.usecase.AddShippingUseCase);
						public getAddressRecommendationViewState(): androidx.lifecycle.LiveData<com.paypal.pyplcheckout.addressbook.view.AddressRecommendationViewState>;
						public addShippingAddress(param0: com.paypal.pyplcheckout.pojo.PortableShippingAddressRequest): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressbook {
				export module view {
					export class AddressRecommendationViewModel_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.addressbook.view.AddressRecommendationViewModel> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.AddressRecommendationViewModel_Factory>;
						public get(): com.paypal.pyplcheckout.addressbook.view.AddressRecommendationViewModel;
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.addressbook.usecase.RetrieveInputAddressUseCase>, param1: javax.inject.Provider<com.paypal.pyplcheckout.addressbook.usecase.RetrieveValidatedAddressUseCase>, param2: javax.inject.Provider<com.paypal.pyplcheckout.addressbook.usecase.AddShippingUseCase>): com.paypal.pyplcheckout.addressbook.view.AddressRecommendationViewModel_Factory;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.addressbook.usecase.RetrieveInputAddressUseCase>, param1: javax.inject.Provider<com.paypal.pyplcheckout.addressbook.usecase.RetrieveValidatedAddressUseCase>, param2: javax.inject.Provider<com.paypal.pyplcheckout.addressbook.usecase.AddShippingUseCase>);
						public static newInstance(param0: com.paypal.pyplcheckout.addressbook.usecase.RetrieveInputAddressUseCase, param1: com.paypal.pyplcheckout.addressbook.usecase.RetrieveValidatedAddressUseCase, param2: com.paypal.pyplcheckout.addressbook.usecase.AddShippingUseCase): com.paypal.pyplcheckout.addressbook.view.AddressRecommendationViewModel;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressbook {
				export module view {
					export abstract class AddressRecommendationViewState {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.AddressRecommendationViewState>;
					}
					export module AddressRecommendationViewState {
						export class ShowErrorState extends com.paypal.pyplcheckout.addressbook.view.AddressRecommendationViewState {
							public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.AddressRecommendationViewState.ShowErrorState>;
							public static INSTANCE: com.paypal.pyplcheckout.addressbook.view.AddressRecommendationViewState.ShowErrorState;
						}
						export class ShowInitialRecommendationState extends com.paypal.pyplcheckout.addressbook.view.AddressRecommendationViewState {
							public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.AddressRecommendationViewState.ShowInitialRecommendationState>;
							public constructor(param0: com.paypal.pyplcheckout.pojo.PortableShippingAddressRequest, param1: com.paypal.pyplcheckout.pojo.AddressValidation);
							public getReformattedAddress(): com.paypal.pyplcheckout.pojo.AddressValidation;
							public copy(param0: com.paypal.pyplcheckout.pojo.PortableShippingAddressRequest, param1: com.paypal.pyplcheckout.pojo.AddressValidation): com.paypal.pyplcheckout.addressbook.view.AddressRecommendationViewState.ShowInitialRecommendationState;
							public hashCode(): number;
							public getOriginalAddress(): com.paypal.pyplcheckout.pojo.PortableShippingAddressRequest;
							public component1(): com.paypal.pyplcheckout.pojo.PortableShippingAddressRequest;
							public component2(): com.paypal.pyplcheckout.pojo.AddressValidation;
							public toString(): string;
							public equals(param0: any): boolean;
						}
						export class ShowLoadingState extends com.paypal.pyplcheckout.addressbook.view.AddressRecommendationViewState {
							public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.AddressRecommendationViewState.ShowLoadingState>;
							public static INSTANCE: com.paypal.pyplcheckout.addressbook.view.AddressRecommendationViewState.ShowLoadingState;
						}
						export class ShowSuccessfulAddAddressState extends com.paypal.pyplcheckout.addressbook.view.AddressRecommendationViewState {
							public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.AddressRecommendationViewState.ShowSuccessfulAddAddressState>;
							public constructor(param0: java.util.List<com.paypal.pyplcheckout.pojo.ShippingAddress>);
							public hashCode(): number;
							public getUpdatedShippingAddressList(): java.util.List<com.paypal.pyplcheckout.pojo.ShippingAddress>;
							public component1(): java.util.List<com.paypal.pyplcheckout.pojo.ShippingAddress>;
							public toString(): string;
							public equals(param0: any): boolean;
							public copy(param0: java.util.List<com.paypal.pyplcheckout.pojo.ShippingAddress>): com.paypal.pyplcheckout.addressbook.view.AddressRecommendationViewState.ShowSuccessfulAddAddressState;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressbook {
				export module view {
					export module adapters {
						export class AddressBookAdapter extends androidx.recyclerview.widget.RecyclerView.Adapter<androidx.recyclerview.widget.RecyclerView.ViewHolder> {
							public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.adapters.AddressBookAdapter>;
							public onBindViewHolder(param0: androidx.recyclerview.widget.RecyclerView.ViewHolder, param1: number): void;
							public getItemViewType(param0: number): number;
							public updateSelectedShippingAddress(param0: com.paypal.pyplcheckout.pojo.ShippingAddress): void;
							public getItemCount(): number;
							public constructor(param0: globalAndroid.content.Context, param1: java.util.List<com.paypal.pyplcheckout.pojo.ShippingAddress>, param2: com.paypal.pyplcheckout.pojo.ShippingAddress, param3: com.paypal.pyplcheckout.pojo.ShippingMethodType, param4: com.paypal.pyplcheckout.addressbook.view.adapters.AddressBookAdapter.AddressBookAdapterClickListener);
							public onCreateViewHolder(param0: globalAndroid.view.ViewGroup, param1: number): com.paypal.pyplcheckout.addressbook.view.adapters.AddressBookAdapter.ItemViewHolder;
						}
						export module AddressBookAdapter {
							export class AddressBookAdapterClickListener {
								public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.adapters.AddressBookAdapter.AddressBookAdapterClickListener>;
								/**
								 * Constructs a new instance of the com.paypal.pyplcheckout.addressbook.view.adapters.AddressBookAdapter$AddressBookAdapterClickListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									onShippingAddressSelected(param0: number): void;
									onAddNewShippingAddressClicked(): void;
								});
								public constructor();
								public onShippingAddressSelected(param0: number): void;
								public onAddNewShippingAddressClicked(): void;
							}
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.adapters.AddressBookAdapter.Companion>;
								public getLastSelectedShippingAddressIndex(): number;
								public setLastSelectedShippingAddressIndex(param0: number): void;
							}
							export class ItemViewHolder {
								public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.adapters.AddressBookAdapter.ItemViewHolder>;
								public getAddressBookShipToTv(): globalAndroid.widget.TextView;
								public getAddressBookSelectedCb(): globalAndroid.widget.ImageView;
								public constructor(param0: globalAndroid.view.View, param1: com.paypal.pyplcheckout.addressbook.view.adapters.AddressBookAdapter.AddressBookAdapterClickListener, param2: com.paypal.pyplcheckout.addressbook.view.adapters.AddressBookAdapter);
								public getAddressBookInvalidTv(): globalAndroid.widget.TextView;
								public setInvalid(param0: boolean): void;
								public getAddressBookFirstLineTv(): globalAndroid.widget.TextView;
								public getAddressBookCityStateZipTv(): globalAndroid.widget.TextView;
								public getListSelectorCardView(): com.google.android.material.card.MaterialCardView;
								public getAddressBookSecondLineTv(): globalAndroid.widget.TextView;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressbook {
				export module view {
					export module adapters {
						export class ShippingAdapter extends androidx.recyclerview.widget.RecyclerView.Adapter<com.paypal.pyplcheckout.addressbook.view.adapters.ShippingAdapter.ItemViewHolder> {
							public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.adapters.ShippingAdapter>;
							public getQuery(): string;
							public onBindViewHolder(param0: com.paypal.pyplcheckout.addressbook.view.adapters.ShippingAdapter.ItemViewHolder, param1: number): void;
							public getContext(): globalAndroid.content.Context;
							public getAddressList(): java.util.List<com.paypal.pyplcheckout.addshipping.model.Suggestions>;
							public setQuery(param0: string): void;
							public getItemViewType(param0: number): number;
							public getCountryList(): java.util.List<com.paypal.pyplcheckout.addshipping.model.Country>;
							public setCountryList(param0: java.util.List<com.paypal.pyplcheckout.addshipping.model.Country>): void;
							public getItemCount(): number;
							public setAddressList(param0: java.util.List<com.paypal.pyplcheckout.addshipping.model.Suggestions>): void;
							public onCreateViewHolder(param0: globalAndroid.view.ViewGroup, param1: number): com.paypal.pyplcheckout.addressbook.view.adapters.ShippingAdapter.ItemViewHolder;
							public constructor(param0: globalAndroid.content.Context, param1: java.util.List<com.paypal.pyplcheckout.addshipping.model.Suggestions>, param2: java.util.List<com.paypal.pyplcheckout.addshipping.model.Country>, param3: com.paypal.pyplcheckout.addressbook.view.adapters.ShippingAdapter.ShippingAdapterClickListener, param4: com.paypal.pyplcheckout.addressbook.view.adapters.ShippingAdapter.CountryAdapterClickListener, param5: string);
						}
						export module ShippingAdapter {
							export class CountryAdapterClickListener {
								public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.adapters.ShippingAdapter.CountryAdapterClickListener>;
								/**
								 * Constructs a new instance of the com.paypal.pyplcheckout.addressbook.view.adapters.ShippingAdapter$CountryAdapterClickListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									onCountrySelected(param0: string, param1: number): void;
								});
								public constructor();
								public onCountrySelected(param0: string, param1: number): void;
							}
							export class ItemViewHolder {
								public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.adapters.ShippingAdapter.ItemViewHolder>;
								public setAddressLine2(param0: globalAndroid.widget.TextView): void;
								public getAddressLine1(): globalAndroid.widget.TextView;
								public setCheck(param0: globalAndroid.widget.ImageView): void;
								public setValue(param0: globalAndroid.widget.TextView): void;
								public getValue(): globalAndroid.widget.TextView;
								public getCheck(): globalAndroid.widget.ImageView;
								public getType(): com.paypal.pyplcheckout.addressbook.view.adapters.ShippingAdapter.ShippingItemViewType;
								public getAddressLine2(): globalAndroid.widget.TextView;
								public constructor(param0: globalAndroid.view.View, param1: com.paypal.pyplcheckout.addressbook.view.adapters.ShippingAdapter.ShippingAdapterClickListener, param2: com.paypal.pyplcheckout.addressbook.view.adapters.ShippingAdapter.CountryAdapterClickListener, param3: com.paypal.pyplcheckout.addressbook.view.adapters.ShippingAdapter, param4: com.paypal.pyplcheckout.addressbook.view.adapters.ShippingAdapter.ShippingItemViewType);
								public setAddressLine1(param0: globalAndroid.widget.TextView): void;
							}
							export class ShippingAdapterClickListener {
								public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.adapters.ShippingAdapter.ShippingAdapterClickListener>;
								/**
								 * Constructs a new instance of the com.paypal.pyplcheckout.addressbook.view.adapters.ShippingAdapter$ShippingAdapterClickListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									onAddressSelected(param0: string, param1: number): void;
								});
								public constructor();
								public onAddressSelected(param0: string, param1: number): void;
							}
							export class ShippingItemViewType {
								public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.adapters.ShippingAdapter.ShippingItemViewType>;
								public static TYPE_ADDRESS: com.paypal.pyplcheckout.addressbook.view.adapters.ShippingAdapter.ShippingItemViewType;
								public static TYPE_COUNTRY: com.paypal.pyplcheckout.addressbook.view.adapters.ShippingAdapter.ShippingItemViewType;
								public static TYPE_ADD_MANUALLY: com.paypal.pyplcheckout.addressbook.view.adapters.ShippingAdapter.ShippingItemViewType;
								public static values(): androidNative.Array<com.paypal.pyplcheckout.addressbook.view.adapters.ShippingAdapter.ShippingItemViewType>;
								public getValue(): number;
								public static valueOf(param0: string): com.paypal.pyplcheckout.addressbook.view.adapters.ShippingAdapter.ShippingItemViewType;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressbook {
				export module view {
					export module customviews {
						export class AddressListView {
							public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.customviews.AddressListView>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public onMeasure(param0: number, param1: number): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
							public _$_clearFindViewByIdCache(): void;
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public constructor(param0: globalAndroid.content.Context);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressbook {
				export module view {
					export module customviews {
						export class DividerItemDecorator {
							public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.customviews.DividerItemDecorator>;
							public constructor(param0: globalAndroid.graphics.drawable.Drawable);
							public onDraw(param0: globalAndroid.graphics.Canvas, param1: androidx.recyclerview.widget.RecyclerView, param2: androidx.recyclerview.widget.RecyclerView.State): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressbook {
				export module view {
					export module customviews {
						export class PayPalAddressBookHeaderView implements com.paypal.pyplcheckout.navigation.interfaces.ContentView {
							public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.customviews.PayPalAddressBookHeaderView>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment);
							public getContentViewMinHeight(): number;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public removeListeners(): void;
							public getViewId(): string;
							public getIsAnchoredToBottomSheet(): boolean;
							public onClick(param0: globalAndroid.view.View): void;
							public getFragment(): androidx.fragment.app.Fragment;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment, param4: com.paypal.pyplcheckout.addressbook.view.interfaces.PayPalAddressBookHeaderViewListener);
							public _$_clearFindViewByIdCache(): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public constructor(param0: globalAndroid.content.Context);
							public setContentViewVisibility(param0: number): void;
						}
						export module PayPalAddressBookHeaderView {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.customviews.PayPalAddressBookHeaderView.Companion>;
								public getTAG(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressbook {
				export module view {
					export module customviews {
						export class PayPalAddressBookInfoView implements com.paypal.pyplcheckout.navigation.interfaces.ContentView, com.paypal.pyplcheckout.navigation.interfaces.ICustomViewsViewModel, com.paypal.pyplcheckout.addressbook.view.adapters.AddressBookAdapter.AddressBookAdapterClickListener, com.paypal.pyplcheckout.shippingmethods.view.adapters.ShippingMethodsAdapter.ShippingMethodsAdapterClickListener {
							public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.customviews.PayPalAddressBookInfoView>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment);
							public onShippingAddressSelected(param0: number): void;
							public getContentViewMinHeight(): number;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public initViewModelObservers(): void;
							public removeListeners(): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment, param4: com.paypal.pyplcheckout.addressbook.view.interfaces.PayPalAddressBookInfoViewListener);
							public getViewId(): string;
							public getIsAnchoredToBottomSheet(): boolean;
							public onClick(param0: globalAndroid.view.View): void;
							public getFragment(): androidx.fragment.app.Fragment;
							public onAddNewShippingAddressClicked(): void;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public getLifecycleOwner(param0: globalAndroid.view.View): androidx.lifecycle.LifecycleOwner;
							public _$_clearFindViewByIdCache(): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public onShippingMethodSelected(param0: number, param1: com.paypal.pyplcheckout.pojo.ShippingMethodType): void;
							public getComponentActivity(param0: globalAndroid.content.Context): androidx.activity.ComponentActivity;
							public constructor(param0: globalAndroid.content.Context);
							public setContentViewVisibility(param0: number): void;
						}
						export module PayPalAddressBookInfoView {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.customviews.PayPalAddressBookInfoView.Companion>;
								public getTAG(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressbook {
				export module view {
					export module customviews {
						export class PayPalNewShippingAddressHeaderView implements com.paypal.pyplcheckout.navigation.interfaces.ContentView, com.paypal.pyplcheckout.navigation.interfaces.ICustomViewsViewModel {
							public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.customviews.PayPalNewShippingAddressHeaderView>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment);
							public getContentViewMinHeight(): number;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public initViewModelObservers(): void;
							public removeListeners(): void;
							public getViewId(): string;
							public getIsAnchoredToBottomSheet(): boolean;
							public onClick(param0: globalAndroid.view.View): void;
							public getFragment(): androidx.fragment.app.Fragment;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public getLifecycleOwner(param0: globalAndroid.view.View): androidx.lifecycle.LifecycleOwner;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment, param4: com.paypal.pyplcheckout.addressbook.view.interfaces.PayPalAddressBookHeaderViewListener);
							public _$_clearFindViewByIdCache(): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public getComponentActivity(param0: globalAndroid.content.Context): androidx.activity.ComponentActivity;
							public constructor(param0: globalAndroid.content.Context);
							public setContentViewVisibility(param0: number): void;
						}
						export module PayPalNewShippingAddressHeaderView {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.customviews.PayPalNewShippingAddressHeaderView.Companion>;
								public getTAG(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressbook {
				export module view {
					export module customviews {
						export class PayPalNewShippingAddressReviewView implements com.paypal.pyplcheckout.navigation.interfaces.ICustomViewsViewModel, com.paypal.pyplcheckout.navigation.interfaces.ContentView {
							public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.customviews.PayPalNewShippingAddressReviewView>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment);
							public getContentViewMinHeight(): number;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public initViewModelObservers(): void;
							public removeListeners(): void;
							public populateView(): void;
							public getViewId(): string;
							public getIsAnchoredToBottomSheet(): boolean;
							public getFragment(): androidx.fragment.app.Fragment;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public getLifecycleOwner(param0: globalAndroid.view.View): androidx.lifecycle.LifecycleOwner;
							public onAttachedToWindow(): void;
							public _$_clearFindViewByIdCache(): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public getComponentActivity(param0: globalAndroid.content.Context): androidx.activity.ComponentActivity;
							public constructor(param0: globalAndroid.content.Context);
							public setContentViewVisibility(param0: number): void;
						}
						export module PayPalNewShippingAddressReviewView {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.customviews.PayPalNewShippingAddressReviewView.Companion>;
								public getTAG(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressbook {
				export module view {
					export module customviews {
						export class PayPalNewShippingAddressSearchView implements com.paypal.pyplcheckout.navigation.interfaces.ContentView, com.paypal.pyplcheckout.addressbook.view.adapters.ShippingAdapter.ShippingAdapterClickListener, com.paypal.pyplcheckout.addressbook.view.adapters.ShippingAdapter.CountryAdapterClickListener, com.paypal.pyplcheckout.navigation.interfaces.ICustomViewsViewModel {
							public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.customviews.PayPalNewShippingAddressSearchView>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public onAddressSelected(param0: string, param1: number): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment);
							public getContentViewMinHeight(): number;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public onCountrySelected(param0: string, param1: number): void;
							public initViewModelObservers(): void;
							public removeListeners(): void;
							public getViewId(): string;
							public getIsAnchoredToBottomSheet(): boolean;
							public getFragment(): androidx.fragment.app.Fragment;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public getLifecycleOwner(param0: globalAndroid.view.View): androidx.lifecycle.LifecycleOwner;
							public _$_clearFindViewByIdCache(): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment, param4: com.paypal.pyplcheckout.addressbook.view.interfaces.PayPalNewShippingAddressViewListener);
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public getComponentActivity(param0: globalAndroid.content.Context): androidx.activity.ComponentActivity;
							public constructor(param0: globalAndroid.content.Context);
							public setContentViewVisibility(param0: number): void;
						}
						export module PayPalNewShippingAddressSearchView {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.customviews.PayPalNewShippingAddressSearchView.Companion>;
								public getTAG(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressbook {
				export module view {
					export module fragments {
						export class PYPLAddressBookFragment extends com.paypal.pyplcheckout.home.view.BaseFragment {
							public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.fragments.PYPLAddressBookFragment>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public static TAG: string;
							public constructor();
							public onDestroyView(): void;
							public getViewId(): string;
							public static newInstance(): com.paypal.pyplcheckout.addressbook.view.fragments.PYPLAddressBookFragment;
							public onActivityCreated(param0: globalAndroid.os.Bundle): void;
							public onCreateView(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: globalAndroid.os.Bundle): globalAndroid.view.View;
							public onDetach(): void;
							public _$_clearFindViewByIdCache(): void;
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public onResume(): void;
						}
						export module PYPLAddressBookFragment {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.fragments.PYPLAddressBookFragment.Companion>;
								public newInstance(): com.paypal.pyplcheckout.addressbook.view.fragments.PYPLAddressBookFragment;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressbook {
				export module view {
					export module fragments {
						export class PYPLAddressRecommendationFragment extends com.paypal.pyplcheckout.home.view.BaseFragment {
							public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.fragments.PYPLAddressRecommendationFragment>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public factory: androidx.lifecycle.ViewModelProvider.Factory;
							public static TAG: string;
							public constructor();
							public onAttach(param0: globalAndroid.content.Context): void;
							public onDestroyView(): void;
							public static newInstance(): com.paypal.pyplcheckout.addressbook.view.fragments.PYPLAddressRecommendationFragment;
							public getViewId(): string;
							public onViewCreated(param0: globalAndroid.view.View, param1: globalAndroid.os.Bundle): void;
							public getFactory(): androidx.lifecycle.ViewModelProvider.Factory;
							public onCreateView(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: globalAndroid.os.Bundle): globalAndroid.view.View;
							public _$_clearFindViewByIdCache(): void;
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public setFactory(param0: androidx.lifecycle.ViewModelProvider.Factory): void;
						}
						export module PYPLAddressRecommendationFragment {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.fragments.PYPLAddressRecommendationFragment.Companion>;
								public newInstance(): com.paypal.pyplcheckout.addressbook.view.fragments.PYPLAddressRecommendationFragment;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressbook {
				export module view {
					export module fragments {
						export class PYPLAddressRecommendationFragment_MembersInjector extends dagger.MembersInjector<com.paypal.pyplcheckout.addressbook.view.fragments.PYPLAddressRecommendationFragment> {
							public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.fragments.PYPLAddressRecommendationFragment_MembersInjector>;
							public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param1: javax.inject.Provider<androidx.lifecycle.ViewModelProvider.Factory>): dagger.MembersInjector<com.paypal.pyplcheckout.addressbook.view.fragments.PYPLAddressRecommendationFragment>;
							public injectMembers(param0: com.paypal.pyplcheckout.addressbook.view.fragments.PYPLAddressRecommendationFragment): void;
							public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param1: javax.inject.Provider<androidx.lifecycle.ViewModelProvider.Factory>);
							public static injectFactory(param0: com.paypal.pyplcheckout.addressbook.view.fragments.PYPLAddressRecommendationFragment, param1: androidx.lifecycle.ViewModelProvider.Factory): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressbook {
				export module view {
					export module fragments {
						export class PYPLNewShippingAddressFragment extends com.paypal.pyplcheckout.home.view.BaseFragment {
							public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.fragments.PYPLNewShippingAddressFragment>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public static TAG: string;
							public constructor();
							public onDestroyView(): void;
							public getViewId(): string;
							public onActivityCreated(param0: globalAndroid.os.Bundle): void;
							public onCreateView(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: globalAndroid.os.Bundle): globalAndroid.view.View;
							public _$_clearFindViewByIdCache(): void;
							public static newInstance(): com.paypal.pyplcheckout.addressbook.view.fragments.PYPLNewShippingAddressFragment;
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public onResume(): void;
						}
						export module PYPLNewShippingAddressFragment {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.fragments.PYPLNewShippingAddressFragment.Companion>;
								public newInstance(): com.paypal.pyplcheckout.addressbook.view.fragments.PYPLNewShippingAddressFragment;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressbook {
				export module view {
					export module fragments {
						export class PYPLNewShippingAddressReviewFragment extends com.paypal.pyplcheckout.home.view.BaseFragment {
							public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.fragments.PYPLNewShippingAddressReviewFragment>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public factory: androidx.lifecycle.ViewModelProvider.Factory;
							public static TAG: string;
							public constructor();
							public onStop(): void;
							public onActivityCreated(param0: globalAndroid.os.Bundle): void;
							public getFactory(): androidx.lifecycle.ViewModelProvider.Factory;
							public onCreateView(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: globalAndroid.os.Bundle): globalAndroid.view.View;
							public setFactory(param0: androidx.lifecycle.ViewModelProvider.Factory): void;
							public onResume(): void;
							public onAttach(param0: globalAndroid.content.Context): void;
							public onDestroyView(): void;
							public getViewId(): string;
							public static newInstance(): com.paypal.pyplcheckout.addressbook.view.fragments.PYPLNewShippingAddressReviewFragment;
							public _$_clearFindViewByIdCache(): void;
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
						}
						export module PYPLNewShippingAddressReviewFragment {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.fragments.PYPLNewShippingAddressReviewFragment.Companion>;
								public newInstance(): com.paypal.pyplcheckout.addressbook.view.fragments.PYPLNewShippingAddressReviewFragment;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressbook {
				export module view {
					export module fragments {
						export class PYPLNewShippingAddressReviewFragment_MembersInjector extends dagger.MembersInjector<com.paypal.pyplcheckout.addressbook.view.fragments.PYPLNewShippingAddressReviewFragment> {
							public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.fragments.PYPLNewShippingAddressReviewFragment_MembersInjector>;
							public static injectFactory(param0: com.paypal.pyplcheckout.addressbook.view.fragments.PYPLNewShippingAddressReviewFragment, param1: androidx.lifecycle.ViewModelProvider.Factory): void;
							public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param1: javax.inject.Provider<androidx.lifecycle.ViewModelProvider.Factory>);
							public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param1: javax.inject.Provider<androidx.lifecycle.ViewModelProvider.Factory>): dagger.MembersInjector<com.paypal.pyplcheckout.addressbook.view.fragments.PYPLNewShippingAddressReviewFragment>;
							public injectMembers(param0: com.paypal.pyplcheckout.addressbook.view.fragments.PYPLNewShippingAddressReviewFragment): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressbook {
				export module view {
					export module interfaces {
						export class AddressBookViewListener implements com.paypal.pyplcheckout.addressbook.view.interfaces.PayPalAddressBookInfoViewListener, com.paypal.pyplcheckout.addressbook.view.interfaces.PayPalAddressBookHeaderViewListener {
							public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.interfaces.AddressBookViewListener>;
							/**
							 * Constructs a new instance of the com.paypal.pyplcheckout.addressbook.view.interfaces.AddressBookViewListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onPayPalAddNewAddressClick(): void;
								onPayPalAddressSelected(param0: number): void;
								onPayPalPickUpSelected(param0: number, param1: com.paypal.pyplcheckout.pojo.ShippingMethodType): void;
								onPayPalBackArrowClick(): void;
							});
							public constructor();
							public onPayPalBackArrowClick(): void;
							public onPayPalAddNewAddressClick(): void;
							public onPayPalAddressSelected(param0: number): void;
							public onPayPalPickUpSelected(param0: number, param1: com.paypal.pyplcheckout.pojo.ShippingMethodType): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressbook {
				export module view {
					export module interfaces {
						export class PayPalAddressBookHeaderViewListener {
							public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.interfaces.PayPalAddressBookHeaderViewListener>;
							/**
							 * Constructs a new instance of the com.paypal.pyplcheckout.addressbook.view.interfaces.PayPalAddressBookHeaderViewListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onPayPalBackArrowClick(): void;
							});
							public constructor();
							public onPayPalBackArrowClick(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressbook {
				export module view {
					export module interfaces {
						export class PayPalAddressBookInfoViewListener {
							public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.interfaces.PayPalAddressBookInfoViewListener>;
							/**
							 * Constructs a new instance of the com.paypal.pyplcheckout.addressbook.view.interfaces.PayPalAddressBookInfoViewListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onPayPalAddNewAddressClick(): void;
								onPayPalAddressSelected(param0: number): void;
								onPayPalPickUpSelected(param0: number, param1: com.paypal.pyplcheckout.pojo.ShippingMethodType): void;
							});
							public constructor();
							public onPayPalAddNewAddressClick(): void;
							public onPayPalAddressSelected(param0: number): void;
							public onPayPalPickUpSelected(param0: number, param1: com.paypal.pyplcheckout.pojo.ShippingMethodType): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressbook {
				export module view {
					export module interfaces {
						export class PayPalNewAddressHeaderViewListener {
							public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.interfaces.PayPalNewAddressHeaderViewListener>;
							/**
							 * Constructs a new instance of the com.paypal.pyplcheckout.addressbook.view.interfaces.PayPalNewAddressHeaderViewListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onPayPalBackArrowClick(): void;
							});
							public constructor();
							public onPayPalBackArrowClick(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressbook {
				export module view {
					export module interfaces {
						export class PayPalNewAddressReviewHeaderViewListener {
							public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.interfaces.PayPalNewAddressReviewHeaderViewListener>;
							/**
							 * Constructs a new instance of the com.paypal.pyplcheckout.addressbook.view.interfaces.PayPalNewAddressReviewHeaderViewListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onPayPalBackArrowClick(): void;
							});
							public constructor();
							public onPayPalBackArrowClick(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressbook {
				export module view {
					export module interfaces {
						export class PayPalNewShippingAddressReviewViewListener {
							public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.interfaces.PayPalNewShippingAddressReviewViewListener>;
							/**
							 * Constructs a new instance of the com.paypal.pyplcheckout.addressbook.view.interfaces.PayPalNewShippingAddressReviewViewListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onPayPalAddNewAddressReviewClick(): void;
								onPayPalAddressSelected(param0: number): void;
								onPayPalPickUpSelected(param0: number, param1: com.paypal.pyplcheckout.pojo.ShippingMethodType): void;
							});
							public constructor();
							public onPayPalAddressSelected(param0: number): void;
							public onPayPalAddNewAddressReviewClick(): void;
							public onPayPalPickUpSelected(param0: number, param1: com.paypal.pyplcheckout.pojo.ShippingMethodType): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressbook {
				export module view {
					export module interfaces {
						export class PayPalNewShippingAddressViewListener {
							public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.view.interfaces.PayPalNewShippingAddressViewListener>;
							/**
							 * Constructs a new instance of the com.paypal.pyplcheckout.addressbook.view.interfaces.PayPalNewShippingAddressViewListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onPayPalAddNewAddressClick(): void;
								onPayPalAddressSelected(param0: number): void;
								onPayPalBackArrowClick(): void;
							});
							public constructor();
							public onPayPalBackArrowClick(): void;
							public onPayPalAddNewAddressClick(): void;
							public onPayPalAddressSelected(param0: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressbook {
				export module viewmodel {
					export class AddressReviewViewModel {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.viewmodel.AddressReviewViewModel>;
						public constructor(param0: com.paypal.pyplcheckout.addressbook.usecase.ValidateAndAddAddressUseCase);
						public getAddressReviewState(): androidx.lifecycle.LiveData<com.paypal.pyplcheckout.addressbook.AddressReviewState>;
						public validateAndAddAddress(param0: com.paypal.pyplcheckout.pojo.NewShippingAddressRequest): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressbook {
				export module viewmodel {
					export class AddressReviewViewModel_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.addressbook.viewmodel.AddressReviewViewModel> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addressbook.viewmodel.AddressReviewViewModel_Factory>;
						public get(): com.paypal.pyplcheckout.addressbook.viewmodel.AddressReviewViewModel;
						public static newInstance(param0: com.paypal.pyplcheckout.addressbook.usecase.ValidateAndAddAddressUseCase): com.paypal.pyplcheckout.addressbook.viewmodel.AddressReviewViewModel;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.addressbook.usecase.ValidateAndAddAddressUseCase>);
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.addressbook.usecase.ValidateAndAddAddressUseCase>): com.paypal.pyplcheckout.addressbook.viewmodel.AddressReviewViewModel_Factory;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressvalidation {
				export class AddressRepository {
					public static class: java.lang.Class<com.paypal.pyplcheckout.addressvalidation.AddressRepository>;
					public addShippingAddress(param0: com.paypal.pyplcheckout.pojo.PortableShippingAddressRequest, param1: any): any;
					public getEnteredAddress(): com.paypal.pyplcheckout.pojo.PortableShippingAddressRequest;
					public constructor(param0: com.paypal.pyplcheckout.events.Events, param1: com.paypal.pyplcheckout.services.Repository, param2: com.paypal.pyplcheckout.services.api.LocaleMetadataApi);
					public getAddressValidation(): com.paypal.pyplcheckout.pojo.AddressValidation;
					public validateAddress(param0: com.paypal.pyplcheckout.pojo.PortableShippingAddressRequest, param1: any): any;
					public getLocaleMetaData(param0: string, param1: any): any;
					public addNewShippingAddress(param0: com.paypal.pyplcheckout.pojo.NewShippingAddressRequest): void;
				}
				export module AddressRepository {
					export abstract class ValidateResult {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addressvalidation.AddressRepository.ValidateResult>;
					}
					export module ValidateResult {
						export class Error extends com.paypal.pyplcheckout.addressvalidation.AddressRepository.ValidateResult {
							public static class: java.lang.Class<com.paypal.pyplcheckout.addressvalidation.AddressRepository.ValidateResult.Error>;
							public component1(): java.lang.Exception;
							public hashCode(): number;
							public constructor(param0: java.lang.Exception);
							public toString(): string;
							public equals(param0: any): boolean;
							public getException(): java.lang.Exception;
							public copy(param0: java.lang.Exception): com.paypal.pyplcheckout.addressvalidation.AddressRepository.ValidateResult.Error;
						}
						export class Success extends com.paypal.pyplcheckout.addressvalidation.AddressRepository.ValidateResult {
							public static class: java.lang.Class<com.paypal.pyplcheckout.addressvalidation.AddressRepository.ValidateResult.Success>;
							public component1(): com.paypal.pyplcheckout.pojo.AddressValidation;
							public hashCode(): number;
							public constructor(param0: com.paypal.pyplcheckout.pojo.AddressValidation);
							public copy(param0: com.paypal.pyplcheckout.pojo.AddressValidation): com.paypal.pyplcheckout.addressvalidation.AddressRepository.ValidateResult.Success;
							public toString(): string;
							public equals(param0: any): boolean;
							public getAddressValidation(): com.paypal.pyplcheckout.pojo.AddressValidation;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressvalidation {
				export class AddressRepository_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.addressvalidation.AddressRepository> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.addressvalidation.AddressRepository_Factory>;
					public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param1: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param2: javax.inject.Provider<com.paypal.pyplcheckout.services.api.LocaleMetadataApi>): com.paypal.pyplcheckout.addressvalidation.AddressRepository_Factory;
					public get(): com.paypal.pyplcheckout.addressvalidation.AddressRepository;
					public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param1: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param2: javax.inject.Provider<com.paypal.pyplcheckout.services.api.LocaleMetadataApi>);
					public static newInstance(param0: com.paypal.pyplcheckout.events.Events, param1: com.paypal.pyplcheckout.services.Repository, param2: com.paypal.pyplcheckout.services.api.LocaleMetadataApi): com.paypal.pyplcheckout.addressvalidation.AddressRepository;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressvalidation {
				export class ValidateAddressUseCase {
					public static class: java.lang.Class<com.paypal.pyplcheckout.addressvalidation.ValidateAddressUseCase>;
					public invoke(param0: com.paypal.pyplcheckout.pojo.PortableShippingAddressRequest, param1: any): any;
					public constructor(param0: com.paypal.pyplcheckout.addressvalidation.AddressRepository);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressvalidation {
				export class ValidateAddressUseCase_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.addressvalidation.ValidateAddressUseCase> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.addressvalidation.ValidateAddressUseCase_Factory>;
					public static newInstance(param0: com.paypal.pyplcheckout.addressvalidation.AddressRepository): com.paypal.pyplcheckout.addressvalidation.ValidateAddressUseCase;
					public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.addressvalidation.AddressRepository>): com.paypal.pyplcheckout.addressvalidation.ValidateAddressUseCase_Factory;
					public get(): com.paypal.pyplcheckout.addressvalidation.ValidateAddressUseCase;
					public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.addressvalidation.AddressRepository>);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressvalidation {
				export module request {
					export class LocaleMetadataRequest {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addressvalidation.request.LocaleMetadataRequest>;
						public getCountry(): string;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public copy(param0: string): com.paypal.pyplcheckout.addressvalidation.request.LocaleMetadataRequest;
						public toString(): string;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressvalidation {
				export module response {
					export class Address {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addressvalidation.response.Address>;
						public copy(param0: java.util.List<com.paypal.pyplcheckout.addressvalidation.response.AddressParts>): com.paypal.pyplcheckout.addressvalidation.response.Address;
						public constructor(param0: java.util.List<com.paypal.pyplcheckout.addressvalidation.response.AddressParts>);
						public component1(): java.util.List<com.paypal.pyplcheckout.addressvalidation.response.AddressParts>;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getPortableLayout(): java.util.List<com.paypal.pyplcheckout.addressvalidation.response.AddressParts>;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressvalidation {
				export module response {
					export class AddressPart {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addressvalidation.response.AddressPart>;
						public isRequired(): boolean;
						public component3(): boolean;
						public getLabel(): string;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getMaxLength(): number;
						public getName(): string;
						public component6(): number;
						public component7(): java.util.List<com.paypal.pyplcheckout.addressvalidation.response.AllowedValue>;
						public toString(): string;
						public getRegex(): string;
						public component4(): string;
						public getAllowedValues(): java.util.List<com.paypal.pyplcheckout.addressvalidation.response.AllowedValue>;
						public component2(): string;
						public getMinLength(): number;
						public constructor(param0: string, param1: string, param2: boolean, param3: string, param4: number, param5: number, param6: java.util.List<com.paypal.pyplcheckout.addressvalidation.response.AllowedValue>);
						public copy(param0: string, param1: string, param2: boolean, param3: string, param4: number, param5: number, param6: java.util.List<com.paypal.pyplcheckout.addressvalidation.response.AllowedValue>): com.paypal.pyplcheckout.addressvalidation.response.AddressPart;
						public component5(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressvalidation {
				export module response {
					export class AddressParts {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addressvalidation.response.AddressParts>;
						public component1(): java.util.List<com.paypal.pyplcheckout.addressvalidation.response.AddressPart>;
						public copy(param0: java.util.List<com.paypal.pyplcheckout.addressvalidation.response.AddressPart>): com.paypal.pyplcheckout.addressvalidation.response.AddressParts;
						public getParts(): java.util.List<com.paypal.pyplcheckout.addressvalidation.response.AddressPart>;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public constructor(param0: java.util.List<com.paypal.pyplcheckout.addressvalidation.response.AddressPart>);
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressvalidation {
				export module response {
					export class AllowedValue {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addressvalidation.response.AllowedValue>;
						public component2(): string;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getValue(): string;
						public constructor(param0: string, param1: string);
						public toString(): string;
						public getDisplayText(): string;
						public copy(param0: string, param1: string): com.paypal.pyplcheckout.addressvalidation.response.AllowedValue;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressvalidation {
				export module response {
					export class LocaleMetadata {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addressvalidation.response.LocaleMetadata>;
						public copy(param0: com.paypal.pyplcheckout.addressvalidation.response.Address): com.paypal.pyplcheckout.addressvalidation.response.LocaleMetadata;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public component1(): com.paypal.pyplcheckout.addressvalidation.response.Address;
						public getAddress(): com.paypal.pyplcheckout.addressvalidation.response.Address;
						public constructor(param0: com.paypal.pyplcheckout.addressvalidation.response.Address);
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressvalidation {
				export module response {
					export class LocaleMetadataData {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addressvalidation.response.LocaleMetadataData>;
						public constructor(param0: com.paypal.pyplcheckout.addressvalidation.response.LocaleMetadata);
						public getLocaleMetadata(): com.paypal.pyplcheckout.addressvalidation.response.LocaleMetadata;
						public copy(param0: com.paypal.pyplcheckout.addressvalidation.response.LocaleMetadata): com.paypal.pyplcheckout.addressvalidation.response.LocaleMetadataData;
						public component1(): com.paypal.pyplcheckout.addressvalidation.response.LocaleMetadata;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addressvalidation {
				export module response {
					export class LocaleMetadataResponse {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addressvalidation.response.LocaleMetadataResponse>;
						public constructor(param0: com.paypal.pyplcheckout.addressvalidation.response.LocaleMetadataData);
						public getData(): com.paypal.pyplcheckout.addressvalidation.response.LocaleMetadataData;
						public component1(): com.paypal.pyplcheckout.addressvalidation.response.LocaleMetadataData;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public copy(param0: com.paypal.pyplcheckout.addressvalidation.response.LocaleMetadataData): com.paypal.pyplcheckout.addressvalidation.response.LocaleMetadataResponse;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addshipping {
				export class AddressAutoCompleteViewModel {
					public static class: java.lang.Class<com.paypal.pyplcheckout.addshipping.AddressAutoCompleteViewModel>;
					public constructor(param0: com.paypal.pyplcheckout.services.Repository, param1: com.paypal.pyplcheckout.ab.AbManager, param2: com.paypal.pyplcheckout.events.Events, param3: com.google.gson.Gson, param4: com.paypal.pyplcheckout.model.DebugConfigManager);
					public getStringResource(param0: string): string;
					public fetchAddShippingResponse(param0: com.paypal.pyplcheckout.addshipping.model.AddressAutoCompleteRequest): void;
					public getCountryPositionOnList(param0: string, param1: java.util.ArrayList<com.paypal.pyplcheckout.addshipping.model.Country>): number;
					public validateAddress(param0: com.paypal.pyplcheckout.pojo.ValidateAddressQueryParams): void;
					public getAutoCompleteAddShippingCountriesResponse(): androidx.lifecycle.LiveData<java.util.List<com.paypal.pyplcheckout.addshipping.model.Country>>;
					public setCountryFields(param0: globalAndroid.content.Context): void;
					public getLastName(): string;
					public resetValues(): void;
					public getAutoCompleteAddShippingResponse(): androidx.lifecycle.LiveData<any<string,com.paypal.pyplcheckout.addshipping.model.AddressAutoCompleteResponse>>;
					public isAddShippingFeatureEnabled(): boolean;
					public fetchAddShippingCountriesResponse(param0: string): void;
					public fetchAddShippingPlaceIdResponse(param0: com.paypal.pyplcheckout.addshipping.model.AddressAutoCompletePlaceIdRequest): void;
					public getFirstName(): string;
					public getCountryCacheCompletionFlag(): androidx.lifecycle.LiveData<java.lang.Boolean>;
					public onCleared(): void;
					public createCountryList(param0: globalAndroid.content.Context): void;
					public getAutoCompleteAddShippingPlaceIdResponse(): androidx.lifecycle.LiveData<com.paypal.pyplcheckout.addshipping.model.AddressAutoCompletePlaceIdResponse>;
				}
				export module AddressAutoCompleteViewModel {
					export abstract class AddressAutoCompleteBanner {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addshipping.AddressAutoCompleteViewModel.AddressAutoCompleteBanner>;
						public getText(): string;
					}
					export module AddressAutoCompleteBanner {
						export class Error extends com.paypal.pyplcheckout.addshipping.AddressAutoCompleteViewModel.AddressAutoCompleteBanner {
							public static class: java.lang.Class<com.paypal.pyplcheckout.addshipping.AddressAutoCompleteViewModel.AddressAutoCompleteBanner.Error>;
							public getText(): string;
							public constructor(param0: string);
						}
						export class Success extends com.paypal.pyplcheckout.addshipping.AddressAutoCompleteViewModel.AddressAutoCompleteBanner {
							public static class: java.lang.Class<com.paypal.pyplcheckout.addshipping.AddressAutoCompleteViewModel.AddressAutoCompleteBanner.Success>;
							public getText(): string;
							public constructor(param0: string);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addshipping {
				export class AddressAutoCompleteViewModel_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.addshipping.AddressAutoCompleteViewModel> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.addshipping.AddressAutoCompleteViewModel_Factory>;
					public static newInstance(param0: com.paypal.pyplcheckout.services.Repository, param1: com.paypal.pyplcheckout.ab.AbManager, param2: com.paypal.pyplcheckout.events.Events, param3: com.google.gson.Gson, param4: com.paypal.pyplcheckout.model.DebugConfigManager): com.paypal.pyplcheckout.addshipping.AddressAutoCompleteViewModel;
					public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param1: javax.inject.Provider<com.paypal.pyplcheckout.ab.AbManager>, param2: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param3: javax.inject.Provider<com.google.gson.Gson>, param4: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>);
					public get(): com.paypal.pyplcheckout.addshipping.AddressAutoCompleteViewModel;
					public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param1: javax.inject.Provider<com.paypal.pyplcheckout.ab.AbManager>, param2: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param3: javax.inject.Provider<com.google.gson.Gson>, param4: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>): com.paypal.pyplcheckout.addshipping.AddressAutoCompleteViewModel_Factory;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addshipping {
				export class ShippingUtils {
					public static class: java.lang.Class<com.paypal.pyplcheckout.addshipping.ShippingUtils>;
					public static INSTANCE: com.paypal.pyplcheckout.addshipping.ShippingUtils;
					public getFlagCountry(param0: globalAndroid.content.Context, param1: string): string;
					public getStringResource(param0: globalAndroid.content.Context, param1: string): string;
					public runOnUiThread(param0: any): void;
					public handleBoldText(param0: string, param1: string): globalAndroid.text.SpannableStringBuilder;
					public announceAccessibilityEvent(param0: globalAndroid.content.Context, param1: string, param2: globalAndroid.view.View): void;
					public getFlagDrawableId(param0: globalAndroid.content.res.Resources, param1: string, param2: string): number;
					public getRoundedDrawable(param0: globalAndroid.content.Context, param1: number): androidx.core.graphics.drawable.RoundedBitmapDrawable;
					public getMaxItemsFromDensityValue(param0: globalAndroid.content.Context): number;
					public analyticsClick(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param1: string, param2: string): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addshipping {
				export module api {
					export class AddressAutoCompleteApi {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addshipping.api.AddressAutoCompleteApi>;
						public constructor(param0: string, param1: okhttp3.Request.Builder, param2: kotlinx.coroutines.CoroutineDispatcher, param3: okhttp3.OkHttpClient, param4: string, param5: com.paypal.pyplcheckout.model.DebugConfigManager);
						public getAddressAutoComplete(param0: com.paypal.pyplcheckout.addshipping.model.AddressAutoCompleteRequest, param1: any): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addshipping {
				export module api {
					export class AddressAutoCompletePlaceIdApi {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addshipping.api.AddressAutoCompletePlaceIdApi>;
						public constructor(param0: string, param1: okhttp3.Request.Builder, param2: kotlinx.coroutines.CoroutineDispatcher, param3: okhttp3.OkHttpClient, param4: string);
						public getAddressAutoCompletePlaceId(param0: com.paypal.pyplcheckout.addshipping.model.AddressAutoCompletePlaceIdRequest, param1: any): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addshipping {
				export module api {
					export class AddressAutoCompletePlaceIdQuery {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addshipping.api.AddressAutoCompletePlaceIdQuery>;
						public static INSTANCE: com.paypal.pyplcheckout.addshipping.api.AddressAutoCompletePlaceIdQuery;
						public get(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addshipping {
				export module api {
					export class AddressAutoCompleteQuery {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addshipping.api.AddressAutoCompleteQuery>;
						public static INSTANCE: com.paypal.pyplcheckout.addshipping.api.AddressAutoCompleteQuery;
						public get(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addshipping {
				export module model {
					export class Address {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addshipping.model.Address>;
						public copy(param0: string, param1: string, param2: string, param3: string): com.paypal.pyplcheckout.addshipping.model.Address;
						public component3(): string;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getPostalCode(): string;
						public toString(): string;
						public constructor(param0: string, param1: string, param2: string, param3: string);
						public component4(): string;
						public getState(): string;
						public getCity(): string;
						public getFullAddress(): string;
						public component2(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addshipping {
				export module model {
					export class AddressAutoComplete {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addshipping.model.AddressAutoComplete>;
						public component1(): java.util.List<com.paypal.pyplcheckout.addshipping.model.Suggestions>;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public constructor(param0: java.util.List<com.paypal.pyplcheckout.addshipping.model.Suggestions>);
						public toString(): string;
						public getSuggestions(): java.util.List<com.paypal.pyplcheckout.addshipping.model.Suggestions>;
						public copy(param0: java.util.List<com.paypal.pyplcheckout.addshipping.model.Suggestions>): com.paypal.pyplcheckout.addshipping.model.AddressAutoComplete;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addshipping {
				export module model {
					export class AddressAutoCompletePlaceId {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addshipping.model.AddressAutoCompletePlaceId>;
						public component1(): com.paypal.pyplcheckout.addshipping.model.Address;
						public copy(param0: com.paypal.pyplcheckout.addshipping.model.Address): com.paypal.pyplcheckout.addshipping.model.AddressAutoCompletePlaceId;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public constructor(param0: com.paypal.pyplcheckout.addshipping.model.Address);
						public getAddress(): com.paypal.pyplcheckout.addshipping.model.Address;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addshipping {
				export module model {
					export class AddressAutoCompletePlaceIdRequest {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addshipping.model.AddressAutoCompletePlaceIdRequest>;
						public component3(): string;
						public constructor(param0: string, param1: string, param2: string);
						public getRegion(): string;
						public component2(): string;
						public copy(param0: string, param1: string, param2: string): com.paypal.pyplcheckout.addshipping.model.AddressAutoCompletePlaceIdRequest;
						public getPlaceId(): string;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getLanguage(): string;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addshipping {
				export module model {
					export class AddressAutoCompletePlaceIdResponse {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addshipping.model.AddressAutoCompletePlaceIdResponse>;
						public constructor(param0: com.paypal.pyplcheckout.addshipping.model.AddressAutoCompletePlaceIdResponseData);
						public component1(): com.paypal.pyplcheckout.addshipping.model.AddressAutoCompletePlaceIdResponseData;
						public getData(): com.paypal.pyplcheckout.addshipping.model.AddressAutoCompletePlaceIdResponseData;
						public copy(param0: com.paypal.pyplcheckout.addshipping.model.AddressAutoCompletePlaceIdResponseData): com.paypal.pyplcheckout.addshipping.model.AddressAutoCompletePlaceIdResponse;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addshipping {
				export module model {
					export class AddressAutoCompletePlaceIdResponseData {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addshipping.model.AddressAutoCompletePlaceIdResponseData>;
						public constructor(param0: com.paypal.pyplcheckout.addshipping.model.AddressAutoCompletePlaceId);
						public getAddressFromAutoCompletePlaceId(): com.paypal.pyplcheckout.addshipping.model.AddressAutoCompletePlaceId;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public component1(): com.paypal.pyplcheckout.addshipping.model.AddressAutoCompletePlaceId;
						public copy(param0: com.paypal.pyplcheckout.addshipping.model.AddressAutoCompletePlaceId): com.paypal.pyplcheckout.addshipping.model.AddressAutoCompletePlaceIdResponseData;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addshipping {
				export module model {
					export class AddressAutoCompleteRequest {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addshipping.model.AddressAutoCompleteRequest>;
						public component3(): string;
						public component5(): boolean;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getCount(): number;
						public getCountryCode(): string;
						public constructor(param0: number, param1: string, param2: string, param3: string, param4: boolean, param5: com.paypal.pyplcheckout.addshipping.model.GooglePlacesType);
						public toString(): string;
						public getInput(): string;
						public getStrictBounds(): boolean;
						public getTypes(): com.paypal.pyplcheckout.addshipping.model.GooglePlacesType;
						public component4(): string;
						public component2(): string;
						public component6(): com.paypal.pyplcheckout.addshipping.model.GooglePlacesType;
						public copy(param0: number, param1: string, param2: string, param3: string, param4: boolean, param5: com.paypal.pyplcheckout.addshipping.model.GooglePlacesType): com.paypal.pyplcheckout.addshipping.model.AddressAutoCompleteRequest;
						public getLanguage(): string;
						public component1(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addshipping {
				export module model {
					export class AddressAutoCompleteResponse {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addshipping.model.AddressAutoCompleteResponse>;
						public constructor(param0: com.paypal.pyplcheckout.addshipping.model.AddressAutoCompleteResponseData);
						public component1(): com.paypal.pyplcheckout.addshipping.model.AddressAutoCompleteResponseData;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public copy(param0: com.paypal.pyplcheckout.addshipping.model.AddressAutoCompleteResponseData): com.paypal.pyplcheckout.addshipping.model.AddressAutoCompleteResponse;
						public getData(): com.paypal.pyplcheckout.addshipping.model.AddressAutoCompleteResponseData;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addshipping {
				export module model {
					export class AddressAutoCompleteResponseData {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addshipping.model.AddressAutoCompleteResponseData>;
						public getAddressAutoComplete(): com.paypal.pyplcheckout.addshipping.model.AddressAutoComplete;
						public component1(): com.paypal.pyplcheckout.addshipping.model.AddressAutoComplete;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public constructor(param0: com.paypal.pyplcheckout.addshipping.model.AddressAutoComplete);
						public copy(param0: com.paypal.pyplcheckout.addshipping.model.AddressAutoComplete): com.paypal.pyplcheckout.addshipping.model.AddressAutoCompleteResponseData;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addshipping {
				export module model {
					export class Country {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addshipping.model.Country>;
						public getZipcode(): string;
						public component3(): string;
						public component5(): string;
						public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string);
						public copy(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string): com.paypal.pyplcheckout.addshipping.model.Country;
						public component1(): string;
						public component7(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getAddress1(): string;
						public getName(): string;
						public toString(): string;
						public component4(): string;
						public getCity(): string;
						public getState(): string;
						public component2(): string;
						public getAddress2(): string;
						public component6(): string;
						public getCode(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addshipping {
				export module model {
					export class GooglePlacesType {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addshipping.model.GooglePlacesType>;
						public static GEOCODE: com.paypal.pyplcheckout.addshipping.model.GooglePlacesType;
						public static ADDRESS: com.paypal.pyplcheckout.addshipping.model.GooglePlacesType;
						public static ESTABLISHMENT: com.paypal.pyplcheckout.addshipping.model.GooglePlacesType;
						public static REGIONS: com.paypal.pyplcheckout.addshipping.model.GooglePlacesType;
						public static CITIES: com.paypal.pyplcheckout.addshipping.model.GooglePlacesType;
						public static values(): androidNative.Array<com.paypal.pyplcheckout.addshipping.model.GooglePlacesType>;
						public static valueOf(param0: string): com.paypal.pyplcheckout.addshipping.model.GooglePlacesType;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module addshipping {
				export module model {
					export class Suggestions {
						public static class: java.lang.Class<com.paypal.pyplcheckout.addshipping.model.Suggestions>;
						public getAddressText(): string;
						public component3(): string;
						public constructor();
						public getPlaceId(): string;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getMainText(): string;
						public toString(): string;
						public constructor(param0: string, param1: string, param2: string, param3: string);
						public component4(): string;
						public component2(): string;
						public getSecondaryText(): string;
						public copy(param0: string, param1: string, param2: string, param3: string): com.paypal.pyplcheckout.addshipping.model.Suggestions;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module animation {
				export module base {
					export class Animate {
						public static class: java.lang.Class<com.paypal.pyplcheckout.animation.base.Animate>;
						public with(param0: com.paypal.pyplcheckout.animation.base.AnimationBehavior): com.paypal.pyplcheckout.animation.base.Animate.AnimationComposer;
						public with(param0: com.paypal.pyplcheckout.animation.base.BaseViewAnimator): com.paypal.pyplcheckout.animation.base.Animate.AnimationComposer;
						public constructor(param0: com.paypal.pyplcheckout.animation.base.Animate.AnimationComposer);
					}
					export module Animate {
						export class AnimateString {
							public static class: java.lang.Class<com.paypal.pyplcheckout.animation.base.Animate.AnimateString>;
							public isRunning(): boolean;
							public constructor(param0: com.paypal.pyplcheckout.animation.base.BaseViewAnimator, param1: globalAndroid.view.View);
							public stop(): void;
							public isStarted(): boolean;
							public stop(param0: boolean): void;
						}
						export class AnimationComposer {
							public static class: java.lang.Class<com.paypal.pyplcheckout.animation.base.Animate.AnimationComposer>;
							public interpolator: globalAndroid.view.animation.Interpolator;
							public target: globalAndroid.view.View;
							public delay(param0: number): com.paypal.pyplcheckout.animation.base.Animate.AnimationComposer;
							public getRepeatTimes$pyplcheckout_externalThreedsRelease(): number;
							public getTarget$pyplcheckout_externalThreedsRelease(): globalAndroid.view.View;
							public pivotY(param0: number): com.paypal.pyplcheckout.animation.base.Animate.AnimationComposer;
							public onEnd(param0: com.paypal.pyplcheckout.animation.base.Animate.AnimatorCallback): void;
							public getDelay$pyplcheckout_externalThreedsRelease(): number;
							public setPivotY$pyplcheckout_externalThreedsRelease(param0: number): void;
							public constructor(param0: com.paypal.pyplcheckout.animation.base.BaseViewAnimator);
							public getPivotX$pyplcheckout_externalThreedsRelease(): number;
							public pivot(param0: number, param1: number): com.paypal.pyplcheckout.animation.base.Animate.AnimationComposer;
							public setInterpolator$pyplcheckout_externalThreedsRelease(param0: globalAndroid.view.animation.Interpolator): void;
							public repeat(param0: number): com.paypal.pyplcheckout.animation.base.Animate.AnimationComposer;
							public getAnimator$pyplcheckout_externalThreedsRelease(): com.paypal.pyplcheckout.animation.base.BaseViewAnimator;
							public withListener(param0: globalAndroid.animation.Animator.AnimatorListener): com.paypal.pyplcheckout.animation.base.Animate.AnimationComposer;
							public interpolate(param0: globalAndroid.view.animation.Interpolator): com.paypal.pyplcheckout.animation.base.Animate.AnimationComposer;
							public repeatMode(param0: number): com.paypal.pyplcheckout.animation.base.Animate.AnimationComposer;
							public onStart(param0: com.paypal.pyplcheckout.animation.base.Animate.AnimatorCallback): com.paypal.pyplcheckout.animation.base.Animate.AnimationComposer;
							public duration(param0: number): com.paypal.pyplcheckout.animation.base.Animate.AnimationComposer;
							public getPivotY$pyplcheckout_externalThreedsRelease(): number;
							public onRepeat(param0: com.paypal.pyplcheckout.animation.base.Animate.AnimatorCallback): void;
							public onCancel(param0: com.paypal.pyplcheckout.animation.base.Animate.AnimatorCallback): void;
							public playOn(param0: globalAndroid.view.View): com.paypal.pyplcheckout.animation.base.Animate.AnimateString;
							public pivotX(param0: number): com.paypal.pyplcheckout.animation.base.Animate.AnimationComposer;
							public getCallbacks$pyplcheckout_externalThreedsRelease(): java.util.List<globalAndroid.animation.Animator.AnimatorListener>;
							public setPivotX$pyplcheckout_externalThreedsRelease(param0: number): void;
							public getInterpolator$pyplcheckout_externalThreedsRelease(): globalAndroid.view.animation.Interpolator;
							public getDuration$pyplcheckout_externalThreedsRelease(): number;
							public setRepeatTimes$pyplcheckout_externalThreedsRelease(param0: number): void;
							public getRepeatMode$pyplcheckout_externalThreedsRelease(): number;
							public setRepeat$pyplcheckout_externalThreedsRelease(param0: boolean): void;
							public setDuration$pyplcheckout_externalThreedsRelease(param0: number): void;
							public setRepeatMode$pyplcheckout_externalThreedsRelease(param0: number): void;
							public setDelay$pyplcheckout_externalThreedsRelease(param0: number): void;
							public getRepeat$pyplcheckout_externalThreedsRelease(): boolean;
							public setTarget$pyplcheckout_externalThreedsRelease(param0: globalAndroid.view.View): void;
						}
						export class AnimatorCallback {
							public static class: java.lang.Class<com.paypal.pyplcheckout.animation.base.Animate.AnimatorCallback>;
							/**
							 * Constructs a new instance of the com.paypal.pyplcheckout.animation.base.Animate$AnimatorCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								call(param0: globalAndroid.animation.Animator): void;
							});
							public constructor();
							public call(param0: globalAndroid.animation.Animator): void;
						}
						export class EmptyAnimatorListener {
							public static class: java.lang.Class<com.paypal.pyplcheckout.animation.base.Animate.EmptyAnimatorListener>;
							public constructor();
							public onAnimationStart(param0: globalAndroid.animation.Animator): void;
							public onAnimationEnd(param0: globalAndroid.animation.Animator, param1: boolean): void;
							public onAnimationCancel(param0: globalAndroid.animation.Animator): void;
							public onAnimationStart(param0: globalAndroid.animation.Animator, param1: boolean): void;
							public onAnimationEnd(param0: globalAndroid.animation.Animator): void;
							public onAnimationRepeat(param0: globalAndroid.animation.Animator): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module animation {
				export module base {
					export class AnimationBehavior {
						public static class: java.lang.Class<com.paypal.pyplcheckout.animation.base.AnimationBehavior>;
						public constructor(param0: com.paypal.pyplcheckout.animation.base.AnimationBehavior.Behavior);
						public getAnimator(): com.paypal.pyplcheckout.animation.base.BaseViewAnimator;
					}
					export module AnimationBehavior {
						export class Behavior {
							public static class: java.lang.Class<com.paypal.pyplcheckout.animation.base.AnimationBehavior.Behavior>;
							public static FADE_IN: com.paypal.pyplcheckout.animation.base.AnimationBehavior.Behavior;
							public static FADE_IN_DOWN: com.paypal.pyplcheckout.animation.base.AnimationBehavior.Behavior;
							public static FADE_IN_UP: com.paypal.pyplcheckout.animation.base.AnimationBehavior.Behavior;
							public static FADE_IN_LEFT: com.paypal.pyplcheckout.animation.base.AnimationBehavior.Behavior;
							public static FADE_IN_RIGHT: com.paypal.pyplcheckout.animation.base.AnimationBehavior.Behavior;
							public static FADE_OUT: com.paypal.pyplcheckout.animation.base.AnimationBehavior.Behavior;
							public static FADE_OUT_DOWN: com.paypal.pyplcheckout.animation.base.AnimationBehavior.Behavior;
							public static FADE_OUT_UP: com.paypal.pyplcheckout.animation.base.AnimationBehavior.Behavior;
							public static FADE_OUT_LEFT: com.paypal.pyplcheckout.animation.base.AnimationBehavior.Behavior;
							public static FADE_OUT_RIGHT: com.paypal.pyplcheckout.animation.base.AnimationBehavior.Behavior;
							public static SLIDE_IN_DOWN: com.paypal.pyplcheckout.animation.base.AnimationBehavior.Behavior;
							public static SLIDE_IN_UP: com.paypal.pyplcheckout.animation.base.AnimationBehavior.Behavior;
							public static SLIDE_IN_LEFT: com.paypal.pyplcheckout.animation.base.AnimationBehavior.Behavior;
							public static SLIDE_IN_RIGHT: com.paypal.pyplcheckout.animation.base.AnimationBehavior.Behavior;
							public static SLIDE_OUT_DOWN: com.paypal.pyplcheckout.animation.base.AnimationBehavior.Behavior;
							public static SLIDE_OUT_UP: com.paypal.pyplcheckout.animation.base.AnimationBehavior.Behavior;
							public static SLIDE_OUT_LEFT: com.paypal.pyplcheckout.animation.base.AnimationBehavior.Behavior;
							public static SLIDE_OUT_RIGHT: com.paypal.pyplcheckout.animation.base.AnimationBehavior.Behavior;
							public static valueOf(param0: string): com.paypal.pyplcheckout.animation.base.AnimationBehavior.Behavior;
							public static values(): androidNative.Array<com.paypal.pyplcheckout.animation.base.AnimationBehavior.Behavior>;
						}
						export class WhenMappings {
							public static class: java.lang.Class<com.paypal.pyplcheckout.animation.base.AnimationBehavior.WhenMappings>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module animation {
				export module base {
					export class AnimationUtils {
						public static class: java.lang.Class<com.paypal.pyplcheckout.animation.base.AnimationUtils>;
						public static INSTANCE: com.paypal.pyplcheckout.animation.base.AnimationUtils;
						public expandFavorite(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
						public getTAG(): string;
						public shrinkFavorite(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
						public shrink(param0: globalAndroid.view.View, param1: number, param2: number, param3: globalAndroid.view.animation.Interpolator, param4: boolean, param5: any): globalAndroid.animation.ValueAnimator;
						public getEaseInOutQuartInterpolator(): globalAndroid.view.animation.Interpolator;
						public fadeIn(param0: globalAndroid.view.View, param1: number, param2: number, param3: any): void;
						public computeAnimationDurationFromHeight(param0: globalAndroid.view.View, param1: number): number;
						public expand(param0: globalAndroid.view.View, param1: number, param2: number, param3: globalAndroid.view.animation.Interpolator, param4: boolean, param5: any): globalAndroid.view.animation.Animation;
						public fadeOut(param0: globalAndroid.view.View, param1: number, param2: number, param3: any): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module animation {
				export module base {
					export abstract class BaseViewAnimator {
						public static class: java.lang.Class<com.paypal.pyplcheckout.animation.base.BaseViewAnimator>;
						public setRepeatTimes(param0: number): com.paypal.pyplcheckout.animation.base.BaseViewAnimator;
						public constructor();
						public getDuration(): number;
						public prepare(param0: globalAndroid.view.View): void;
						public cancel(): void;
						public removeAllListener(): void;
						public restart(): void;
						public isRunning(): boolean;
						public setInterpolator(param0: globalAndroid.view.animation.Interpolator): com.paypal.pyplcheckout.animation.base.BaseViewAnimator;
						public getAnimatorAgent(): globalAndroid.animation.AnimatorSet;
						public addAnimatorListener(param0: globalAndroid.animation.Animator.AnimatorListener): com.paypal.pyplcheckout.animation.base.BaseViewAnimator;
						public setDuration(param0: number): com.paypal.pyplcheckout.animation.base.BaseViewAnimator;
						public getStartDelay(): number;
						public reset(param0: globalAndroid.view.View): void;
						public animate(): void;
						public start(): void;
						public setStartDelay(param0: number): com.paypal.pyplcheckout.animation.base.BaseViewAnimator;
						public isStarted(): boolean;
						public setTarget(param0: globalAndroid.view.View): com.paypal.pyplcheckout.animation.base.BaseViewAnimator;
						public setDuration(param0: number): void;
						public removeAnimatorListener(param0: globalAndroid.animation.Animator.AnimatorListener): void;
						public setRepeatMode(param0: number): com.paypal.pyplcheckout.animation.base.BaseViewAnimator;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module animation {
				export module base {
					export class FragmentAnimation {
						public static class: java.lang.Class<com.paypal.pyplcheckout.animation.base.FragmentAnimation>;
						public constructor();
						public setAnimation(param0: com.paypal.pyplcheckout.animation.base.FragmentAnimation.Type): void;
						public constructor(param0: com.paypal.pyplcheckout.animation.base.FragmentAnimation.Type);
						public getAnimation(): com.paypal.pyplcheckout.animation.base.FragmentAnimation.Type;
					}
					export module FragmentAnimation {
						export class Type {
							public static class: java.lang.Class<com.paypal.pyplcheckout.animation.base.FragmentAnimation.Type>;
							public static SLIDE_UP_DOWN: com.paypal.pyplcheckout.animation.base.FragmentAnimation.Type;
							public static SLIDE_RIGHT_LEFT: com.paypal.pyplcheckout.animation.base.FragmentAnimation.Type;
							public static SLIDE_LEFT_RIGHT: com.paypal.pyplcheckout.animation.base.FragmentAnimation.Type;
							public static valueOf(param0: string): com.paypal.pyplcheckout.animation.base.FragmentAnimation.Type;
							public static values(): androidNative.Array<com.paypal.pyplcheckout.animation.base.FragmentAnimation.Type>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module animation {
				export module fading {
					export class FadeInAnimation extends com.paypal.pyplcheckout.animation.base.BaseViewAnimator {
						public static class: java.lang.Class<com.paypal.pyplcheckout.animation.fading.FadeInAnimation>;
						public constructor();
						public prepare(param0: globalAndroid.view.View): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module animation {
				export module fading {
					export class FadeInDownAnimation extends com.paypal.pyplcheckout.animation.base.BaseViewAnimator {
						public static class: java.lang.Class<com.paypal.pyplcheckout.animation.fading.FadeInDownAnimation>;
						public constructor();
						public prepare(param0: globalAndroid.view.View): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module animation {
				export module fading {
					export class FadeInLeftAnimation extends com.paypal.pyplcheckout.animation.base.BaseViewAnimator {
						public static class: java.lang.Class<com.paypal.pyplcheckout.animation.fading.FadeInLeftAnimation>;
						public constructor();
						public prepare(param0: globalAndroid.view.View): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module animation {
				export module fading {
					export class FadeInRightAnimation extends com.paypal.pyplcheckout.animation.base.BaseViewAnimator {
						public static class: java.lang.Class<com.paypal.pyplcheckout.animation.fading.FadeInRightAnimation>;
						public constructor();
						public prepare(param0: globalAndroid.view.View): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module animation {
				export module fading {
					export class FadeInUpAnimation extends com.paypal.pyplcheckout.animation.base.BaseViewAnimator {
						public static class: java.lang.Class<com.paypal.pyplcheckout.animation.fading.FadeInUpAnimation>;
						public constructor();
						public prepare(param0: globalAndroid.view.View): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module animation {
				export module fading {
					export class FadeOutAnimation extends com.paypal.pyplcheckout.animation.base.BaseViewAnimator {
						public static class: java.lang.Class<com.paypal.pyplcheckout.animation.fading.FadeOutAnimation>;
						public constructor();
						public prepare(param0: globalAndroid.view.View): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module animation {
				export module fading {
					export class FadeOutDownAnimation extends com.paypal.pyplcheckout.animation.base.BaseViewAnimator {
						public static class: java.lang.Class<com.paypal.pyplcheckout.animation.fading.FadeOutDownAnimation>;
						public constructor();
						public prepare(param0: globalAndroid.view.View): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module animation {
				export module fading {
					export class FadeOutLeftAnimation extends com.paypal.pyplcheckout.animation.base.BaseViewAnimator {
						public static class: java.lang.Class<com.paypal.pyplcheckout.animation.fading.FadeOutLeftAnimation>;
						public constructor();
						public prepare(param0: globalAndroid.view.View): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module animation {
				export module fading {
					export class FadeOutRightAnimation extends com.paypal.pyplcheckout.animation.base.BaseViewAnimator {
						public static class: java.lang.Class<com.paypal.pyplcheckout.animation.fading.FadeOutRightAnimation>;
						public constructor();
						public prepare(param0: globalAndroid.view.View): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module animation {
				export module fading {
					export class FadeOutUpAnimation extends com.paypal.pyplcheckout.animation.base.BaseViewAnimator {
						public static class: java.lang.Class<com.paypal.pyplcheckout.animation.fading.FadeOutUpAnimation>;
						public constructor();
						public prepare(param0: globalAndroid.view.View): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module animation {
				export module sequences {
					export class Action {
						public static class: java.lang.Class<com.paypal.pyplcheckout.animation.sequences.Action>;
						public static FadeOut: com.paypal.pyplcheckout.animation.sequences.Action;
						public static FadeIn: com.paypal.pyplcheckout.animation.sequences.Action;
						public static CycleInOut: com.paypal.pyplcheckout.animation.sequences.Action;
						public static Hide: com.paypal.pyplcheckout.animation.sequences.Action;
						public static Show: com.paypal.pyplcheckout.animation.sequences.Action;
						public static values(): androidNative.Array<com.paypal.pyplcheckout.animation.sequences.Action>;
						public static valueOf(param0: string): com.paypal.pyplcheckout.animation.sequences.Action;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module animation {
				export module sequences {
					export class ActionObject {
						public static class: java.lang.Class<com.paypal.pyplcheckout.animation.sequences.ActionObject>;
						public getNewText(): string;
						public component2(): java.lang.ref.WeakReference<globalAndroid.view.View>;
						public setView(param0: java.lang.ref.WeakReference<globalAndroid.view.View>): void;
						public component1(): com.paypal.pyplcheckout.animation.sequences.Duration;
						public component5(): globalAndroid.graphics.drawable.Drawable;
						public getImageResource(): globalAndroid.graphics.drawable.Drawable;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public setNewText(param0: string): void;
						public setImageResource(param0: globalAndroid.graphics.drawable.Drawable): void;
						public setDuration(param0: com.paypal.pyplcheckout.animation.sequences.Duration): void;
						public component3(): com.paypal.pyplcheckout.animation.sequences.Action;
						public toString(): string;
						public constructor(param0: com.paypal.pyplcheckout.animation.sequences.Duration, param1: java.lang.ref.WeakReference<globalAndroid.view.View>, param2: com.paypal.pyplcheckout.animation.sequences.Action, param3: string, param4: globalAndroid.graphics.drawable.Drawable);
						public component4(): string;
						public setAction(param0: com.paypal.pyplcheckout.animation.sequences.Action): void;
						public getDuration(): com.paypal.pyplcheckout.animation.sequences.Duration;
						public getView(): java.lang.ref.WeakReference<globalAndroid.view.View>;
						public copy(param0: com.paypal.pyplcheckout.animation.sequences.Duration, param1: java.lang.ref.WeakReference<globalAndroid.view.View>, param2: com.paypal.pyplcheckout.animation.sequences.Action, param3: string, param4: globalAndroid.graphics.drawable.Drawable): com.paypal.pyplcheckout.animation.sequences.ActionObject;
						public getAction(): com.paypal.pyplcheckout.animation.sequences.Action;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module animation {
				export module sequences {
					export class CheckoutAnimationCallback {
						public static class: java.lang.Class<com.paypal.pyplcheckout.animation.sequences.CheckoutAnimationCallback>;
						/**
						 * Constructs a new instance of the com.paypal.pyplcheckout.animation.sequences.CheckoutAnimationCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onAnimationEnd(): void;
						});
						public constructor();
						public onAnimationEnd(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module animation {
				export module sequences {
					export class CheckoutAnimationSequence {
						public static class: java.lang.Class<com.paypal.pyplcheckout.animation.sequences.CheckoutAnimationSequence>;
						public addAction(param0: com.paypal.pyplcheckout.animation.sequences.Action, param1: globalAndroid.view.View, param2: com.paypal.pyplcheckout.animation.sequences.Duration, param3: string): com.paypal.pyplcheckout.animation.sequences.CheckoutAnimationSequence;
						public constructor();
						public andThen(param0: com.paypal.pyplcheckout.animation.sequences.Action, param1: globalAndroid.view.View, param2: com.paypal.pyplcheckout.animation.sequences.Duration, param3: string, param4: globalAndroid.graphics.drawable.Drawable): com.paypal.pyplcheckout.animation.sequences.CheckoutAnimationSequence;
						public cancel(): void;
						public andThen(param0: com.paypal.pyplcheckout.animation.sequences.Action, param1: globalAndroid.view.View): com.paypal.pyplcheckout.animation.sequences.CheckoutAnimationSequence;
						public with(param0: com.paypal.pyplcheckout.animation.sequences.Action, param1: globalAndroid.view.View, param2: com.paypal.pyplcheckout.animation.sequences.Duration): com.paypal.pyplcheckout.animation.sequences.CheckoutAnimationSequence;
						public setCallback(param0: com.paypal.pyplcheckout.animation.sequences.CheckoutAnimationCallback): void;
						public addAction(param0: com.paypal.pyplcheckout.animation.sequences.Action, param1: globalAndroid.view.View): com.paypal.pyplcheckout.animation.sequences.CheckoutAnimationSequence;
						public constructor(param0: com.paypal.pyplcheckout.animation.sequences.CheckoutAnimationCallback);
						public addCallBack(param0: com.paypal.pyplcheckout.animation.sequences.CheckoutAnimationCallback): void;
						public with(param0: com.paypal.pyplcheckout.animation.sequences.Action, param1: globalAndroid.view.View): com.paypal.pyplcheckout.animation.sequences.CheckoutAnimationSequence;
						public andThen(param0: com.paypal.pyplcheckout.animation.sequences.Action, param1: globalAndroid.view.View, param2: com.paypal.pyplcheckout.animation.sequences.Duration, param3: string): com.paypal.pyplcheckout.animation.sequences.CheckoutAnimationSequence;
						public with(param0: com.paypal.pyplcheckout.animation.sequences.Action, param1: globalAndroid.view.View, param2: com.paypal.pyplcheckout.animation.sequences.Duration, param3: string): com.paypal.pyplcheckout.animation.sequences.CheckoutAnimationSequence;
						public getCancelled(): boolean;
						public start(): void;
						public getCallback(): com.paypal.pyplcheckout.animation.sequences.CheckoutAnimationCallback;
						public setCancelled(param0: boolean): void;
						public with(param0: com.paypal.pyplcheckout.animation.sequences.Action, param1: globalAndroid.view.View, param2: com.paypal.pyplcheckout.animation.sequences.Duration, param3: string, param4: globalAndroid.graphics.drawable.Drawable): com.paypal.pyplcheckout.animation.sequences.CheckoutAnimationSequence;
						public andThen(param0: com.paypal.pyplcheckout.animation.sequences.Action, param1: globalAndroid.view.View, param2: com.paypal.pyplcheckout.animation.sequences.Duration): com.paypal.pyplcheckout.animation.sequences.CheckoutAnimationSequence;
						public addAction(param0: com.paypal.pyplcheckout.animation.sequences.Action, param1: globalAndroid.view.View, param2: com.paypal.pyplcheckout.animation.sequences.Duration, param3: string, param4: globalAndroid.graphics.drawable.Drawable): com.paypal.pyplcheckout.animation.sequences.CheckoutAnimationSequence;
						public addAction(param0: com.paypal.pyplcheckout.animation.sequences.Action, param1: globalAndroid.view.View, param2: com.paypal.pyplcheckout.animation.sequences.Duration): com.paypal.pyplcheckout.animation.sequences.CheckoutAnimationSequence;
					}
					export module CheckoutAnimationSequence {
						export class WhenMappings {
							public static class: java.lang.Class<com.paypal.pyplcheckout.animation.sequences.CheckoutAnimationSequence.WhenMappings>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module animation {
				export module sequences {
					export class Duration {
						public static class: java.lang.Class<com.paypal.pyplcheckout.animation.sequences.Duration>;
						public static SHORT: com.paypal.pyplcheckout.animation.sequences.Duration;
						public static LONG: com.paypal.pyplcheckout.animation.sequences.Duration;
						public static SUPER: com.paypal.pyplcheckout.animation.sequences.Duration;
						public static NONE: com.paypal.pyplcheckout.animation.sequences.Duration;
						public getDuration(): number;
						public static valueOf(param0: string): com.paypal.pyplcheckout.animation.sequences.Duration;
						public static values(): androidNative.Array<com.paypal.pyplcheckout.animation.sequences.Duration>;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module animation {
				export module sliders {
					export class SlideInDownAnimation extends com.paypal.pyplcheckout.animation.base.BaseViewAnimator {
						public static class: java.lang.Class<com.paypal.pyplcheckout.animation.sliders.SlideInDownAnimation>;
						public constructor();
						public prepare(param0: globalAndroid.view.View): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module animation {
				export module sliders {
					export class SlideInLeftAnimation extends com.paypal.pyplcheckout.animation.base.BaseViewAnimator {
						public static class: java.lang.Class<com.paypal.pyplcheckout.animation.sliders.SlideInLeftAnimation>;
						public constructor();
						public prepare(param0: globalAndroid.view.View): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module animation {
				export module sliders {
					export class SlideInRightAnimation extends com.paypal.pyplcheckout.animation.base.BaseViewAnimator {
						public static class: java.lang.Class<com.paypal.pyplcheckout.animation.sliders.SlideInRightAnimation>;
						public constructor();
						public prepare(param0: globalAndroid.view.View): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module animation {
				export module sliders {
					export class SlideInUpAnimation extends com.paypal.pyplcheckout.animation.base.BaseViewAnimator {
						public static class: java.lang.Class<com.paypal.pyplcheckout.animation.sliders.SlideInUpAnimation>;
						public constructor();
						public prepare(param0: globalAndroid.view.View): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module animation {
				export module sliders {
					export class SlideOutDownAnimation extends com.paypal.pyplcheckout.animation.base.BaseViewAnimator {
						public static class: java.lang.Class<com.paypal.pyplcheckout.animation.sliders.SlideOutDownAnimation>;
						public constructor();
						public prepare(param0: globalAndroid.view.View): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module animation {
				export module sliders {
					export class SlideOutLeftAnimation extends com.paypal.pyplcheckout.animation.base.BaseViewAnimator {
						public static class: java.lang.Class<com.paypal.pyplcheckout.animation.sliders.SlideOutLeftAnimation>;
						public constructor();
						public prepare(param0: globalAndroid.view.View): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module animation {
				export module sliders {
					export class SlideOutRightAnimation extends com.paypal.pyplcheckout.animation.base.BaseViewAnimator {
						public static class: java.lang.Class<com.paypal.pyplcheckout.animation.sliders.SlideOutRightAnimation>;
						public constructor();
						public prepare(param0: globalAndroid.view.View): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module animation {
				export module sliders {
					export class SlideOutUpAnimation extends com.paypal.pyplcheckout.animation.base.BaseViewAnimator {
						public static class: java.lang.Class<com.paypal.pyplcheckout.animation.sliders.SlideOutUpAnimation>;
						public constructor();
						public prepare(param0: globalAndroid.view.View): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module auth {
				export class AuthHandler extends com.paypal.pyplcheckout.auth.AuthListener {
					public static class: java.lang.Class<com.paypal.pyplcheckout.auth.AuthHandler>;
					public doAfterAuth: any<any,any>;
					public authFailure(param0: com.paypal.pyplcheckout.auth.AuthenticationFailure): void;
					public setDoAfterAuth(param0: any<any,any>): void;
					public getDoAfterAuth(): any<com.paypal.pyplcheckout.auth.AuthenticationSuccess,any>;
					public constructor(param0: com.paypal.pyplcheckout.services.Repository, param1: com.paypal.pyplcheckout.data.repositories.AuthRepository, param2: com.paypal.pyplcheckout.utils.PYPLCheckoutUtils);
					public authSuccess(param0: com.paypal.pyplcheckout.auth.AuthenticationSuccess): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module auth {
				export class AuthHandlerProvider {
					public static class: java.lang.Class<com.paypal.pyplcheckout.auth.AuthHandlerProvider>;
					public constructor(param0: com.paypal.pyplcheckout.services.Repository, param1: com.paypal.pyplcheckout.data.repositories.AuthRepository, param2: com.paypal.pyplcheckout.utils.PYPLCheckoutUtils);
					public create(): com.paypal.pyplcheckout.auth.AuthHandler;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module auth {
				export class AuthHandlerProvider_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.auth.AuthHandlerProvider> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.auth.AuthHandlerProvider_Factory>;
					public get(): com.paypal.pyplcheckout.auth.AuthHandlerProvider;
					public static newInstance(param0: com.paypal.pyplcheckout.services.Repository, param1: com.paypal.pyplcheckout.data.repositories.AuthRepository, param2: com.paypal.pyplcheckout.utils.PYPLCheckoutUtils): com.paypal.pyplcheckout.auth.AuthHandlerProvider;
					public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param1: javax.inject.Provider<com.paypal.pyplcheckout.data.repositories.AuthRepository>, param2: javax.inject.Provider<com.paypal.pyplcheckout.utils.PYPLCheckoutUtils>);
					public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param1: javax.inject.Provider<com.paypal.pyplcheckout.data.repositories.AuthRepository>, param2: javax.inject.Provider<com.paypal.pyplcheckout.utils.PYPLCheckoutUtils>): com.paypal.pyplcheckout.auth.AuthHandlerProvider_Factory;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module auth {
				export class AuthListener {
					public static class: java.lang.Class<com.paypal.pyplcheckout.auth.AuthListener>;
					/**
					 * Constructs a new instance of the com.paypal.pyplcheckout.auth.AuthListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						authSuccess(param0: com.paypal.pyplcheckout.auth.AuthenticationSuccess): void;
						authFailure(param0: com.paypal.pyplcheckout.auth.AuthenticationFailure): void;
					});
					public constructor();
					public authFailure(param0: com.paypal.pyplcheckout.auth.AuthenticationFailure): void;
					public authSuccess(param0: com.paypal.pyplcheckout.auth.AuthenticationSuccess): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module auth {
				export abstract class AuthenticationFailure {
					public static class: java.lang.Class<com.paypal.pyplcheckout.auth.AuthenticationFailure>;
					public getError(): string;
					public toLog(): string;
					public getException(): java.lang.Exception;
					public constructor(param0: string, param1: java.lang.Exception);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module auth {
				export abstract class AuthenticationSuccess {
					public static class: java.lang.Class<com.paypal.pyplcheckout.auth.AuthenticationSuccess>;
					public toLog(): string;
					public getAccessToken(): string;
					public getExtras(): java.util.Map<string,any>;
					public constructor(param0: string, param1: java.util.Map<string,any>);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module auth {
				export class NativeCheckoutWebSSO {
					public static class: java.lang.Class<com.paypal.pyplcheckout.auth.NativeCheckoutWebSSO>;
					/**
					 * Constructs a new instance of the com.paypal.pyplcheckout.auth.NativeCheckoutWebSSO interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						performWebNativeSSO(param0: string, param1: com.paypal.pyplcheckout.auth.NativeSSOListener): void;
					});
					public constructor();
					public performWebNativeSSO(param0: string, param1: com.paypal.pyplcheckout.auth.NativeSSOListener): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module auth {
				export class NativeSSOListener {
					public static class: java.lang.Class<com.paypal.pyplcheckout.auth.NativeSSOListener>;
					/**
					 * Constructs a new instance of the com.paypal.pyplcheckout.auth.NativeSSOListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						ssoRedirectFetchSuccess(param0: string): void;
						ssoRedirectFetchFailed(): void;
					});
					public constructor();
					public ssoRedirectFetchFailed(): void;
					public ssoRedirectFetchSuccess(param0: string): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module auth {
				export class UserAuthentication {
					public static class: java.lang.Class<com.paypal.pyplcheckout.auth.UserAuthentication>;
					/**
					 * Constructs a new instance of the com.paypal.pyplcheckout.auth.UserAuthentication interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getUserAccessToken(param0: com.paypal.pyplcheckout.auth.AuthListener): void;
						logoutUser(param0: com.paypal.pyplcheckout.auth.AuthListener): void;
					});
					public constructor();
					public getUserAccessToken(param0: com.paypal.pyplcheckout.auth.AuthListener): void;
					public logoutUser(param0: com.paypal.pyplcheckout.auth.AuthListener): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module auth {
				export module ui {
					export class NativeAuthParentFragment extends com.paypal.pyplcheckout.home.view.BaseFragment {
						public static class: java.lang.Class<com.paypal.pyplcheckout.auth.ui.NativeAuthParentFragment>;
						public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
						public thirdPartyAuthPresenter: com.paypal.pyplcheckout.flavorauth.ThirdPartyAuthPresenter;
						public constructor();
						public onViewCreated(param0: globalAndroid.view.View, param1: globalAndroid.os.Bundle): void;
						public getFragmentCount(): number;
						public loadChildAuthFragment(param0: com.paypal.pyplcheckout.auth.ui.NativeAuthScreen): void;
						public onBackPressed(): void;
						public _$_clearFindViewByIdCache(): void;
						public _$_findCachedViewById(param0: number): globalAndroid.view.View;
						public getViewId(): string;
						public setChildFragmentToLoad(param0: com.paypal.pyplcheckout.auth.ui.NativeAuthScreen): void;
						public onAttach(param0: globalAndroid.content.Context): void;
						public getThirdPartyAuthPresenter(): com.paypal.pyplcheckout.flavorauth.ThirdPartyAuthPresenter;
						public onCreateView(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: globalAndroid.os.Bundle): globalAndroid.view.View;
						public removeChildAuthFragment(param0: androidx.fragment.app.Fragment): void;
						public setThirdPartyAuthPresenter(param0: com.paypal.pyplcheckout.flavorauth.ThirdPartyAuthPresenter): void;
					}
					export module NativeAuthParentFragment {
						export class Companion {
							public static class: java.lang.Class<com.paypal.pyplcheckout.auth.ui.NativeAuthParentFragment.Companion>;
							public getTAG(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module auth {
				export module ui {
					export class NativeAuthParentFragment_MembersInjector extends dagger.MembersInjector<com.paypal.pyplcheckout.auth.ui.NativeAuthParentFragment> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.auth.ui.NativeAuthParentFragment_MembersInjector>;
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param1: javax.inject.Provider<com.paypal.pyplcheckout.flavorauth.ThirdPartyAuthPresenter>): dagger.MembersInjector<com.paypal.pyplcheckout.auth.ui.NativeAuthParentFragment>;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param1: javax.inject.Provider<com.paypal.pyplcheckout.flavorauth.ThirdPartyAuthPresenter>);
						public injectMembers(param0: com.paypal.pyplcheckout.auth.ui.NativeAuthParentFragment): void;
						public static injectThirdPartyAuthPresenter(param0: com.paypal.pyplcheckout.auth.ui.NativeAuthParentFragment, param1: com.paypal.pyplcheckout.flavorauth.ThirdPartyAuthPresenter): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module auth {
				export module ui {
					export class NativeAuthScreen {
						public static class: java.lang.Class<com.paypal.pyplcheckout.auth.ui.NativeAuthScreen>;
						public constructor(param0: androidx.fragment.app.Fragment, param1: boolean);
						public component1(): androidx.fragment.app.Fragment;
						public component2(): boolean;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public copy(param0: androidx.fragment.app.Fragment, param1: boolean): com.paypal.pyplcheckout.auth.ui.NativeAuthScreen;
						public getShowBackButton(): boolean;
						public toString(): string;
						public getFragment(): androidx.fragment.app.Fragment;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module billingagreements {
				export module dagger {
					export class BillingAgreementsModule {
						public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.dagger.BillingAgreementsModule>;
						public constructor();
						public providesBillingAgreementsRepository(param0: com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsDao, param1: kotlinx.coroutines.CoroutineScope): com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsRepository;
						public providesBillingAgreementsDao(param0: globalAndroid.content.Context): com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsDao;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module billingagreements {
				export module dagger {
					export class BillingAgreementsModule_ProvidesBillingAgreementsDaoFactory extends dagger.internal.Factory<com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsDao> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.dagger.BillingAgreementsModule_ProvidesBillingAgreementsDaoFactory>;
						public static create(param0: com.paypal.pyplcheckout.billingagreements.dagger.BillingAgreementsModule, param1: javax.inject.Provider<globalAndroid.content.Context>): com.paypal.pyplcheckout.billingagreements.dagger.BillingAgreementsModule_ProvidesBillingAgreementsDaoFactory;
						public get(): com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsDao;
						public constructor(param0: com.paypal.pyplcheckout.billingagreements.dagger.BillingAgreementsModule, param1: javax.inject.Provider<globalAndroid.content.Context>);
						public static providesBillingAgreementsDao(param0: com.paypal.pyplcheckout.billingagreements.dagger.BillingAgreementsModule, param1: globalAndroid.content.Context): com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsDao;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module billingagreements {
				export module dagger {
					export class BillingAgreementsModule_ProvidesBillingAgreementsRepositoryFactory extends dagger.internal.Factory<com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsRepository> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.dagger.BillingAgreementsModule_ProvidesBillingAgreementsRepositoryFactory>;
						public get(): com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsRepository;
						public static create(param0: com.paypal.pyplcheckout.billingagreements.dagger.BillingAgreementsModule, param1: javax.inject.Provider<com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsDao>, param2: javax.inject.Provider<kotlinx.coroutines.CoroutineScope>): com.paypal.pyplcheckout.billingagreements.dagger.BillingAgreementsModule_ProvidesBillingAgreementsRepositoryFactory;
						public constructor(param0: com.paypal.pyplcheckout.billingagreements.dagger.BillingAgreementsModule, param1: javax.inject.Provider<com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsDao>, param2: javax.inject.Provider<kotlinx.coroutines.CoroutineScope>);
						public static providesBillingAgreementsRepository(param0: com.paypal.pyplcheckout.billingagreements.dagger.BillingAgreementsModule, param1: com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsDao, param2: kotlinx.coroutines.CoroutineScope): com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsRepository;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module billingagreements {
				export module model {
					export class BillingAgreementBalancePreference {
						public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.model.BillingAgreementBalancePreference>;
						public static NONE: com.paypal.pyplcheckout.billingagreements.model.BillingAgreementBalancePreference;
						public static ENABLED: com.paypal.pyplcheckout.billingagreements.model.BillingAgreementBalancePreference;
						public static DISABLED: com.paypal.pyplcheckout.billingagreements.model.BillingAgreementBalancePreference;
						public static valueOf(param0: string): com.paypal.pyplcheckout.billingagreements.model.BillingAgreementBalancePreference;
						public toString(): string;
						public static values(): androidNative.Array<com.paypal.pyplcheckout.billingagreements.model.BillingAgreementBalancePreference>;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module billingagreements {
				export module model {
					export abstract class BillingAgreementState {
						public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.model.BillingAgreementState>;
					}
					export module BillingAgreementState {
						export class SupportedState extends com.paypal.pyplcheckout.billingagreements.model.BillingAgreementState {
							public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.model.BillingAgreementState.SupportedState>;
							public getType(): com.paypal.pyplcheckout.billingagreements.model.BillingAgreementType;
							public constructor(param0: com.paypal.pyplcheckout.billingagreements.model.BillingAgreementType);
							public hashCode(): number;
							public copy(param0: com.paypal.pyplcheckout.billingagreements.model.BillingAgreementType): com.paypal.pyplcheckout.billingagreements.model.BillingAgreementState.SupportedState;
							public component1(): com.paypal.pyplcheckout.billingagreements.model.BillingAgreementType;
							public toString(): string;
							public equals(param0: any): boolean;
						}
						export class UnsupportedState extends com.paypal.pyplcheckout.billingagreements.model.BillingAgreementState {
							public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.model.BillingAgreementState.UnsupportedState>;
							public static INSTANCE: com.paypal.pyplcheckout.billingagreements.model.BillingAgreementState.UnsupportedState;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module billingagreements {
				export module model {
					export class BillingAgreementType {
						public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.model.BillingAgreementType>;
						public static WITH_PURCHASE: com.paypal.pyplcheckout.billingagreements.model.BillingAgreementType;
						public static WITHOUT_PURCHASE: com.paypal.pyplcheckout.billingagreements.model.BillingAgreementType;
						public static NOT_SUPPORTED: com.paypal.pyplcheckout.billingagreements.model.BillingAgreementType;
						public static valueOf(param0: string): com.paypal.pyplcheckout.billingagreements.model.BillingAgreementType;
						public static values(): androidNative.Array<com.paypal.pyplcheckout.billingagreements.model.BillingAgreementType>;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module billingagreements {
				export module repo {
					export class BillingAgreementsDao {
						public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsDao>;
						/**
						 * Constructs a new instance of the com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsDao interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							setBillingAgreementType(param0: com.paypal.pyplcheckout.billingagreements.model.BillingAgreementType): void;
							getBillingAgreementType(): com.paypal.pyplcheckout.billingagreements.model.BillingAgreementType;
							setAlwaysUseBalancePreference(param0: boolean): void;
							getAlwaysUseBalancePreference(): boolean;
							setBillingAgreementToken(param0: string): void;
							getBillingAgreementToken(): string;
							clear(): void;
						});
						public constructor();
						public getBillingAgreementToken(): string;
						public setAlwaysUseBalancePreference(param0: boolean): void;
						public getAlwaysUseBalancePreference(): boolean;
						public getBillingAgreementType(): com.paypal.pyplcheckout.billingagreements.model.BillingAgreementType;
						public clear(): void;
						public setBillingAgreementToken(param0: string): void;
						public setBillingAgreementType(param0: com.paypal.pyplcheckout.billingagreements.model.BillingAgreementType): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module billingagreements {
				export module repo {
					export class BillingAgreementsDaoImpl extends com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsDao {
						public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsDaoImpl>;
						public static BILLING_AGREEMENT_TYPE: string;
						public static ALWAYS_USE_BALANCE_PREFERENCE: string;
						public static BILLING_AGREEMENT_TOKEN: string;
						public getBillingAgreementToken(): string;
						public constructor(param0: globalAndroid.content.Context);
						public setAlwaysUseBalancePreference(param0: boolean): void;
						public getAlwaysUseBalancePreference(): boolean;
						public getBillingAgreementType(): com.paypal.pyplcheckout.billingagreements.model.BillingAgreementType;
						public clear(): void;
						public setBillingAgreementToken(param0: string): void;
						public setBillingAgreementType(param0: com.paypal.pyplcheckout.billingagreements.model.BillingAgreementType): void;
					}
					export module BillingAgreementsDaoImpl {
						export class Companion {
							public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsDaoImpl.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module billingagreements {
				export module repo {
					export class BillingAgreementsDaoImpl_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsDaoImpl> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsDaoImpl_Factory>;
						public static create(param0: javax.inject.Provider<globalAndroid.content.Context>): com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsDaoImpl_Factory;
						public constructor(param0: javax.inject.Provider<globalAndroid.content.Context>);
						public get(): com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsDaoImpl;
						public static newInstance(param0: globalAndroid.content.Context): com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsDaoImpl;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module billingagreements {
				export module repo {
					export class BillingAgreementsRepository {
						public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsRepository>;
						/**
						 * Constructs a new instance of the com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsRepository interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							setBillingAgreementSessionType(param0: com.paypal.pyplcheckout.billingagreements.model.BillingAgreementType): void;
							getBillingAgreementSessionState(): kotlinx.coroutines.flow.StateFlow<com.paypal.pyplcheckout.billingagreements.model.BillingAgreementState>;
							getAlwaysUseBalancePreference(): kotlinx.coroutines.flow.StateFlow<java.lang.Boolean>;
							setAlwaysUseBalancePreference(param0: boolean): void;
							setBillingAgreementToken(param0: string): void;
							getBillingAgreementToken(): string;
							clear(): void;
						});
						public constructor();
						public getBillingAgreementToken(): string;
						public setAlwaysUseBalancePreference(param0: boolean): void;
						public getBillingAgreementSessionState(): kotlinx.coroutines.flow.StateFlow<com.paypal.pyplcheckout.billingagreements.model.BillingAgreementState>;
						public getAlwaysUseBalancePreference(): kotlinx.coroutines.flow.StateFlow<java.lang.Boolean>;
						public setBillingAgreementSessionType(param0: com.paypal.pyplcheckout.billingagreements.model.BillingAgreementType): void;
						public clear(): void;
						public setBillingAgreementToken(param0: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module billingagreements {
				export module repo {
					export class BillingAgreementsRepositoryImpl extends com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsRepository {
						public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsRepositoryImpl>;
						public getBillingAgreementToken(): string;
						public getState(): kotlinx.coroutines.flow.StateFlow<com.paypal.pyplcheckout.billingagreements.model.BillingAgreementState>;
						public setAlwaysUseBalancePreference(param0: boolean): void;
						public getBillingAgreementSessionState(): kotlinx.coroutines.flow.StateFlow<com.paypal.pyplcheckout.billingagreements.model.BillingAgreementState>;
						public getAlwaysUseBalancePreference(): kotlinx.coroutines.flow.StateFlow<java.lang.Boolean>;
						public setBillingAgreementSessionType(param0: com.paypal.pyplcheckout.billingagreements.model.BillingAgreementType): void;
						public clear(): void;
						public setBillingAgreementToken(param0: string): void;
						public constructor(param0: com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsDao, param1: kotlinx.coroutines.CoroutineScope);
					}
					export module BillingAgreementsRepositoryImpl {
						export class WhenMappings {
							public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsRepositoryImpl.WhenMappings>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module billingagreements {
				export module repo {
					export class BillingAgreementsRepositoryImpl_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsRepositoryImpl> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsRepositoryImpl_Factory>;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsDao>, param1: javax.inject.Provider<kotlinx.coroutines.CoroutineScope>);
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsDao>, param1: javax.inject.Provider<kotlinx.coroutines.CoroutineScope>): com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsRepositoryImpl_Factory;
						public static newInstance(param0: com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsDao, param1: kotlinx.coroutines.CoroutineScope): com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsRepositoryImpl;
						public get(): com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsRepositoryImpl;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module billingagreements {
				export module usecase {
					export class BillingAgreementsCacheTypeUseCase {
						public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsCacheTypeUseCase>;
						public constructor(param0: com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsRepository);
						public invoke(param0: com.paypal.pyplcheckout.pojo.CheckoutSessionType): void;
					}
					export module BillingAgreementsCacheTypeUseCase {
						export class WhenMappings {
							public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsCacheTypeUseCase.WhenMappings>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module billingagreements {
				export module usecase {
					export class BillingAgreementsCacheTypeUseCase_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsCacheTypeUseCase> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsCacheTypeUseCase_Factory>;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsRepository>);
						public get(): com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsCacheTypeUseCase;
						public static newInstance(param0: com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsRepository): com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsCacheTypeUseCase;
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsRepository>): com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsCacheTypeUseCase_Factory;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module billingagreements {
				export module usecase {
					export class BillingAgreementsGetBalancePrefUseCase {
						public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsGetBalancePrefUseCase>;
						public invoke(): kotlinx.coroutines.flow.StateFlow<com.paypal.pyplcheckout.billingagreements.model.BillingAgreementBalancePreference>;
						public constructor(param0: kotlinx.coroutines.CoroutineScope, param1: com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsRepository, param2: com.paypal.pyplcheckout.services.Repository, param3: com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsGetTypeUseCase);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module billingagreements {
				export module usecase {
					export class BillingAgreementsGetBalancePrefUseCase_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsGetBalancePrefUseCase> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsGetBalancePrefUseCase_Factory>;
						public constructor(param0: javax.inject.Provider<kotlinx.coroutines.CoroutineScope>, param1: javax.inject.Provider<com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsRepository>, param2: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param3: javax.inject.Provider<com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsGetTypeUseCase>);
						public static create(param0: javax.inject.Provider<kotlinx.coroutines.CoroutineScope>, param1: javax.inject.Provider<com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsRepository>, param2: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param3: javax.inject.Provider<com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsGetTypeUseCase>): com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsGetBalancePrefUseCase_Factory;
						public get(): com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsGetBalancePrefUseCase;
						public static newInstance(param0: kotlinx.coroutines.CoroutineScope, param1: com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsRepository, param2: com.paypal.pyplcheckout.services.Repository, param3: com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsGetTypeUseCase): com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsGetBalancePrefUseCase;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module billingagreements {
				export module usecase {
					export class BillingAgreementsGetTypeUseCase {
						public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsGetTypeUseCase>;
						public constructor(param0: com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsRepository);
						public invoke(): kotlinx.coroutines.flow.StateFlow<com.paypal.pyplcheckout.billingagreements.model.BillingAgreementState>;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module billingagreements {
				export module usecase {
					export class BillingAgreementsGetTypeUseCase_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsGetTypeUseCase> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsGetTypeUseCase_Factory>;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsRepository>);
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsRepository>): com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsGetTypeUseCase_Factory;
						public get(): com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsGetTypeUseCase;
						public static newInstance(param0: com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsRepository): com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsGetTypeUseCase;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module billingagreements {
				export module usecase {
					export class BillingAgreementsSetBalancePrefUseCase {
						public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsSetBalancePrefUseCase>;
						public constructor(param0: com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsRepository);
						public invoke(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module billingagreements {
				export module usecase {
					export class BillingAgreementsSetBalancePrefUseCase_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsSetBalancePrefUseCase> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsSetBalancePrefUseCase_Factory>;
						public static newInstance(param0: com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsRepository): com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsSetBalancePrefUseCase;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsRepository>);
						public get(): com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsSetBalancePrefUseCase;
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsRepository>): com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsSetBalancePrefUseCase_Factory;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module billingagreements {
				export module view {
					export module config {
						export class BillingAgreementsTermsPageConfig extends com.paypal.pyplcheckout.navigation.ContentPage {
							public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.view.config.BillingAgreementsTermsPageConfig>;
							public constructor();
							public getHeaderContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
							public removeViewsFromContainer(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param1: globalAndroid.view.ViewGroup): void;
							public setBodyContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
							public getFooterContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
							public addViewsToContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup, param2: number): void;
							public getBodyContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
							public getTopBannerContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
							public constructor(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param1: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param2: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param3: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>);
							public addViewsToContainer(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param1: globalAndroid.view.ViewGroup): void;
							public addViewsToContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup): void;
							public setFooterContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
							public setHeaderContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
							public getHeaderContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
							public getFooterContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
							public removeViewsFromContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup): void;
							public getBodyContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
							public constructor(param0: globalAndroid.content.Context, param1: androidx.fragment.app.Fragment, param2: com.paypal.pyplcheckout.navigation.ContentPage);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module billingagreements {
				export module view {
					export module customview {
						export class PayPalBillingAgreementsInfoHeader implements com.paypal.pyplcheckout.navigation.interfaces.ContentView, com.paypal.pyplcheckout.navigation.interfaces.ICustomViewsViewModel {
							public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.view.customview.PayPalBillingAgreementsInfoHeader>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public getContentViewMinHeight(): number;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public initViewModelObservers(): void;
							public removeListeners(): void;
							public getIsAnchoredToBottomSheet(): boolean;
							public getViewId(): string;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public getLifecycleOwner(param0: globalAndroid.view.View): androidx.lifecycle.LifecycleOwner;
							public _$_clearFindViewByIdCache(): void;
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public getComponentActivity(param0: globalAndroid.content.Context): androidx.activity.ComponentActivity;
							public setContentViewVisibility(param0: number): void;
						}
						export module PayPalBillingAgreementsInfoHeader {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.view.customview.PayPalBillingAgreementsInfoHeader.Companion>;
								public getTAG(): string;
							}
							export class WhenMappings {
								public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.view.customview.PayPalBillingAgreementsInfoHeader.WhenMappings>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module billingagreements {
				export module view {
					export module customview {
						export class PayPalBillingAgreementsTermsBodyView implements com.paypal.pyplcheckout.navigation.interfaces.ICustomViewsViewModel, com.paypal.pyplcheckout.navigation.interfaces.ContentView {
							public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.view.customview.PayPalBillingAgreementsTermsBodyView>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public getContentViewMinHeight(): number;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public initViewModelObservers(): void;
							public removeListeners(): void;
							public getIsAnchoredToBottomSheet(): boolean;
							public getViewId(): string;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public getLifecycleOwner(param0: globalAndroid.view.View): androidx.lifecycle.LifecycleOwner;
							public _$_clearFindViewByIdCache(): void;
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public getComponentActivity(param0: globalAndroid.content.Context): androidx.activity.ComponentActivity;
							public setContentViewVisibility(param0: number): void;
						}
						export module PayPalBillingAgreementsTermsBodyView {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.view.customview.PayPalBillingAgreementsTermsBodyView.Companion>;
								public getTAG(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module billingagreements {
				export module view {
					export module customview {
						export class PayPalBillingAgreementsTermsFooterLink implements com.paypal.pyplcheckout.navigation.interfaces.ContentView, com.paypal.pyplcheckout.navigation.interfaces.ICustomViewsViewModel {
							public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.view.customview.PayPalBillingAgreementsTermsFooterLink>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public getContentViewMinHeight(): number;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public initViewModelObservers(): void;
							public removeListeners(): void;
							public getIsAnchoredToBottomSheet(): boolean;
							public getViewId(): string;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public getLifecycleOwner(param0: globalAndroid.view.View): androidx.lifecycle.LifecycleOwner;
							public onAttachedToWindow(): void;
							public _$_clearFindViewByIdCache(): void;
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public getComponentActivity(param0: globalAndroid.content.Context): androidx.activity.ComponentActivity;
							public setContentViewVisibility(param0: number): void;
						}
						export module PayPalBillingAgreementsTermsFooterLink {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.view.customview.PayPalBillingAgreementsTermsFooterLink.Companion>;
								public getTAG(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module billingagreements {
				export module view {
					export module customview {
						export class PayPalBillingAgreementsTermsHeaderView implements com.paypal.pyplcheckout.navigation.interfaces.ContentView {
							public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.view.customview.PayPalBillingAgreementsTermsHeaderView>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public getContentViewMinHeight(): number;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: androidx.fragment.app.Fragment);
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public removeListeners(): void;
							public getIsAnchoredToBottomSheet(): boolean;
							public getViewId(): string;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public onAttachedToWindow(): void;
							public _$_clearFindViewByIdCache(): void;
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public setContentViewVisibility(param0: number): void;
						}
						export module PayPalBillingAgreementsTermsHeaderView {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.view.customview.PayPalBillingAgreementsTermsHeaderView.Companion>;
								public getTAG(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module billingagreements {
				export module view {
					export module customview {
						export class PayPalBillingAgreementsTextView implements com.paypal.pyplcheckout.navigation.interfaces.ICustomViewsViewModel, com.paypal.pyplcheckout.navigation.interfaces.ContentView {
							public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.view.customview.PayPalBillingAgreementsTextView>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public getTextView(): com.paypal.pyplcheckout.home.view.customviews.LinkTextView;
							public getContentViewMinHeight(): number;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public initViewModelObservers(): void;
							public removeListeners(): void;
							public getIsAnchoredToBottomSheet(): boolean;
							public getViewId(): string;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public getLifecycleOwner(param0: globalAndroid.view.View): androidx.lifecycle.LifecycleOwner;
							public _$_clearFindViewByIdCache(): void;
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public getComponentActivity(param0: globalAndroid.content.Context): androidx.activity.ComponentActivity;
							public setContentViewVisibility(param0: number): void;
						}
						export module PayPalBillingAgreementsTextView {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.view.customview.PayPalBillingAgreementsTextView.Companion>;
								public getTAG(): string;
							}
							export class WhenMappings {
								public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.view.customview.PayPalBillingAgreementsTextView.WhenMappings>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module billingagreements {
				export module view {
					export module customview {
						export class PayPalBillingAgreementsToggle implements com.paypal.pyplcheckout.navigation.interfaces.ContentView, com.paypal.pyplcheckout.navigation.interfaces.ICustomViewsViewModel {
							public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.view.customview.PayPalBillingAgreementsToggle>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public getContentViewMinHeight(): number;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public initViewModelObservers(): void;
							public removeListeners(): void;
							public getIsAnchoredToBottomSheet(): boolean;
							public getViewId(): string;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public getLifecycleOwner(param0: globalAndroid.view.View): androidx.lifecycle.LifecycleOwner;
							public _$_clearFindViewByIdCache(): void;
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public getComponentActivity(param0: globalAndroid.content.Context): androidx.activity.ComponentActivity;
							public setContentViewVisibility(param0: number): void;
						}
						export module PayPalBillingAgreementsToggle {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.view.customview.PayPalBillingAgreementsToggle.Companion>;
								public getTAG(): string;
							}
							export class WhenMappings {
								public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.view.customview.PayPalBillingAgreementsToggle.WhenMappings>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module billingagreements {
				export module view {
					export module fragment {
						export class PYPLBillingAgreementsTermsFragment extends com.paypal.pyplcheckout.home.view.BaseFragment {
							public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.view.fragment.PYPLBillingAgreementsTermsFragment>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public constructor();
							public getViewId(): string;
							public onActivityCreated(param0: globalAndroid.os.Bundle): void;
							public onStart(): void;
							public onCreateView(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: globalAndroid.os.Bundle): globalAndroid.view.View;
							public _$_clearFindViewByIdCache(): void;
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
						}
						export module PYPLBillingAgreementsTermsFragment {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.view.fragment.PYPLBillingAgreementsTermsFragment.Companion>;
								public newInstance(): com.paypal.pyplcheckout.billingagreements.view.fragment.PYPLBillingAgreementsTermsFragment;
								public getTAG(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module billingagreements {
				export module viewmodel {
					export abstract class BaInfoHeaderState {
						public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.viewmodel.BaInfoHeaderState>;
					}
					export module BaInfoHeaderState {
						export class Hide extends com.paypal.pyplcheckout.billingagreements.viewmodel.BaInfoHeaderState {
							public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.viewmodel.BaInfoHeaderState.Hide>;
							public static INSTANCE: com.paypal.pyplcheckout.billingagreements.viewmodel.BaInfoHeaderState.Hide;
						}
						export class Show extends com.paypal.pyplcheckout.billingagreements.viewmodel.BaInfoHeaderState {
							public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.viewmodel.BaInfoHeaderState.Show>;
							public getHeaderTextId(): number;
							public hashCode(): number;
							public component2(): number;
							public getLinkTextId(): number;
							public constructor(param0: string, param1: number, param2: number);
							public component3(): number;
							public copy(param0: string, param1: number, param2: number): com.paypal.pyplcheckout.billingagreements.viewmodel.BaInfoHeaderState.Show;
							public toString(): string;
							public getMerchantName(): string;
							public equals(param0: any): boolean;
							public component1(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module billingagreements {
				export module viewmodel {
					export abstract class BaTermsFooterState {
						public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.viewmodel.BaTermsFooterState>;
					}
					export module BaTermsFooterState {
						export class Hide extends com.paypal.pyplcheckout.billingagreements.viewmodel.BaTermsFooterState {
							public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.viewmodel.BaTermsFooterState.Hide>;
							public static INSTANCE: com.paypal.pyplcheckout.billingagreements.viewmodel.BaTermsFooterState.Hide;
						}
						export class ShowLink extends com.paypal.pyplcheckout.billingagreements.viewmodel.BaTermsFooterState {
							public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.viewmodel.BaTermsFooterState.ShowLink>;
							public hashCode(): number;
							public constructor(param0: string);
							public copy(param0: string): com.paypal.pyplcheckout.billingagreements.viewmodel.BaTermsFooterState.ShowLink;
							public getLink(): string;
							public toString(): string;
							public equals(param0: any): boolean;
							public component1(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module billingagreements {
				export module viewmodel {
					export abstract class BaTermsState {
						public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.viewmodel.BaTermsState>;
					}
					export module BaTermsState {
						export class Hide extends com.paypal.pyplcheckout.billingagreements.viewmodel.BaTermsState {
							public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.viewmodel.BaTermsState.Hide>;
							public static INSTANCE: com.paypal.pyplcheckout.billingagreements.viewmodel.BaTermsState.Hide;
						}
						export class ShowLinkText extends com.paypal.pyplcheckout.billingagreements.viewmodel.BaTermsState {
							public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.viewmodel.BaTermsState.ShowLinkText>;
							public component2(): string;
							public component1(): number;
							public constructor(param0: number, param1: string, param2: string);
							public hashCode(): number;
							public getUrl(): string;
							public copy(param0: number, param1: string, param2: string): com.paypal.pyplcheckout.billingagreements.viewmodel.BaTermsState.ShowLinkText;
							public toString(): string;
							public getMerchantName(): string;
							public equals(param0: any): boolean;
							public getStringRes(): number;
							public component3(): string;
						}
						export class ShowText extends com.paypal.pyplcheckout.billingagreements.viewmodel.BaTermsState {
							public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.viewmodel.BaTermsState.ShowText>;
							public component1(): number;
							public copy(param0: number): com.paypal.pyplcheckout.billingagreements.viewmodel.BaTermsState.ShowText;
							public hashCode(): number;
							public toString(): string;
							public equals(param0: any): boolean;
							public getStringRes(): number;
							public constructor(param0: number);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module billingagreements {
				export module viewmodel {
					export abstract class BaTextState {
						public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.viewmodel.BaTextState>;
					}
					export module BaTextState {
						export class Hide extends com.paypal.pyplcheckout.billingagreements.viewmodel.BaTextState {
							public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.viewmodel.BaTextState.Hide>;
							public static INSTANCE: com.paypal.pyplcheckout.billingagreements.viewmodel.BaTextState.Hide;
						}
						export class Show extends com.paypal.pyplcheckout.billingagreements.viewmodel.BaTextState {
							public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.viewmodel.BaTextState.Show>;
							public hashCode(): number;
							public getResource(): number;
							public component2(): com.paypal.pyplcheckout.pojo.Locale;
							public copy(param0: string, param1: com.paypal.pyplcheckout.pojo.Locale, param2: number): com.paypal.pyplcheckout.billingagreements.viewmodel.BaTextState.Show;
							public getUserLocale(): com.paypal.pyplcheckout.pojo.Locale;
							public component3(): number;
							public toString(): string;
							public getMerchantName(): string;
							public equals(param0: any): boolean;
							public constructor(param0: string, param1: com.paypal.pyplcheckout.pojo.Locale, param2: number);
							public component1(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module billingagreements {
				export module viewmodel {
					export abstract class BaToggleState {
						public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.viewmodel.BaToggleState>;
					}
					export module BaToggleState {
						export class Hide extends com.paypal.pyplcheckout.billingagreements.viewmodel.BaToggleState {
							public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.viewmodel.BaToggleState.Hide>;
							public static INSTANCE: com.paypal.pyplcheckout.billingagreements.viewmodel.BaToggleState.Hide;
						}
						export class Show extends com.paypal.pyplcheckout.billingagreements.viewmodel.BaToggleState {
							public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.viewmodel.BaToggleState.Show>;
							public component1(): boolean;
							public hashCode(): number;
							public constructor(param0: boolean);
							public isSelected(): boolean;
							public toString(): string;
							public equals(param0: any): boolean;
							public copy(param0: boolean): com.paypal.pyplcheckout.billingagreements.viewmodel.BaToggleState.Show;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module billingagreements {
				export module viewmodel {
					export class BillingAgreementsViewModel extends com.paypal.pyplcheckout.viewmodels.BaseViewModel {
						public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.viewmodel.BillingAgreementsViewModel>;
						public constructor(param0: com.paypal.pyplcheckout.events.Events, param1: com.paypal.pyplcheckout.services.Repository, param2: com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsGetBalancePrefUseCase, param3: com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsSetBalancePrefUseCase, param4: com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsCacheTypeUseCase, param5: com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsGetTypeUseCase, param6: com.paypal.pyplcheckout.fundingOptions.usecase.GetSelectedFundingOptionUseCase, param7: com.paypal.pyplcheckout.userprofile.usecase.GetUserCountryUseCase, param8: com.paypal.pyplcheckout.utils.PYPLCheckoutUtils, param9: com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsRepository);
						public getBaToggleState(): androidx.lifecycle.LiveData<com.paypal.pyplcheckout.billingagreements.viewmodel.BaToggleState>;
						public constructor();
						public setAlwaysUseBalancePreference(param0: boolean): void;
						public getBaPurchaseTextState(): androidx.lifecycle.LiveData<com.paypal.pyplcheckout.billingagreements.viewmodel.BaTextState>;
						public getBillingAgreementType(): com.paypal.pyplcheckout.billingagreements.model.BillingAgreementType;
						public openTermsFragment(): void;
						public getBaTermsState(): androidx.lifecycle.LiveData<com.paypal.pyplcheckout.billingagreements.viewmodel.BaTermsState>;
						public getBaInfoHeaderState(): androidx.lifecycle.LiveData<com.paypal.pyplcheckout.billingagreements.viewmodel.BaInfoHeaderState>;
						public listenForEvents(): void;
						public getUserCountry(): com.paypal.pyplcheckout.userprofile.model.UserCountry;
						public getShouldHidePoliciesLink(): boolean;
						public closeTermsFragment(param0: androidx.fragment.app.Fragment): void;
						public getCtaTextForBillingAgreements(): number;
						public getBaTermsFooterState(): androidx.lifecycle.LiveData<com.paypal.pyplcheckout.billingagreements.viewmodel.BaTermsFooterState>;
						public getBillingAgreementsTermsHeaderText(): number;
					}
					export module BillingAgreementsViewModel {
						export class WhenMappings {
							public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.viewmodel.BillingAgreementsViewModel.WhenMappings>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module billingagreements {
				export module viewmodel {
					export class BillingAgreementsViewModel_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.billingagreements.viewmodel.BillingAgreementsViewModel> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.billingagreements.viewmodel.BillingAgreementsViewModel_Factory>;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param1: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param2: javax.inject.Provider<com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsGetBalancePrefUseCase>, param3: javax.inject.Provider<com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsSetBalancePrefUseCase>, param4: javax.inject.Provider<com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsCacheTypeUseCase>, param5: javax.inject.Provider<com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsGetTypeUseCase>, param6: javax.inject.Provider<com.paypal.pyplcheckout.fundingOptions.usecase.GetSelectedFundingOptionUseCase>, param7: javax.inject.Provider<com.paypal.pyplcheckout.userprofile.usecase.GetUserCountryUseCase>, param8: javax.inject.Provider<com.paypal.pyplcheckout.utils.PYPLCheckoutUtils>, param9: javax.inject.Provider<com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsRepository>);
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param1: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param2: javax.inject.Provider<com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsGetBalancePrefUseCase>, param3: javax.inject.Provider<com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsSetBalancePrefUseCase>, param4: javax.inject.Provider<com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsCacheTypeUseCase>, param5: javax.inject.Provider<com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsGetTypeUseCase>, param6: javax.inject.Provider<com.paypal.pyplcheckout.fundingOptions.usecase.GetSelectedFundingOptionUseCase>, param7: javax.inject.Provider<com.paypal.pyplcheckout.userprofile.usecase.GetUserCountryUseCase>, param8: javax.inject.Provider<com.paypal.pyplcheckout.utils.PYPLCheckoutUtils>, param9: javax.inject.Provider<com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsRepository>): com.paypal.pyplcheckout.billingagreements.viewmodel.BillingAgreementsViewModel_Factory;
						public get(): com.paypal.pyplcheckout.billingagreements.viewmodel.BillingAgreementsViewModel;
						public static newInstance(param0: com.paypal.pyplcheckout.events.Events, param1: com.paypal.pyplcheckout.services.Repository, param2: com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsGetBalancePrefUseCase, param3: com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsSetBalancePrefUseCase, param4: com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsCacheTypeUseCase, param5: com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsGetTypeUseCase, param6: com.paypal.pyplcheckout.fundingOptions.usecase.GetSelectedFundingOptionUseCase, param7: com.paypal.pyplcheckout.userprofile.usecase.GetUserCountryUseCase, param8: com.paypal.pyplcheckout.utils.PYPLCheckoutUtils, param9: com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsRepository): com.paypal.pyplcheckout.billingagreements.viewmodel.BillingAgreementsViewModel;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module cache {
					export class BooleanPrefConstants {
						public static class: java.lang.Class<com.paypal.pyplcheckout.common.cache.BooleanPrefConstants>;
						public static FINISH_CHECKOUT_AND_APPROVE_FIRED: com.paypal.pyplcheckout.common.cache.BooleanPrefConstants;
						public static ADD_MANUALLY: com.paypal.pyplcheckout.common.cache.BooleanPrefConstants;
						public static BLOCK_NON_DOMESTIC_SHIPPING: com.paypal.pyplcheckout.common.cache.BooleanPrefConstants;
						public static COMING_FROM_REVIEW: com.paypal.pyplcheckout.common.cache.BooleanPrefConstants;
						public static IS_SMART_PAYMENT: com.paypal.pyplcheckout.common.cache.BooleanPrefConstants;
						public static DID_CCT_OPEN: com.paypal.pyplcheckout.common.cache.BooleanPrefConstants;
						public static IS_FALLBACK: com.paypal.pyplcheckout.common.cache.BooleanPrefConstants;
						public static IS_ORDER_CREATED: com.paypal.pyplcheckout.common.cache.BooleanPrefConstants;
						public static valueOf(param0: string): com.paypal.pyplcheckout.common.cache.BooleanPrefConstants;
						public static values(): androidNative.Array<com.paypal.pyplcheckout.common.cache.BooleanPrefConstants>;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module cache {
					export class Cache {
						public static class: java.lang.Class<com.paypal.pyplcheckout.common.cache.Cache>;
						public static INSTANCE: com.paypal.pyplcheckout.common.cache.Cache;
						public static FB_SESSION_UID: string;
						public static isVaultFlow(param0: globalAndroid.content.Context): boolean;
						public getCountryById(param0: globalAndroid.content.Context): com.paypal.pyplcheckout.addshipping.model.Country;
						public static getFirebaseInstanceID(param0: globalAndroid.content.Context): string;
						public cacheOrderId(param0: globalAndroid.content.Context, param1: string): void;
						public getCountries(): java.util.ArrayList<com.paypal.pyplcheckout.addshipping.model.Country>;
						public getState(param0: globalAndroid.content.Context): string;
						public static getSPBToken(param0: globalAndroid.content.Context): string;
						public static getOrderAuthorizeUrl(param0: globalAndroid.content.Context): string;
						public getCountryfield(): java.util.HashMap<string,string>;
						public cacheSPBToken(param0: globalAndroid.content.Context, param1: string): void;
						public cacheCountryfield(param0: string, param1: string): void;
						public getCountryFields(): java.util.HashMap<string,string>;
						public cacheAddManually(param0: globalAndroid.content.Context, param1: boolean): void;
						public static cacheDidCustomTabOpen(param0: globalAndroid.content.Context, param1: boolean): void;
						public getCountryList(): java.util.ArrayList<com.paypal.pyplcheckout.addshipping.model.Country>;
						public getBlockNonDomesticShipping(param0: globalAndroid.content.Context): boolean;
						public cacheStickinessId(param0: globalAndroid.content.Context, param1: string): void;
						public getSavedAddress(param0: globalAndroid.content.Context): string;
						public clearSavedAddress(param0: globalAndroid.content.Context): void;
						public static cacheFundingSource(param0: globalAndroid.content.Context, param1: string): void;
						public cacheSearchScreenTitle(param0: globalAndroid.content.Context, param1: string): void;
						public cacheSavedAddress(param0: globalAndroid.content.Context, param1: string): void;
						public static cacheIntentDataUri(param0: globalAndroid.content.Context, param1: string): void;
						public static cacheMerchantCountry(param0: globalAndroid.content.Context, param1: string): void;
						public cacheCountryPosition(param0: globalAndroid.content.Context, param1: number): void;
						public static getIsOrderCreated(param0: globalAndroid.content.Context): boolean;
						public static clearFinishCheckoutAndOnApproveFiredFlag(param0: globalAndroid.content.Context): void;
						public isCacheComingFromReviewPage(param0: globalAndroid.content.Context): boolean;
						public static getOrCreateUUID(param0: globalAndroid.content.Context): string;
						public getCountryId(param0: globalAndroid.content.Context): string;
						public setCountryFields(param0: java.util.HashMap<string,string>): void;
						public static cacheIsFallback(param0: globalAndroid.content.Context, param1: boolean): void;
						public static getDomain(param0: globalAndroid.content.Context): string;
						public saveTransactionSessions(param0: globalAndroid.content.Context, param1: java.util.List<com.paypal.pyplcheckout.pojo.TransactionSession>): void;
						public static cacheFirebaseInstanceID(param0: globalAndroid.content.Context, param1: string): void;
						public static clearIntentDataUri(param0: globalAndroid.content.Context): void;
						public static getOrderId(param0: globalAndroid.content.Context): string;
						public static clearCreateOrderContext(param0: globalAndroid.content.Context): void;
						public static cacheOrderCaptureUrl(param0: globalAndroid.content.Context, param1: string): void;
						public static cacheCreateOrderContext(param0: globalAndroid.content.Context, param1: string, param2: string, param3: string): void;
						public cacheComingFromReviewPage(param0: globalAndroid.content.Context, param1: boolean): void;
						public cacheCountries(param0: com.paypal.pyplcheckout.addshipping.model.Country): void;
						public getTransactionSessions(param0: globalAndroid.content.Context): java.util.List<com.paypal.pyplcheckout.pojo.TransactionSession>;
						public isAddManually(param0: globalAndroid.content.Context): java.lang.Boolean;
						public clearSessionValues(param0: globalAndroid.content.Context): void;
						public static getFbSessionUid(param0: globalAndroid.content.Context): string;
						public static cacheOrderPatchUrl(param0: globalAndroid.content.Context, param1: string): void;
						public getSearchScreenTitle(param0: globalAndroid.content.Context): string;
						public static getFacilitatorClientId(param0: globalAndroid.content.Context): string;
						public static cacheBlockNonDomesticShipping(param0: globalAndroid.content.Context, param1: boolean): void;
						public getMerchantCountry(param0: globalAndroid.content.Context): string;
						public static getIsSmartPayment(param0: globalAndroid.content.Context): boolean;
						public clearAddShippingData(param0: globalAndroid.content.Context): void;
						public static getStickinessId(param0: globalAndroid.content.Context): string;
						public static getButtonSessionId(param0: globalAndroid.content.Context): string;
						public getPostalCode(param0: globalAndroid.content.Context): string;
						public static getOrderPatchUrl(param0: globalAndroid.content.Context): string;
						public cacheHintTitle(param0: globalAndroid.content.Context, param1: string): void;
						public cacheFbSessionUid(param0: globalAndroid.content.Context, param1: string): void;
						public static cacheDomain(param0: globalAndroid.content.Context, param1: string): void;
						public static getFundingSource(param0: globalAndroid.content.Context): string;
						public static cacheOrderAuthorizeUrl(param0: globalAndroid.content.Context, param1: string): void;
						public static getOrderCaptureUrl(param0: globalAndroid.content.Context): string;
						public static cacheIsSmartPaymentButton(param0: globalAndroid.content.Context, param1: boolean): void;
						public getCity(param0: globalAndroid.content.Context): string;
						public getCountryPosition(param0: globalAndroid.content.Context): number;
						public static getIntentDataUri(param0: globalAndroid.content.Context): string;
						public static cacheIsVaultFlow(param0: globalAndroid.content.Context, param1: boolean): void;
						public static cacheFacilitatorClientId(param0: globalAndroid.content.Context, param1: string): void;
						public static getDidCustomTabOpen(param0: globalAndroid.content.Context): boolean;
						public cacheFinishCheckoutAndOnApproveFiredFlag(param0: globalAndroid.content.Context, param1: boolean): void;
						public static getIsFallback(param0: globalAndroid.content.Context): boolean;
						public cacheAddressSelected(param0: globalAndroid.content.Context, param1: com.paypal.pyplcheckout.addshipping.model.Address): void;
						public cacheCountryId(param0: globalAndroid.content.Context, param1: string): void;
						public static getFinishCheckoutAndOnApproveFiredFlag(param0: globalAndroid.content.Context): boolean;
						public getFullAddress(param0: globalAndroid.content.Context): string;
						public cacheButtonSessionId(param0: globalAndroid.content.Context, param1: string): void;
						public getHintTitle(param0: globalAndroid.content.Context): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module cache {
					export class CacheConfigManager {
						public static class: java.lang.Class<com.paypal.pyplcheckout.common.cache.CacheConfigManager>;
						public constructor(param0: com.paypal.pyplcheckout.common.cache.CheckoutCache);
						public isDataStoreFeatureEnabled(): boolean;
						public getStickinessId(param0: globalAndroid.content.Context): string;
						public cacheStickinessId(param0: globalAndroid.content.Context, param1: string): void;
						public setDataStoreFeatureEnabled(param0: boolean): void;
					}
					export module CacheConfigManager {
						export class Companion {
							public static class: java.lang.Class<com.paypal.pyplcheckout.common.cache.CacheConfigManager.Companion>;
							public getInstance(): com.paypal.pyplcheckout.common.cache.CacheConfigManager;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module cache {
					export class CacheConfigManager_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.common.cache.CacheConfigManager> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.common.cache.CacheConfigManager_Factory>;
						public get(): com.paypal.pyplcheckout.common.cache.CacheConfigManager;
						public static newInstance(param0: com.paypal.pyplcheckout.common.cache.CheckoutCache): com.paypal.pyplcheckout.common.cache.CacheConfigManager;
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.common.cache.CheckoutCache>): com.paypal.pyplcheckout.common.cache.CacheConfigManager_Factory;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.common.cache.CheckoutCache>);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module cache {
					export class CheckoutCache {
						public static class: java.lang.Class<com.paypal.pyplcheckout.common.cache.CheckoutCache>;
						public cacheHintTitle(param0: string): void;
						public cacheOrderPatchUrl(param0: string): void;
						public cacheFacilitatorClientId(param0: string): void;
						public getCountries(): java.util.ArrayList<com.paypal.pyplcheckout.addshipping.model.Country>;
						public saveTransactionSessions(param0: java.util.List<com.paypal.pyplcheckout.pojo.TransactionSession>): void;
						public getFirebaseInstanceID(): string;
						public getDidCustomTabOpen(): boolean;
						public getCountryfield(): java.util.HashMap<string,string>;
						public cacheSearchScreenTitle(param0: string): void;
						public getHintTitle(): string;
						public cacheCountryfield(param0: string, param1: string): void;
						public cacheComingFromReviewPage(param0: boolean): void;
						public getFullAddress(): string;
						public clearAddShippingData(): void;
						public getFundingSource(): string;
						public getStickinessId(): string;
						public cacheOrderId(param0: string): void;
						public getDomain(): string;
						public cacheBlockNonDomesticShipping(param0: boolean): void;
						public getIntentDataUri(): string;
						public cacheDomain(param0: string): void;
						public cacheAddManually(param0: boolean): void;
						public getOrderPatchUrl(): string;
						public cacheIsFallback(param0: boolean): void;
						public isCacheComingFromReviewPage(): boolean;
						public getCountryId(): string;
						public cacheFbSessionUid(param0: string): void;
						public getOrderAuthorizeUrl(): string;
						public getIntDataForPref(param0: string): number;
						public cacheStickinessId(param0: string): void;
						public getCountryPosition(): number;
						public setIntDataForPref(param0: string, param1: number): void;
						public getCountryById(): com.paypal.pyplcheckout.addshipping.model.Country;
						public getCache(): com.paypal.pyplcheckout.common.cache.CheckoutCache;
						public cacheIsSmartPaymentButton(param0: boolean): void;
						public cacheCountries(param0: com.paypal.pyplcheckout.addshipping.model.Country): void;
						public isAddManually(): java.lang.Boolean;
						public getTransactionSessions(): java.util.List<com.paypal.pyplcheckout.pojo.TransactionSession>;
						public getFacilitatorClientId(): string;
						public clearCreateOrderContext(): void;
						public getPostalCode(): string;
						public getIsSmartPayment(): boolean;
						public clearFinishCheckoutAndOnApproveFiredFlag(): void;
						public cacheOrderAuthorizeUrl(param0: string): string;
						public cacheCreateOrderContext(param0: string, param1: string, param2: string): void;
						public getBooleanDataForPref(param0: string): boolean;
						public getState(): string;
						public cacheCountryPosition(param0: number): void;
						public clearSavedAddress(): void;
						public cacheMerchantCountry(param0: string): void;
						public getFbSessionUid(): string;
						public clearSessionValues(): void;
						public getSPBToken(): string;
						public clearIntentDataUri(): void;
						public getOrderId(): string;
						public cacheCountryId(param0: string): void;
						public constructor(param0: com.paypal.pyplcheckout.common.cache.CheckoutDataStore);
						public getOrderCaptureUrl(): string;
						public getSearchScreenTitle(): string;
						public setStringDataForPref(param0: string, param1: string): void;
						public cacheSPBToken(param0: string): void;
						public cacheFirebaseInstanceID(param0: string): void;
						public getMerchantCountry(): string;
						public cacheFundingSource(param0: string): void;
						public cacheOrderCaptureUrl(param0: string): void;
						public getOrCreateUUID(): string;
						public cacheDidCustomTabOpen(param0: boolean): void;
						public cacheIntentDataUri(param0: string): void;
						public getFinishCheckoutAndOnApproveFiredFlag(): boolean;
						public getIsOrderCreated(): boolean;
						public cacheFinishCheckoutAndOnApproveFiredFlag(param0: boolean): void;
						public getCity(): string;
						public getSavedAddress(): string;
						public cacheAddressSelected(param0: com.paypal.pyplcheckout.addshipping.model.Address): void;
						public getBlockNonDomesticShipping(): boolean;
						public getStringDataForPref(param0: string): string;
						public getIsFallback(): boolean;
						public cacheSavedAddress(param0: string): void;
						public cacheButtonSessionId(param0: string): void;
						public getButtonSessionId(): string;
						public setBooleanDataForPref(param0: string, param1: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module cache {
					export class CheckoutCache_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.common.cache.CheckoutCache> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.common.cache.CheckoutCache_Factory>;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.common.cache.CheckoutDataStore>);
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.common.cache.CheckoutDataStore>): com.paypal.pyplcheckout.common.cache.CheckoutCache_Factory;
						public get(): com.paypal.pyplcheckout.common.cache.CheckoutCache;
						public static newInstance(param0: com.paypal.pyplcheckout.common.cache.CheckoutDataStore): com.paypal.pyplcheckout.common.cache.CheckoutCache;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module cache {
					export class CheckoutDataStore extends com.paypal.pyplcheckout.common.cache.PreferenceStoreImpl {
						public static class: java.lang.Class<com.paypal.pyplcheckout.common.cache.CheckoutDataStore>;
						public constructor(param0: globalAndroid.content.Context);
						public setBoolean(param0: androidx.datastore.preferences.core.Preferences.Key<java.lang.Boolean>, param1: boolean, param2: any): any;
						public setString(param0: androidx.datastore.preferences.core.Preferences.Key<string>, param1: string, param2: any): any;
						public getPreferenceBoolean(param0: string, param1: any): any;
						public setIntDataStorePref(param0: string, param1: number): void;
						public setBooleanDataStorePref(param0: string, param1: boolean): void;
						public getPreferenceString(param0: string, param1: any): any;
						public getPreferenceInt(param0: string, param1: any): any;
						public setStringDataStorePref(param0: string, param1: string): void;
						public setInt(param0: androidx.datastore.preferences.core.Preferences.Key<java.lang.Integer>, param1: number, param2: any): any;
						public clear(param0: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module cache {
					export class CheckoutDataStore_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.common.cache.CheckoutDataStore> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.common.cache.CheckoutDataStore_Factory>;
						public get(): com.paypal.pyplcheckout.common.cache.CheckoutDataStore;
						public static newInstance(param0: globalAndroid.content.Context): com.paypal.pyplcheckout.common.cache.CheckoutDataStore;
						public constructor(param0: javax.inject.Provider<globalAndroid.content.Context>);
						public static create(param0: javax.inject.Provider<globalAndroid.content.Context>): com.paypal.pyplcheckout.common.cache.CheckoutDataStore_Factory;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module cache {
					export class IntPrefConstants {
						public static class: java.lang.Class<com.paypal.pyplcheckout.common.cache.IntPrefConstants>;
						public static COUNTRY_POSITION: com.paypal.pyplcheckout.common.cache.IntPrefConstants;
						public static valueOf(param0: string): com.paypal.pyplcheckout.common.cache.IntPrefConstants;
						public static values(): androidNative.Array<com.paypal.pyplcheckout.common.cache.IntPrefConstants>;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module cache {
					export class PreferenceConstants {
						public static class: java.lang.Class<com.paypal.pyplcheckout.common.cache.PreferenceConstants>;
						public constructor();
					}
					export module PreferenceConstants {
						export class PreferenceType {
							public static class: java.lang.Class<com.paypal.pyplcheckout.common.cache.PreferenceConstants.PreferenceType>;
							public static IntValue: com.paypal.pyplcheckout.common.cache.PreferenceConstants.PreferenceType;
							public static BooleanValue: com.paypal.pyplcheckout.common.cache.PreferenceConstants.PreferenceType;
							public static StringValue: com.paypal.pyplcheckout.common.cache.PreferenceConstants.PreferenceType;
							public static valueOf(param0: string): com.paypal.pyplcheckout.common.cache.PreferenceConstants.PreferenceType;
							public static values(): androidNative.Array<com.paypal.pyplcheckout.common.cache.PreferenceConstants.PreferenceType>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module cache {
					export class PreferenceStore {
						public static class: java.lang.Class<com.paypal.pyplcheckout.common.cache.PreferenceStore>;
						/**
						 * Constructs a new instance of the com.paypal.pyplcheckout.common.cache.PreferenceStore interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							setString(param0: androidx.datastore.preferences.core.Preferences.Key<string>, param1: string, param2: any): any;
							setBoolean(param0: androidx.datastore.preferences.core.Preferences.Key<java.lang.Boolean>, param1: boolean, param2: any): any;
							setInt(param0: androidx.datastore.preferences.core.Preferences.Key<java.lang.Integer>, param1: number, param2: any): any;
							getPreferenceString(param0: string, param1: any): any;
							getPreferenceBoolean(param0: string, param1: any): any;
							getPreferenceInt(param0: string, param1: any): any;
							clear(param0: string): void;
						});
						public constructor();
						public setBoolean(param0: androidx.datastore.preferences.core.Preferences.Key<java.lang.Boolean>, param1: boolean, param2: any): any;
						public setString(param0: androidx.datastore.preferences.core.Preferences.Key<string>, param1: string, param2: any): any;
						public getPreferenceBoolean(param0: string, param1: any): any;
						public getPreferenceString(param0: string, param1: any): any;
						public getPreferenceInt(param0: string, param1: any): any;
						public setInt(param0: androidx.datastore.preferences.core.Preferences.Key<java.lang.Integer>, param1: number, param2: any): any;
						public clear(param0: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module cache {
					export class PreferenceStoreImpl extends com.paypal.pyplcheckout.common.cache.PreferenceStore {
						public static class: java.lang.Class<com.paypal.pyplcheckout.common.cache.PreferenceStoreImpl>;
						public convertToPreferenceKey(param0: java.util.HashMap<string,com.paypal.pyplcheckout.common.cache.PreferenceConstants.PreferenceType>): void;
						public constructor(param0: globalAndroid.content.Context);
						public getHashData(): java.util.HashMap<string,androidx.datastore.preferences.core.Preferences.Key<any>>;
						public setValueBoolean(param0: androidx.datastore.preferences.core.Preferences.Key<java.lang.Boolean>, param1: boolean): void;
						public setString(param0: androidx.datastore.preferences.core.Preferences.Key<string>, param1: string, param2: any): any;
						public getPreferenceInt(param0: string, param1: any): any;
						public getIntDataStorePref(param0: string): number;
						public setValueString(param0: androidx.datastore.preferences.core.Preferences.Key<string>, param1: string): void;
						public setHashData(param0: java.util.HashMap<string,androidx.datastore.preferences.core.Preferences.Key<any>>): void;
						public getBooleanDataStorePref(param0: string): boolean;
						public setBoolean(param0: androidx.datastore.preferences.core.Preferences.Key<java.lang.Boolean>, param1: boolean, param2: any): any;
						public getPreferenceBoolean(param0: string, param1: any): any;
						public getPreferenceString(param0: string, param1: any): any;
						public getStringDataStorePref(param0: string): string;
						public setInt(param0: androidx.datastore.preferences.core.Preferences.Key<java.lang.Integer>, param1: number, param2: any): any;
						public clear(param0: string): void;
						public setValueInt(param0: androidx.datastore.preferences.core.Preferences.Key<java.lang.Integer>, param1: number): void;
					}
					export module PreferenceStoreImpl {
						export class WhenMappings {
							public static class: java.lang.Class<com.paypal.pyplcheckout.common.cache.PreferenceStoreImpl.WhenMappings>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module cache {
					export class PreferenceStoreImpl_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.common.cache.PreferenceStoreImpl> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.common.cache.PreferenceStoreImpl_Factory>;
						public get(): com.paypal.pyplcheckout.common.cache.PreferenceStoreImpl;
						public static newInstance(param0: globalAndroid.content.Context): com.paypal.pyplcheckout.common.cache.PreferenceStoreImpl;
						public static create(param0: javax.inject.Provider<globalAndroid.content.Context>): com.paypal.pyplcheckout.common.cache.PreferenceStoreImpl_Factory;
						public constructor(param0: javax.inject.Provider<globalAndroid.content.Context>);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module cache {
					export class StringPreferenceConstants {
						public static class: java.lang.Class<com.paypal.pyplcheckout.common.cache.StringPreferenceConstants>;
						public static CACHE_PREFS: com.paypal.pyplcheckout.common.cache.StringPreferenceConstants;
						public static UUID_KEY: com.paypal.pyplcheckout.common.cache.StringPreferenceConstants;
						public static TRANSACTIONS_SESSIONS_KEYS: com.paypal.pyplcheckout.common.cache.StringPreferenceConstants;
						public static BUTTON_SESSION_ID: com.paypal.pyplcheckout.common.cache.StringPreferenceConstants;
						public static ORDER_ID: com.paypal.pyplcheckout.common.cache.StringPreferenceConstants;
						public static SPB_TOKEN: com.paypal.pyplcheckout.common.cache.StringPreferenceConstants;
						public static FB_SESSION_UID: com.paypal.pyplcheckout.common.cache.StringPreferenceConstants;
						public static STICKINESS_ID: com.paypal.pyplcheckout.common.cache.StringPreferenceConstants;
						public static ADD_SHIPPING: com.paypal.pyplcheckout.common.cache.StringPreferenceConstants;
						public static FULL_ADDRESS: com.paypal.pyplcheckout.common.cache.StringPreferenceConstants;
						public static STATE: com.paypal.pyplcheckout.common.cache.StringPreferenceConstants;
						public static POSTAL_CODE: com.paypal.pyplcheckout.common.cache.StringPreferenceConstants;
						public static CITY: com.paypal.pyplcheckout.common.cache.StringPreferenceConstants;
						public static SEARCH_SCREEN_TITLE: com.paypal.pyplcheckout.common.cache.StringPreferenceConstants;
						public static HINT_TITLE: com.paypal.pyplcheckout.common.cache.StringPreferenceConstants;
						public static SAVED_ADDRESS: com.paypal.pyplcheckout.common.cache.StringPreferenceConstants;
						public static COUNTRY_ID: com.paypal.pyplcheckout.common.cache.StringPreferenceConstants;
						public static MERCHANT_COUNTRY: com.paypal.pyplcheckout.common.cache.StringPreferenceConstants;
						public static FIREBASE_DB_INSTANCE_ID: com.paypal.pyplcheckout.common.cache.StringPreferenceConstants;
						public static FACILITATOR_ID: com.paypal.pyplcheckout.common.cache.StringPreferenceConstants;
						public static DOMAIN: com.paypal.pyplcheckout.common.cache.StringPreferenceConstants;
						public static FUNDING_SOURCE: com.paypal.pyplcheckout.common.cache.StringPreferenceConstants;
						public static ORDER_CAPTURE_URL: com.paypal.pyplcheckout.common.cache.StringPreferenceConstants;
						public static ORDER_AUTHORIZE_URL: com.paypal.pyplcheckout.common.cache.StringPreferenceConstants;
						public static ORDER_PATCH_URL: com.paypal.pyplcheckout.common.cache.StringPreferenceConstants;
						public static INTENT_DATA_URL: com.paypal.pyplcheckout.common.cache.StringPreferenceConstants;
						public static valueOf(param0: string): com.paypal.pyplcheckout.common.cache.StringPreferenceConstants;
						public static values(): androidNative.Array<com.paypal.pyplcheckout.common.cache.StringPreferenceConstants>;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module firebase {
					export module firebasedb {
						export class FailFunction {
							public static class: java.lang.Class<com.paypal.pyplcheckout.common.firebase.firebasedb.FailFunction>;
							/**
							 * Constructs a new instance of the com.paypal.pyplcheckout.common.firebase.firebasedb.FailFunction interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								fail(): void;
							});
							public constructor();
							public fail(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module firebase {
					export module firebasemodels {
						export class FirebaseModel {
							public static class: java.lang.Class<com.paypal.pyplcheckout.common.firebase.firebasemodels.FirebaseModel>;
							/**
							 * Constructs a new instance of the com.paypal.pyplcheckout.common.firebase.firebasemodels.FirebaseModel interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getMessageId(): string;
								setMessageId(param0: string): void;
								getJsonMessage(): string;
								setJsonMessage(param0: string): void;
							});
							public constructor();
							public getMessageId(): string;
							public setMessageId(param0: string): void;
							public setJsonMessage(param0: string): void;
							public getJsonMessage(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module firebase {
					export module firebasemodels {
						export class FirebaseRequestModel extends com.paypal.pyplcheckout.common.firebase.firebasemodels.FirebaseModel {
							public static class: java.lang.Class<com.paypal.pyplcheckout.common.firebase.firebasemodels.FirebaseRequestModel>;
							/**
							 * Constructs a new instance of the com.paypal.pyplcheckout.common.firebase.firebasemodels.FirebaseRequestModel interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getRequestId(): string;
								setRequestId(param0: string): void;
								getMessageId(): string;
								setMessageId(param0: string): void;
								getJsonMessage(): string;
								setJsonMessage(param0: string): void;
							});
							public constructor();
							public getRequestId(): string;
							public getMessageId(): string;
							public setMessageId(param0: string): void;
							public setJsonMessage(param0: string): void;
							public getJsonMessage(): string;
							public setRequestId(param0: string): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module firebase {
					export module firebasemodels {
						export class GetPropsRequest extends com.paypal.pyplcheckout.common.firebase.firebasemodels.FirebaseRequestModel {
							public static class: java.lang.Class<com.paypal.pyplcheckout.common.firebase.firebasemodels.GetPropsRequest>;
							public component2(): string;
							public copy(param0: string, param1: string, param2: string): com.paypal.pyplcheckout.common.firebase.firebasemodels.GetPropsRequest;
							public getMessageId(): string;
							public hashCode(): number;
							public setJsonMessage(param0: string): void;
							public getJsonMessage(): string;
							public toString(): string;
							public component3(): string;
							public component1(): string;
							public getRequestId(): string;
							public setMessageId(param0: string): void;
							public constructor(param0: string, param1: string, param2: string);
							public setRequestId(param0: string): void;
							public equals(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module instrumentation {
					export class AmplitudeApi {
						public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.AmplitudeApi>;
						public constructor(param0: com.paypal.pyplcheckout.utils.AmplitudeUtils, param1: okhttp3.OkHttpClient, param2: com.google.gson.Gson, param3: com.paypal.pyplcheckout.common.instrumentation.amplitude.models.DeviceInfo);
						public logEvent(param0: com.paypal.pyplcheckout.common.instrumentation.amplitude.models.AmplitudeEvent, param1: number, param2: any): any;
						public logEvent(param0: com.paypal.pyplcheckout.common.instrumentation.amplitude.models.AmplitudeSession, param1: string, param2: org.json.JSONObject, param3: any): any;
					}
					export module AmplitudeApi {
						export class Companion {
							public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.AmplitudeApi.Companion>;
							public getTAG(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module instrumentation {
					export class AmplitudeApiException {
						public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.AmplitudeApiException>;
						public getEvent(): com.paypal.pyplcheckout.common.instrumentation.amplitude.models.AmplitudeEvent;
						public constructor(param0: java.lang.Exception, param1: com.paypal.pyplcheckout.common.instrumentation.amplitude.models.AmplitudeEvent);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module instrumentation {
					export class AmplitudeApi_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.common.instrumentation.AmplitudeApi> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.AmplitudeApi_Factory>;
						public get(): com.paypal.pyplcheckout.common.instrumentation.AmplitudeApi;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.utils.AmplitudeUtils>, param1: javax.inject.Provider<okhttp3.OkHttpClient>, param2: javax.inject.Provider<com.google.gson.Gson>, param3: javax.inject.Provider<com.paypal.pyplcheckout.common.instrumentation.amplitude.models.DeviceInfo>);
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.utils.AmplitudeUtils>, param1: javax.inject.Provider<okhttp3.OkHttpClient>, param2: javax.inject.Provider<com.google.gson.Gson>, param3: javax.inject.Provider<com.paypal.pyplcheckout.common.instrumentation.amplitude.models.DeviceInfo>): com.paypal.pyplcheckout.common.instrumentation.AmplitudeApi_Factory;
						public static newInstance(param0: com.paypal.pyplcheckout.utils.AmplitudeUtils, param1: okhttp3.OkHttpClient, param2: com.google.gson.Gson, param3: com.paypal.pyplcheckout.common.instrumentation.amplitude.models.DeviceInfo): com.paypal.pyplcheckout.common.instrumentation.AmplitudeApi;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module instrumentation {
					export class AmplitudeManager {
						public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.AmplitudeManager>;
						public uploadFailedEvents(): void;
						public getLogger(): com.paypal.pyplcheckout.common.instrumentation.amplitude.logger.AmplitudeLogger;
						public constructor(param0: com.paypal.pyplcheckout.common.instrumentation.amplitude.logger.AmplitudeSdk, param1: com.paypal.pyplcheckout.common.instrumentation.amplitude.logger.AmplitudeService, param2: com.paypal.pyplcheckout.ab.featureflag.FeatureFlagManager);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module instrumentation {
					export class AmplitudeManager_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.common.instrumentation.AmplitudeManager> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.AmplitudeManager_Factory>;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.common.instrumentation.amplitude.logger.AmplitudeSdk>, param1: javax.inject.Provider<com.paypal.pyplcheckout.common.instrumentation.amplitude.logger.AmplitudeService>, param2: javax.inject.Provider<com.paypal.pyplcheckout.ab.featureflag.FeatureFlagManager>);
						public get(): com.paypal.pyplcheckout.common.instrumentation.AmplitudeManager;
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.common.instrumentation.amplitude.logger.AmplitudeSdk>, param1: javax.inject.Provider<com.paypal.pyplcheckout.common.instrumentation.amplitude.logger.AmplitudeService>, param2: javax.inject.Provider<com.paypal.pyplcheckout.ab.featureflag.FeatureFlagManager>): com.paypal.pyplcheckout.common.instrumentation.AmplitudeManager_Factory;
						public static newInstance(param0: com.paypal.pyplcheckout.common.instrumentation.amplitude.logger.AmplitudeSdk, param1: com.paypal.pyplcheckout.common.instrumentation.amplitude.logger.AmplitudeService, param2: com.paypal.pyplcheckout.ab.featureflag.FeatureFlagManager): com.paypal.pyplcheckout.common.instrumentation.AmplitudeManager;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module instrumentation {
					export class InstrumentationEvent {
						public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent>;
						public setFb_session_id(param0: string): void;
						public setEvent_name(param0: string): void;
						public set_tenant(param0: string): void;
						public getTransition_name(): string;
						public setSdkv(param0: string): void;
						public setEvent_source(param0: string): void;
						public getStage(): string;
						public setFlowtype(param0: string): void;
						public component56(): string;
						public component7(): string;
						public component26(): string;
						public getChannel(): string;
						public component46(): string;
						public component36(): string;
						public getEncr_cust_id(): string;
						public setPayload_sent(param0: string): void;
						public component65(): string;
						public setFallback_reason(param0: string): void;
						public component55(): string;
						public component16(): string;
						public component35(): string;
						public setSdk_environment(param0: string): void;
						public component6(): string;
						public component45(): string;
						public setEnv_name(param0: string): void;
						public setTenant_type(param0: string): void;
						public component1(): string;
						public getFallback_category(): string;
						public setTransition_name(param0: string): void;
						public getProduct(): string;
						public setBuyer_cntry(param0: string): void;
						public setMobile_app_version(param0: string): void;
						public getView_name(): string;
						public setBrowser_type(param0: string): void;
						public getEvent_type(): string;
						public getButton_session_id(): string;
						public getContext_type(): string;
						public getBuyer_cntry(): string;
						public getMobile_app_version(): string;
						public getInt_error_desc(): string;
						public setEncr_rcvr_id(param0: string): void;
						public setView_name(param0: string): void;
						public component5(): string;
						public component21(): string;
						public component61(): string;
						public component54(): string;
						public setApp_guid(param0: string): void;
						public getBuyer_type(): string;
						public component34(): string;
						public getParent_name(): string;
						public component14(): string;
						public setBuyer_type(param0: string): void;
						public component47(): string;
						public getMdvs(): string;
						public getFi_id(): string;
						public getState_name(): string;
						public getConnectivity_status(): string;
						public getFunding_source(): string;
						public component27(): java.lang.Long;
						public getT(): java.lang.Long;
						public getExperimentation_experience(): string;
						public setInfo_msg(param0: string): void;
						public setMapv(param0: string): void;
						public getComponent(): string;
						public getFb_session_id(): string;
						public getFallback_reason(): string;
						public getOrigin_screen(): string;
						public component25(): string;
						public getError_details(): string;
						public component9(): string;
						public setExt_error_code(param0: string): void;
						public getAuth_sdk_version(): string;
						public component52(): string;
						public component10(): string;
						public setContext_id(param0: string): void;
						public getPayload_sent(): string;
						public component23(): string;
						public getInfo_msg(): string;
						public setButton_session_id(param0: string): void;
						public setParent_name(param0: string): void;
						public component30(): string;
						public component32(): string;
						public component50(): string;
						public component12(): string;
						public getFallback_to(): string;
						public setChild_name(param0: string): void;
						public component43(): java.lang.Integer;
						public getBrowser_type(): string;
						public getEvent_name(): string;
						public getField_name(): string;
						public component41(): string;
						public setSdk_ver(param0: string): void;
						public setDestination_screen(param0: string): void;
						public getSdk_environment(): string;
						public getFallback_from(): string;
						public getEnv_name(): string;
						public getEvent_source(): string;
						public getButton_version(): string;
						public setButton_version(param0: string): void;
						public setProduct(param0: string): void;
						public setEncr_cust_id(param0: string): void;
						public setFallback_category(param0: string): void;
						public getChild_name(): string;
						public getMosv(): string;
						public component63(): string;
						public setError_type(param0: string): void;
						public getSdk_session_id(): string;
						public getToken(): string;
						public toString(): string;
						public getError_type(): string;
						public setError_details(param0: string): void;
						public getOrder_session_id(): string;
						public getContext_id(): string;
						public getAcct_cntry(): string;
						public setConnectivity_status(param0: string): void;
						public setOrigin_screen(param0: string): void;
						public getSdk_ver(): string;
						public setExperimentation_treatment(param0: string): void;
						public component28(): string;
						public component48(): string;
						public component18(): string;
						public component58(): string;
						public setFunding_source(param0: string): void;
						public getStartup_mechanism(): string;
						public component38(): string;
						public component4(): string;
						public setStartup_mechanism(param0: string): void;
						public getExperimentation_treatment(): string;
						public component3(): string;
						public setFallback_from(param0: string): void;
						public setUser_id(param0: string): void;
						public setContext_type(param0: string): void;
						public setStage(param0: string): void;
						public component29(): string;
						public setInt_error_code(param0: string): void;
						public setToken(param0: string): void;
						public component49(): string;
						public component2(): string;
						public component19(): string;
						public component59(): string;
						public getCorrelation_id(): string;
						public component39(): string;
						public getDestination_screen(): string;
						public component31(): string;
						public component51(): string;
						public component64(): string;
						public equals(param0: any): boolean;
						public component44(): string;
						public component11(): string;
						public copy(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string, param7: string, param8: string, param9: string, param10: string, param11: string, param12: string, param13: string, param14: string, param15: string, param16: string, param17: string, param18: string, param19: string, param20: string, param21: string, param22: string, param23: string, param24: string, param25: string, param26: java.lang.Long, param27: string, param28: string, param29: string, param30: string, param31: string, param32: string, param33: string, param34: string, param35: string, param36: string, param37: string, param38: string, param39: string, param40: string, param41: string, param42: java.lang.Integer, param43: string, param44: string, param45: string, param46: string, param47: string, param48: string, param49: string, param50: string, param51: string, param52: string, param53: string, param54: string, param55: string, param56: string, param57: string, param58: string, param59: string, param60: string, param61: string, param62: string, param63: string, param64: string): com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent;
						public component24(): string;
						public component17(): string;
						public component57(): string;
						public getOutcome(): string;
						public component8(): string;
						public component37(): string;
						public setExperimentation_experience(param0: string): void;
						public setEvent_type(param0: string): void;
						public getExt_error_code(): string;
						public setOutcome(param0: string): void;
						public setOrder_session_id(param0: string): void;
						public setT(param0: java.lang.Long): void;
						public get_tenant(): string;
						public getApp_name(): string;
						public setComponent(param0: string): void;
						public setMdvs(param0: string): void;
						public setApp_name(param0: string): void;
						public setFi_id(param0: string): void;
						public component15(): string;
						public getInt_error_code(): string;
						public hashCode(): number;
						public setState_name(param0: string): void;
						public getEncr_rcvr_id(): string;
						public getFlowtype(): string;
						public getDuration(): java.lang.Integer;
						public setField_name(param0: string): void;
						public component62(): string;
						public setFallback_to(param0: string): void;
						public component20(): string;
						public component53(): string;
						public component13(): string;
						public component33(): string;
						public getApp_guid(): string;
						public getMapv(): string;
						public getUser_id(): string;
						public setMosv(param0: string): void;
						public setAcct_cntry(param0: string): void;
						public setSdk_session_id(param0: string): void;
						public component40(): string;
						public component42(): string;
						public component60(): string;
						public setCorrelation_id(param0: string): void;
						public getSdkv(): string;
						public setDuration(param0: java.lang.Integer): void;
						public component22(): string;
						public setInt_error_desc(param0: string): void;
						public setAuth_sdk_version(param0: string): void;
						public getTenant_type(): string;
						public setChannel(param0: string): void;
					}
					export module InstrumentationEvent {
						export class Companion {
							public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent.Companion>;
						}
						export class InstrumentationEventBuilder {
							public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent.InstrumentationEventBuilder>;
							public component13(): string;
							public component7(): string;
							public component23(): string;
							public fallBackFrom(param0: string): com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent.InstrumentationEventBuilder;
							public component10(): string;
							public component16(): string;
							public intErrorCode(param0: string): com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent.InstrumentationEventBuilder;
							public destinationScreen(param0: string): com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent.InstrumentationEventBuilder;
							public component1(): string;
							public getEventType(): string;
							public fallBackReason(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason): com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent.InstrumentationEventBuilder;
							public getExtErrorCode(): string;
							public getComponent(): string;
							public errorMessage(param0: string): com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent.InstrumentationEventBuilder;
							public setEventType(param0: string): void;
							public setParentName(param0: string): void;
							public component26(): string;
							public extErrorCode(param0: string): com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent.InstrumentationEventBuilder;
							public childName(param0: string): com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent.InstrumentationEventBuilder;
							public fallBackTo(param0: string): com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent.InstrumentationEventBuilder;
							public setDestinationScreen(param0: string): void;
							public eventType(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventType): com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent.InstrumentationEventBuilder;
							public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string, param7: string, param8: string, param9: string, param10: string, param11: string, param12: string, param13: string, param14: string, param15: string, param16: string, param17: string, param18: string, param19: string, param20: string, param21: string, param22: string, param23: string, param24: string, param25: string, param26: string, param27: string, param28: string);
							public originScreen(param0: string): com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent.InstrumentationEventBuilder;
							public errorType(param0: string): com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent.InstrumentationEventBuilder;
							public getStateName(): string;
							public setExperimentationExperience(param0: string): void;
							public getIntErrorCode(): string;
							public copy(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string, param7: string, param8: string, param9: string, param10: string, param11: string, param12: string, param13: string, param14: string, param15: string, param16: string, param17: string, param18: string, param19: string, param20: string, param21: string, param22: string, param23: string, param24: string, param25: string, param26: string, param27: string, param28: string): com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent.InstrumentationEventBuilder;
							public getFallbackFrom(): string;
							public equals(param0: any): boolean;
							public setErrorType(param0: string): void;
							public getTransitionName(): string;
							public getOriginScreen(): string;
							public correlationId(param0: string): com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent.InstrumentationEventBuilder;
							public component(param0: string): com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent.InstrumentationEventBuilder;
							public authSdkVersion(param0: string): com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent.InstrumentationEventBuilder;
							public setFallbackReason(param0: string): void;
							public viewName(param0: string): com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent.InstrumentationEventBuilder;
							public getFallbackCategory(): string;
							public toString(): string;
							public component22(): string;
							public component12(): string;
							public appGuidInfo(param0: string): com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent.InstrumentationEventBuilder;
							public experimentationExperience(param0: string): com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent.InstrumentationEventBuilder;
							public setViewName(param0: string): void;
							public setComponent(param0: string): void;
							public setExperimentationTreatment(param0: string): void;
							public setEnv(param0: string): void;
							public constructor();
							public getErrorType(): string;
							public setIntErrorCode(param0: string): void;
							public build(): com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent;
							public component21(): string;
							public setInfoMsg(param0: string): void;
							public getChildName(): string;
							public getEnv(): string;
							public getOutcome(): string;
							public getInfoMsg(): string;
							public getParentName(): string;
							public setCorrelation_id(param0: string): void;
							public setExtErrorCode(param0: string): void;
							public setChildName(param0: string): void;
							public setTransitionName(param0: string): void;
							public getFallbackReason(): string;
							public setErrorDetails(param0: string): void;
							public component20(): string;
							public setFallbackFrom(param0: string): void;
							public getViewName(): string;
							public component11(): string;
							public getExperimentationExperience(): string;
							public fieldName(param0: string): com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent.InstrumentationEventBuilder;
							public fallBackCategory(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackCategory): com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent.InstrumentationEventBuilder;
							public setErrorMsg(param0: string): void;
							public setFieldName(param0: string): void;
							public payloadSent(param0: string): com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent.InstrumentationEventBuilder;
							public setOutcome(param0: string): void;
							public infoMessage(param0: string): com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent.InstrumentationEventBuilder;
							public setPayloadSent(param0: string): void;
							public getFallbackTo(): string;
							public errorDetails(param0: string): com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent.InstrumentationEventBuilder;
							public stateName(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName): com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent.InstrumentationEventBuilder;
							public component9(): string;
							public component15(): string;
							public component25(): string;
							public getErrorMsg(): string;
							public setFallbackTo(param0: string): void;
							public component8(): string;
							public experimentationTreatment(param0: string): com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent.InstrumentationEventBuilder;
							public component14(): string;
							public component24(): string;
							public setStateName(param0: string): void;
							public getPayloadSent(): string;
							public transitionName(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName): com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent.InstrumentationEventBuilder;
							public getAuthSdkVersion(): string;
							public setTransactionChannel(param0: string): void;
							public setAuthSdkVersion(param0: string): void;
							public parentName(param0: string): com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent.InstrumentationEventBuilder;
							public hashCode(): number;
							public getDestinationScreen(): string;
							public getTransactionChannel(): string;
							public getErrorDetails(): string;
							public component3(): string;
							public setFallbackCategory(param0: string): void;
							public component27(): string;
							public getExperimentationTreatment(): string;
							public setOriginScreen(param0: string): void;
							public component17(): string;
							public component6(): string;
							public getCorrelation_id(): string;
							public getFieldName(): string;
							public getAppGuidInfo(): string;
							public component2(): string;
							public setAppGuidInfo(param0: string): void;
							public component28(): string;
							public component18(): string;
							public transitionName(param0: string): com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent.InstrumentationEventBuilder;
							public component5(): string;
							public outcome(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome): com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent.InstrumentationEventBuilder;
							public component19(): string;
							public component29(): string;
							public component4(): string;
						}
						export module InstrumentationEventBuilder {
							export class AppBuildModel {
								public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent.InstrumentationEventBuilder.AppBuildModel>;
								public static INSTANCE: com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent.InstrumentationEventBuilder.AppBuildModel;
								public buildModel(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module instrumentation {
					export class InstrumentationSession {
						public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.InstrumentationSession>;
						public constructor();
						public getSdkSessionId(): string;
						public getOrderSessionId(): string;
						public resetOrderSessionId(): void;
						public resetSdkSessionId(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module instrumentation {
					export class PEnums {
						public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.PEnums>;
						public static INSTANCE: com.paypal.pyplcheckout.common.instrumentation.PEnums;
					}
					export module PEnums {
						export class ErrorType {
							public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.PEnums.ErrorType>;
							public static INFO: com.paypal.pyplcheckout.common.instrumentation.PEnums.ErrorType;
							public static FATAL: com.paypal.pyplcheckout.common.instrumentation.PEnums.ErrorType;
							public static WARNING: com.paypal.pyplcheckout.common.instrumentation.PEnums.ErrorType;
							public static valueOf(param0: string): com.paypal.pyplcheckout.common.instrumentation.PEnums.ErrorType;
							public toString(): string;
							public static values(): androidNative.Array<com.paypal.pyplcheckout.common.instrumentation.PEnums.ErrorType>;
						}
						export class EventCode {
							public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode>;
							public static E101: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E102: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E103: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E104: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E105: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E106: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E107: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E108: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E109: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E110: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E111: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E112: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E113: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E114: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E115: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E116: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E118: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E119: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E121: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E122: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E130: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E135: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E136: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E137: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E138: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E139: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E140: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E141: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E142: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E143: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E144: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E145: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E146: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E147: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E148: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E149: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E150: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E151: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E152: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E153: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E154: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E155: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E156: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E157: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E158: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E159: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E160: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E161: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E162: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E163: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E164: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E165: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E166: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E167: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E168: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E169: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E170: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E171: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E210: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E211: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E212: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E213: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E214: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E215: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E216: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E217: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E218: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E219: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E220: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E221: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E222: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E223: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E224: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E225: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E226: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E227: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E228: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E229: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E230: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E231: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E232: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E233: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E301: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E302: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E303: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E304: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E305: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E403: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E404: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E405: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E406: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E407: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E408: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E501: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E502: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E503: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E504: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E505: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E506: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E511: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E513: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E514: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E515: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E516: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E517: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E518: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E521: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E530: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E531: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E558: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E559: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E560: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E561: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E562: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E563: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E564: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E565: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E566: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E567: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E568: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E569: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E570: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E571: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E572: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E573: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E574: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E575: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E576: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E577: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E578: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E579: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E580: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E581: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E582: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E583: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E584: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E585: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E586: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E587: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E588: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E589: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E590: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E591: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E592: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E593: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E594: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E595: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E596: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E597: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E598: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E599: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E600: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E601: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E602: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E603: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E604: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E605: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E606: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E607: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E608: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E609: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E610: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E611: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E612: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E613: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E614: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E615: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E616: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E617: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E618: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E619: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E620: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E621: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E622: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E623: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E624: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E625: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E626: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E627: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E628: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E629: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E630: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E631: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E632: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E633: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E634: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E635: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E636: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E637: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E638: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E639: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E641: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E642: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E643: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E644: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E645: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E646: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E647: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E648: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E649: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E650: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E651: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static E000: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public static valueOf(param0: string): com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public setEventString(param0: string): com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
							public getExternalCodeString(): string;
							public getInternalCodeString(): string;
							public static values(): androidNative.Array<com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode>;
							public toPublicString(): string;
							public toString(): string;
						}
						export class EventType {
							public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.PEnums.EventType>;
							public static IM: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventType;
							public static DE: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventType;
							public static ERR: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventType;
							public static TR: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventType;
							public static CL: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventType;
							public static SC: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventType;
							public static FALLBACK: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventType;
							public static STATUS: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventType;
							public static valueOf(param0: string): com.paypal.pyplcheckout.common.instrumentation.PEnums.EventType;
							public static values(): androidNative.Array<com.paypal.pyplcheckout.common.instrumentation.PEnums.EventType>;
							public toString(): string;
						}
						export class FallbackCategory {
							public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackCategory>;
							public static FEATURE_NOT_SUPPORTED: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackCategory;
							public static CHECKOUT_SESSION_CONTINGENCIES: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackCategory;
							public static INELIGIBLE_TRAFFIC: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackCategory;
							public static DATA_PARSING_ERROR: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackCategory;
							public static AUTH: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackCategory;
							public static CHECKOUT: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackCategory;
							public static CHECKOUT_ERRORS: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackCategory;
							public static USER_ACTION_NOT_SUPPORTED_NATIVE: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackCategory;
							public static THREE_DS: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackCategory;
							public static STRONG_CUSTOMER_AUTHENTICATION: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackCategory;
							public static AB_TEST: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackCategory;
							public static USER_CHOICE: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackCategory;
							public static values(): androidNative.Array<com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackCategory>;
							public static valueOf(param0: string): com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackCategory;
							public toString(): string;
						}
						export class FallbackDestination {
							public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackDestination>;
							public static WEB: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackDestination;
							public static MERCHANT_APP: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackDestination;
							public static values(): androidNative.Array<com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackDestination>;
							public toString(): string;
							public static valueOf(param0: string): com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackDestination;
						}
						export class FallbackReason {
							public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason>;
							public static POJO_ERROR: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason;
							public static CHECKOUT_RESPONSE_ERRORS: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason;
							public static UNSUPPORTED_FLOW: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason;
							public static PAYMENT_CONTINGENCIES: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason;
							public static CANCEL_URL: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason;
							public static INELIGIBLE_TRAFFIC: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason;
							public static NON_USER_CANCELLED_FLOW: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason;
							public static UNKNOWN_CHECKOUT_ISSUE: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason;
							public static UNKNOWN_ELIGIBILITY_ISSUE: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason;
							public static CURRENCY_CONVERT_FAIL: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason;
							public static USER_CHECKOUT_FAIL_PAYLOAD_SERVICE: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason;
							public static FIREBASE_TOKEN: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason;
							public static USER_CHECKOUT_FAIL_FINISH_SERVICE: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason;
							public static USER_CHECKOUT_COMPLETED: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason;
							public static USER_WEB_FLOW: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason;
							public static HERMES_WEB: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason;
							public static POST_APPROVE_INTERCEPT_FAILURE: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason;
							public static EMPTY_RETURN_URL: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason;
							public static THREE_DS_ERROR: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason;
							public static THREE_DS_CHALLENGE_IN_3P: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason;
							public static STRONG_CUSTOMER_AUTHENTICATION_FAILURE: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason;
							public static STRONG_CUSTOMER_AUTHENTICATION_STEPUP_NOT_IMPLEMENTED: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason;
							public static COULD_NOT_RESOLVE_STRONG_CUSTOMER_AUTHENTICATION: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason;
							public static STRONG_CUSTOMER_AUTHENTICATION_CLEARED_FAILURE: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason;
							public static CLIENT_CONFIG_ERROR: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason;
							public static USER_ESCAPE_PATH: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason;
							public static PAY_WITH_CRYPTO_RAMP_FAILED: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason;
							public static NATIVE_KILL_SWITCH_FAILED: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason;
							public static AB_TEST: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason;
							public setFallbackReason(param0: string): com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason;
							public static valueOf(param0: string): com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason;
							public static values(): androidNative.Array<com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason>;
							public toString(): string;
						}
						export class FundingSource {
							public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.PEnums.FundingSource>;
							public static PAYPAL: com.paypal.pyplcheckout.common.instrumentation.PEnums.FundingSource;
							public static VENMO: com.paypal.pyplcheckout.common.instrumentation.PEnums.FundingSource;
							public static valueOf(param0: string): com.paypal.pyplcheckout.common.instrumentation.PEnums.FundingSource;
							public static values(): androidNative.Array<com.paypal.pyplcheckout.common.instrumentation.PEnums.FundingSource>;
							public toString(): string;
						}
						export class LogType {
							public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.PEnums.LogType>;
							public static FPTI: com.paypal.pyplcheckout.common.instrumentation.PEnums.LogType;
							public static CAL: com.paypal.pyplcheckout.common.instrumentation.PEnums.LogType;
							public static valueOf(param0: string): com.paypal.pyplcheckout.common.instrumentation.PEnums.LogType;
							public toString(): string;
							public static values(): androidNative.Array<com.paypal.pyplcheckout.common.instrumentation.PEnums.LogType>;
						}
						export class Outcome {
							public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome>;
							public static SELECTED: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public static UNSELECTED: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public static CLICKED: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public static DISABLED: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public static ENABLED: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public static SHOWN: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public static ATTEMPTED: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public static ELIGIBLE: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public static INELIGIBLE: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public static SUCCEEDED: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public static SUCCESS: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public static SWIPELEFT: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public static SWIPERIGHT: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public static FAILED: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public static FAILURE: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public static CANCELLED: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public static APPROVED: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public static BACK_BUTTON: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public static CLOSE_BUTTON: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public static INTERACTED: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public static TIMEOUT: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public static DISCONNECTED: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public static DARK: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public static LIGHT: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public static UPDATED: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public static BUTTON_ID_OBTAINED: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public static BUTTON_ID_NOT_OBTAINED: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public static SOURCE_APP_IDENTIFIED: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public static FIRST_PARTY: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public static THIRD_PARTY: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public static BACKGROUNDED: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public static FOREGROUNDED: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public static EC_TOKEN_CHECKED: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public static BUTTON_SESSION_ID_CHECKED: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public static REDIRECT: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public static POPUP_FLOW: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public static FIREBASE_FLOW: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public static CUSTOM_OUTCOME: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public static MERCHANT_CANCELED: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public static CACHE_STORED: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public static PARSED: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public static STARTED: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public static LOADING: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public static FINISHED: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public static values(): androidNative.Array<com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome>;
							public static valueOf(param0: string): com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public setOutcome(param0: string): com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome;
							public toString(): string;
						}
						export class PayPalChannelInfo {
							public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.PEnums.PayPalChannelInfo>;
							public static NATIVE: com.paypal.pyplcheckout.common.instrumentation.PEnums.PayPalChannelInfo;
							public static MOBILE_TO_WEB: com.paypal.pyplcheckout.common.instrumentation.PEnums.PayPalChannelInfo;
							public static DESKTOP_TO_MOBILE: com.paypal.pyplcheckout.common.instrumentation.PEnums.PayPalChannelInfo;
							public static values(): androidNative.Array<com.paypal.pyplcheckout.common.instrumentation.PEnums.PayPalChannelInfo>;
							public toString(): string;
							public static valueOf(param0: string): com.paypal.pyplcheckout.common.instrumentation.PEnums.PayPalChannelInfo;
						}
						export module PayPalChannelInfo {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.PEnums.PayPalChannelInfo.Companion>;
								public value(param0: string): com.paypal.pyplcheckout.common.instrumentation.PEnums.PayPalChannelInfo;
							}
						}
						export class Stage {
							public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.PEnums.Stage>;
							public static PREPARING_AUTH: com.paypal.pyplcheckout.common.instrumentation.PEnums.Stage;
							public static AUTH_SHOWN: com.paypal.pyplcheckout.common.instrumentation.PEnums.Stage;
							public static NATIVE_BEGIN: com.paypal.pyplcheckout.common.instrumentation.PEnums.Stage;
							public static FIREBASE: com.paypal.pyplcheckout.common.instrumentation.PEnums.Stage;
							public static WITH_PROPS: com.paypal.pyplcheckout.common.instrumentation.PEnums.Stage;
							public static LSAT_UPGRADED: com.paypal.pyplcheckout.common.instrumentation.PEnums.Stage;
							public static ELIGIBLE: com.paypal.pyplcheckout.common.instrumentation.PEnums.Stage;
							public static PAYSHEET_SHOWN: com.paypal.pyplcheckout.common.instrumentation.PEnums.Stage;
							public static WEB_FALLBACK: com.paypal.pyplcheckout.common.instrumentation.PEnums.Stage;
							public static NATIVE_FALLBACK: com.paypal.pyplcheckout.common.instrumentation.PEnums.Stage;
							public static SHUTDOWN: com.paypal.pyplcheckout.common.instrumentation.PEnums.Stage;
							public static APPROVING_CHECKOUT: com.paypal.pyplcheckout.common.instrumentation.PEnums.Stage;
							public static THREE_DS_V1: com.paypal.pyplcheckout.common.instrumentation.PEnums.Stage;
							public static THREE_DS_V2: com.paypal.pyplcheckout.common.instrumentation.PEnums.Stage;
							public static THREE_DS: com.paypal.pyplcheckout.common.instrumentation.PEnums.Stage;
							public static FINISHING: com.paypal.pyplcheckout.common.instrumentation.PEnums.Stage;
							public static APPROVING_WEB_CHECKOUT: com.paypal.pyplcheckout.common.instrumentation.PEnums.Stage;
							public static SWITCHING_TO_MERCHANT: com.paypal.pyplcheckout.common.instrumentation.PEnums.Stage;
							public static values(): androidNative.Array<com.paypal.pyplcheckout.common.instrumentation.PEnums.Stage>;
							public toString(): string;
							public static valueOf(param0: string): com.paypal.pyplcheckout.common.instrumentation.PEnums.Stage;
						}
						export class StartCheckoutKeys {
							public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.PEnums.StartCheckoutKeys>;
							public static BUTTON_SESSION_ID: com.paypal.pyplcheckout.common.instrumentation.PEnums.StartCheckoutKeys;
							public static STICKINESS_ID: com.paypal.pyplcheckout.common.instrumentation.PEnums.StartCheckoutKeys;
							public static FB_SESSION_UID: com.paypal.pyplcheckout.common.instrumentation.PEnums.StartCheckoutKeys;
							public static PAGE_URL: com.paypal.pyplcheckout.common.instrumentation.PEnums.StartCheckoutKeys;
							public static TOKEN: com.paypal.pyplcheckout.common.instrumentation.PEnums.StartCheckoutKeys;
							public static WEB_CHECKOUT_URL: com.paypal.pyplcheckout.common.instrumentation.PEnums.StartCheckoutKeys;
							public static MESSAGE_DATA: com.paypal.pyplcheckout.common.instrumentation.PEnums.StartCheckoutKeys;
							public static BUTTON_VERSION: com.paypal.pyplcheckout.common.instrumentation.PEnums.StartCheckoutKeys;
							public static ORDER_ID: com.paypal.pyplcheckout.common.instrumentation.PEnums.StartCheckoutKeys;
							public static FACILITATOR_ACCESS_TOKEN: com.paypal.pyplcheckout.common.instrumentation.PEnums.StartCheckoutKeys;
							public static FORCE_ELIGIBLE: com.paypal.pyplcheckout.common.instrumentation.PEnums.StartCheckoutKeys;
							public static COMMIT: com.paypal.pyplcheckout.common.instrumentation.PEnums.StartCheckoutKeys;
							public static USER_ACTION: com.paypal.pyplcheckout.common.instrumentation.PEnums.StartCheckoutKeys;
							public static FUNDING_SOURCE: com.paypal.pyplcheckout.common.instrumentation.PEnums.StartCheckoutKeys;
							public static ENABLE_FUNDING: com.paypal.pyplcheckout.common.instrumentation.PEnums.StartCheckoutKeys;
							public static DB_INSTANCE_ID: com.paypal.pyplcheckout.common.instrumentation.PEnums.StartCheckoutKeys;
							public static FACILITATOR_CLIENT_ID: com.paypal.pyplcheckout.common.instrumentation.PEnums.StartCheckoutKeys;
							public static DOMAIN: com.paypal.pyplcheckout.common.instrumentation.PEnums.StartCheckoutKeys;
							public static CHANNEL: com.paypal.pyplcheckout.common.instrumentation.PEnums.StartCheckoutKeys;
							public static BUYER_LANGUAGE: com.paypal.pyplcheckout.common.instrumentation.PEnums.StartCheckoutKeys;
							public static BUYER_IP_COUNTRY: com.paypal.pyplcheckout.common.instrumentation.PEnums.StartCheckoutKeys;
							public toString(): string;
							public static values(): androidNative.Array<com.paypal.pyplcheckout.common.instrumentation.PEnums.StartCheckoutKeys>;
							public static valueOf(param0: string): com.paypal.pyplcheckout.common.instrumentation.PEnums.StartCheckoutKeys;
						}
						export class StartupMechanism {
							public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.PEnums.StartupMechanism>;
							public static NSPB: com.paypal.pyplcheckout.common.instrumentation.PEnums.StartupMechanism;
							public static MERCHANT: com.paypal.pyplcheckout.common.instrumentation.PEnums.StartupMechanism;
							public static WSPB: com.paypal.pyplcheckout.common.instrumentation.PEnums.StartupMechanism;
							public static valueOf(param0: string): com.paypal.pyplcheckout.common.instrumentation.PEnums.StartupMechanism;
							public toString(): string;
							public static values(): androidNative.Array<com.paypal.pyplcheckout.common.instrumentation.PEnums.StartupMechanism>;
						}
						export class StateName {
							public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName>;
							public static SDK_START: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName;
							public static REVIEW: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName;
							public static NATIVE_SPB_CONTAINER: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName;
							public static PAY_LATER: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName;
							public static PAYPAL_CREDIT: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName;
							public static PAYPAL: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName;
							public static CURRENCY_CONVERSION: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName;
							public static SHIPPING: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName;
							public static SHIPPING_CALLBACK: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName;
							public static SHIPPING_OPTION: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName;
							public static SHIPPING_METHODS: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName;
							public static FETCH_CART_INFO: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName;
							public static SHIP_IT: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName;
							public static PICK_IT_UP: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName;
							public static READY: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName;
							public static PAYLOAD_SENT: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName;
							public static PAYLOAD_RECEIVED: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName;
							public static USER_PROFILE: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName;
							public static STARTUP: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName;
							public static SHUTDOWN: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName;
							public static NXO_PRE_TRIGGER: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName;
							public static UTILS: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName;
							public static THREE_DS: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName;
							public static STRONG_CUSTOMER_AUTHENTICATION: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName;
							public static EXTERNAL_LOG: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName;
							public static AB: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName;
							public static ADD_SHIPPING: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName;
							public static NATIVE_ADD_CARD: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName;
							public static NETWORK_CONNECTIVITY: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName;
							public static POST_REVIEW: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName;
							public static OVER_CAPTURE: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName;
							public static CUSTOM_STATE_NAME: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName;
							public static PAY_WITH_CRYPTO: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName;
							public static BRAINTREE: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName;
							public static NONE: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName;
							public static valueOf(param0: string): com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName;
							public static values(): androidNative.Array<com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName>;
							public toString(): string;
							public setStateName(param0: string): com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName;
						}
						export class TransitionName {
							public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName>;
							public static FINISH_FETCHING_CHECKOUT_SESSION: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static STARTED_PRE_REVIEW_CALLS: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static STARTED_POST_REVIEW_CALLS: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static STARTED_POST_APPROVE_CALLS: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static FINISHED_PRE_REVIEW_CALLS: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static FINISHED_POST_REVIEW_CALLS: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static FINISHED_POST_APPROVE_CALLS: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static REVIEW_YOUR_INFORMATION_SCREEN_SHOWN: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static PROFILE_PICTURE_TAPPED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static FUNDING_INSTRUMENT_TAPPED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static PAYMENT_RIGHTSANDPOLICIES_CLICKED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static PAYMENT_POLICIES_CLICKED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static PAYMENT_TERMS_CLICKED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static PRIVACY_LINK_CLICKED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static APPROVE_PAYMENT_PATH_CHOICE: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static LOGOUT_CLICKED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static RETURN_TO_PROVIDER: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static PAYMENT_SUBMITTED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static PAYMENT_OUTCOME: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static ADD_FI_TAPPED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static CURRENCY_CONVERSION_OPTIONS_CLICKED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static CARD_PREFERENCE_ACTIVATED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static CARD_PREFERENCE_CLICKED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static CARD_PREFERENCE_DEACTIVATED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static FI_SCROLL_LEFT: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static FI_SCROLL_RIGHT: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static CURRENCY_CONVERSION_VIEW_SHOWN: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static CURRENCY_OPTIONS_SHOWN: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static CURRENCY_OPTION_TAPPED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static CURRENCY_SELECTION_SUBMITTED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static CURRENCY_CONVERSION_RESPONSE: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static SHIPPING_VIEW_SHOWN: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static SHIPPING_ADDRESS_SELECTED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_XO_ENTRY_NOT_STARTED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_XO_ENTRY: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_XO_APP_INITIALIZATION: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_XO_TRIGGERED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_XO_START: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_XO_AUTH_ATTEMPTED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_XO_POST_AUTH: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_XO_AUTH_RESPONSE: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_XO_POST_AUTH_ELIGIBILITY_CHECK: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_XO_ELIGIBILITY_RESPONSE: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_XO_FLOW_COMPLETION: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_XO_ELIGIBILITY_AUTO_AUTH: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_XO_ELIGIBILITY_PARAMS_ERROR: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_XO_TRANSITION_TO_WEB_AUTO_AUTH: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_XO_LSAT_UPGRADE_REQUEST: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_XO_POST_LSAT_UPGRADE_REQUEST: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_XO_POST_LSAT_UPGRADE_TOKEN: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_XO_POST_LSAT_CREATE_TOKEN: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_XO_FB_PROCESS_STARTED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_XO_FB_TOKEN_RECEIVED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_XO_FB_CUSTOM_TOKEN_SIGNIN: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_XO_FB_PROPS_ACQUIRED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_XO_FB_PROPS_PROCESSED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_XO_FB_COMMUNICATION_FAILED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_XO_FB_CONNECTION_ONLINE: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_XO_FB_CONNECTION_OFFLINE: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_XO_FB_CONNECTION_CANCELLED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_XO_CTA_BUTTON_READY: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_XO_ORDER_RESPONSE: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_XO_AUTH_TYPE_CHOSEN: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_XO_CHECKOUT_ON_APPROVE: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_XO_RTDB_ONERROR: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_XO_CHECKOUT_FINISH_RESPONSE: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_XO_SPB_ON_CANCELLED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_XO_COMPLETE_ON_RESPONSE: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_XO_NULL_PAYER_ID: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_ADD_CARD: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_ADD_SHIPPING: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static FALLBACK_TO_WEB: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static LOAD_CCT_VIEW: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static FALLBACK_TO_NATIVE: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static FIREBASE_PAYLOAD_SENT: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static FIREBASE_LISTENER: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_XO_EXIT: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static ADDRESS_BOOK_TO_WEB: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NAVIGATE_TO_ADDRESS_BOOK: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static ADDRESS_BOOK_MULTI_TAP: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static ADD_SHIPPING_DIALOG: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static ADD_CARD_DIALOG: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static PAYPAL_CREDIT_DIALOG: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static GLOBAL_PAY_LATER_DIALOG: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static ADD_SHIPPING_ADDRESS_API: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static SOURCE_APP_IDENTIFIED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static DUPLICATE_EC_TOKEN: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static DUPLICATE_BUTTON_SESSION_ID: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static DB_INSTANCE_IDENTIFIED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static SHOW_FINAL_CHECKOUT_ANIMATION: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static CACHE: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static FIRED_FINISH_FINAL_CHECKOUT_ANIMATION: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static LISTENED_FINISH_FINAL_CHECKOUT_ANIMATION: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static INITIALIZATION_CALLBACK_REQUEST: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NETWORK_CONNECTIVITY_LOST: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static CHANGE_CTA_LABELS_MOBILE_XO: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static STRONG_CUSTOMER_AUTHENTICATION_SHOWN: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static STRONG_CUSTOMER_AUTHENTICATION_COMPLETE: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static STRONG_CUSTOMER_AUTHENTICATION_CLEARED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static WALLET_AUTH_ATTEMPTED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static WALLET_AUTH_RESPONSE: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static WALLET_GET_USER_ACCESS_TOKEN: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static WALLET_USER_LOGOUT: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static BALANCE_VIEW_SHOWN: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static USER_PROFILE_SHOWN: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static USER_PROFILE_IMAGE_SHOWN: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static USER_INITIALS_SHOWN: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static CARD_CLASSIFICATION: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static GRAPH_QL_PAYLOAD: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static BALANCE_TOGGLE_SHOWN: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static BALANCE_TOGGLE_HIDDEN: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static ADD_CARD_BTN_SHOWN_PAYNOW: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static ADD_CARD_BTN_SHOWN_CONTINUE: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static CART_DETAILS_ARROW_SHOWN: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static INVOICE_SUMMARY_SHOWN: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static CAROUSEL_SHOWN: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static SHIPPING_ADDRESS_UPDATED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static DARK_THEME: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static GLOBAL_PAY_LATER_VIEW_SHOWN: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static PAYPAL_CREDIT_VIEW_SHOWN: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static CART_PARAM_CONVERTER: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static SHIPPING_CHANGE_TAPPED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static SHIPPING_CHANGE_TAPPED_FAILED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static ADD_SHIPPING_ADDRESS_CLICKED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static CLICKED_OUTSIDE_DIALOG: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static CLICKED_LOGOUT_DIALOG: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static APP_BACKGROUNDED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static APP_FOREGROUNDED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static EXPANDED_PROD_DETAILS_SHOWN: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static CLICKED_TO_EXPAND_PROD_DETS: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static CLICKED_TO_MIN_PROD_DETS: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static CURRENCY_CONVERSION_VIEW_UPDATED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static CLIENT_CONFIG_UPDATE: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static PAYPAL_CREDIT_CTA_CLICKED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static GLOBAL_PAY_LATER_CTA_CLICKED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static ERROR_DIALOG_FALLBACK_CLICKED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static ESCAPE_PATH_CLICKED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static VALIDATE_ADDRESS_RESPONSE: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static CRYPTO_HOW_IT_WORKS_CLICKED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static CRYPTO_RATES_AND_FEES_CLICKED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static CRYPTO_TERMS_SERVICE_CLICKED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static CRYPTO_CONSENT_ACCEPTED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static CRYPTO_LEGAL_PAGE_LOADING: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static CRYPTO_LEGAL_PAGE_SHOWN: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static CRYPTO_RATE_VIEW_SHOWN: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static CRYPTO_QUOTE_CALL: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static SHIPPING_CALLBACK_BLOCKING_BEHAVIOR: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static SHIP_IT_CLICKED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static INVALID_SHIPPING_ADDRESS_CTA_BUTTON_TAPPED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static INVALID_SHIPPING_METHOD_CTA_BUTTON_TAPPED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static CREATE_ORDER_EXECUTED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static ORDER_CAPTURE_EXECUTED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static ORDER_AUTHORIZE_EXECUTED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static FUNDING_ELIGIBILITY_EXECUTED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static CONNECTIVITY_HANDLER_INITIALIZED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static ELMO_PROCESS_CHECK: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static THREE_DS_ONE_FLOW_ENTERED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static THREE_DS_TWO_FLOW_ENTERED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static THREE_DS_JWT_QUERY_STARTED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static THREE_DS_JWT_QUERY_FINISHED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static THREE_DS_DDC_STARTED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static THREE_DS_DDC_FINISHED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static THREE_DS_LOOKUP_STARTED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static THREE_DS_LOOKUP_FINISHED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static THREE_DS_AUTHENTICATE_STARTED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static THREE_DS_AUTHENTICATE_FINISHED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static THREE_DS_CARDINAL_STEP_UP_STARTED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static THREE_DS_CARDINAL_STEP_UP_FINISHED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static THREE_DS_RESOLVE_CONTINGENCY_STARTED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static THREE_DS_RESOLVE_CONTINGENCY_FINISHED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static THREE_DS_GENERIC_EXCEPTION: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static THREE_DS_CONTINGENCY_FLOW_STARTED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static THREE_DS_CONTINGENCY_FLOW_FINISHED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static THREE_DS_FUNDING_INSTRUMENT_DISABLED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static THREE_DS_USER_CANCELLED_STEP_UP: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static THREE_DS_10_CONTINGENCY_ENCOUNTERED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static THREE_DS_JWT_STEP_QUERY_STARTED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static THREE_DS_JWT_STEP_QUERY_FINISHED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_ADD_CARD_SHOWN: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_ADD_CARD_INTERACTION: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_ADD_CARD_ATTEMPTED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_ADD_CARD_RESPONSE: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_ADD_CARD_THREE_DS_STARTED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_ADD_CARD_THREE_DS_RESPONSE: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static UPDATE_CHECKOUT_SESSION_FUNDING_OPTIONS_ATTEMPTED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static UPDATE_CHECKOUT_SESSION_FUNDING_OPTIONS_RESPONSE: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_ADD_SHIPPING_CHANGE_TAPPED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_ADD_SHIPPING_VIEW_SHOWN: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_ADD_SHIPPING_ADDRESS_CLICKED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_ADD_SHIPPING_NEW_SHIPPING_ADDRESS_RENDER: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_ADD_SHIPPING_FIELD_INTERACTION: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NATIVE_ADD_SHIPPING_FIELD_INTERACTION_BLUR: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static AUTO_ADDRESS_SUCCESS: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static AUTO_ADDRESS_FAILED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static AUTO_ADDRESS_ATTEMPTED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static ADD_ADDRESS_MANUALLY_CLICKED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static ADD_ADDRESS_MANUALLY_ENTERED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static ADD_ADDRESS_ADDED_MANUALLY: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static SAVE_ADDRESS_CLICKED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static SELECTED_COUNTRY_CLICKED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static SELECT_COUNTRY_SCREEN_RENDER: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static PROCESS_SELECTED_COUNTRY: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static PROCESS_SHIPPING_CALLBACK: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static SHIPPING_OPTION_CHANGE_TAPPED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static PATCH_ORDER_EXECUTED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static SHIPPING_OPTION_SELECTED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static PICKUP_OPTION_SELECTED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static SHIPPING_OPTION_RENDER: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static PICK_IT_UP_CLICKED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static PICK_IT_UP_RENDERED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static SHIP_IT_RENDER: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static SHIPPING_FETCH_CART_INFO: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static SHIPPING_ADDRESS_CHANGE_ENABLED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static ADD_SHIPPING_BUTTON_SHOWN: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static SHIPPING_ADDRESS_VISIBLE: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static PLACE_ID_ATTEMPTED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static PLACE_ID_SUCCESS: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static PLACE_ID_ERROR: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static UPGRADE_ACCESS_TOKEN_ATTEMPTED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static UPGRADE_ACCESS_TOKEN_RESPONSE: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static CUSTOM_TRANSITION_NAME: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static CONTEXT_INSTANCE: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static USER_ESCAPE_PATH: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static BLOCKING_CONTINGENCIES_RECEIVED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static BLOCKING_CONTINGENCIES_RESOLVED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static FPTI_LOGGING_ERROR: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static USER_CANCELED_CHECKOUT: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static CLICKED_TO_EXIT: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static BACK_PRESSED_TO_EXIT: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static AMPLITUDE_CALLBACK_ERROR: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static RETRY_ON_FAILURE: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static STARTUP_URI_PARSED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static URI_RECEIVED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NETWORK_EXECUTE_SUSPENDING: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static ACTIVITY_RECREATION_DETECTED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static RELAUNCH_PAYSHEET: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static SESSION_RESTORED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static RETURN_FROM_CCT: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static SYSTEM_BACK_BUTTON_TAPPED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NXO_FRAGMENT_SHOWN: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NXO_FRAGMENT_ATTACHED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NXO_ACTIVITY_LIFECYCLE: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static BUTTON_SESSION_ID_PASSED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static CRASHLOGGER_INITIALIZED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static CRASHLOGGER_NOT_INITIALIZED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NXO_MODULE_INITIALIZED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NXO_MODULE_NOT_INITIALIZED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static START_CHECKOUT_WITH_TOKEN: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static ON_NEW_INTENT: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static KILL_ME_CALLED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static INITIATE_CHECKOUT_FIND_TRIGGERED_APP: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static HOME_ACTIVITY_LAUNCHED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static CONTENT_ROUTER_START_FRAGMENT: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static MAIN_VIEW_MODEL_LIFECYCLE: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static MAIN_VIEW_MODEL_START_FRAGMENT: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static ENTER_LOADING_TEXT_SHOWN: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static ENTER_LOADING_TEXT_HIDDEN: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static FINAL_LOADING_ANIMATION: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static CREATE_ORDER_RESTORED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NXO_SPB_CONTAINER_CREATE: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NXO_SPB_CONTAINER_LOADING: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NXO_SPB_CONTAINER_ELIGIBILITY_RESPONSE: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static NXO_SPB_CONTAINER_ON_CLICK: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static UPLOAD_PENDING_AMPLITUDE_EVENTS: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static CHECKOUT_SESSION_TYPE_IDENTIFIED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static BA_AUTHORIZATION_INFO_CLICKED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static BA_AUTHORIZATION_INFO_PAGE_SHOWN: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static BA_ALWAYS_USE_BALANCE_CLICKED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static BA_EXECUTE_RESPONSE: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static SHOWING_OVER_CAPTURE: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static GET_ORDER_DETAILS_REQUEST: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static SHOW_LINK_TEXT: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static CONTENT_ROUTER_GET_CURRENT_FRAGMENT: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static BRAINTREE_ROUTING: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static LOGIN_SCREEN_BACK_BUTTON_CLICKED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static LOGIN_SCREEN_CANCEL_CLICKED: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static values(): androidNative.Array<com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName>;
							public setTransitionName(param0: string): com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public static valueOf(param0: string): com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module instrumentation {
					export class PLog {
						public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.PLog>;
						public static INSTANCE: com.paypal.pyplcheckout.common.instrumentation.PLog;
						public static w(param0: string, param1: string): void;
						public static transition(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome, param2: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param3: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName, param4: string, param5: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason, param6: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackCategory, param7: string, param8: string): void;
						public static decision(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome, param2: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param3: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName, param4: string, param5: string, param6: string, param7: string, param8: string, param9: string): void;
						public static impression(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome, param2: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param3: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName, param4: string, param5: string, param6: string, param7: string): void;
						public static click(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome, param2: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param3: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName, param4: string): void;
						public static dR(param0: string, param1: string): void;
						public static click(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome, param2: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param3: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName, param4: string, param5: string): void;
						public static click(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome, param2: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param3: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName, param4: string, param5: string, param6: string, param7: string, param8: com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent.InstrumentationEventBuilder): void;
						public getTAG(): string;
						public track(param0: org.json.JSONObject): void;
						public static d(param0: string, param1: string, param2: number): void;
						public static impression(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome, param2: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param3: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName, param4: string): void;
						public static info(param0: string): void;
						public static transition(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome, param2: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param3: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName, param4: string, param5: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason, param6: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackCategory, param7: string, param8: string, param9: string, param10: string, param11: string, param12: string, param13: com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent.InstrumentationEventBuilder): void;
						public static error(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.ErrorType, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param2: string, param3: string, param4: java.lang.Throwable, param5: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param6: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName, param7: string, param8: string): void;
						public static click(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome, param2: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param3: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName, param4: string, param5: string, param6: string, param7: string): void;
						public static error(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.ErrorType, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param2: string, param3: string, param4: java.lang.Throwable, param5: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param6: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName): void;
						public static fallback(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName, param2: string, param3: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason, param4: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackCategory): void;
						public submitInstrumentationEvent(param0: com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent): void;
						public static error(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.ErrorType, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param2: string, param3: string, param4: java.lang.Throwable, param5: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName): void;
						public getStackValues(param0: java.lang.Throwable): string;
						public static impression(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome, param2: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param3: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName, param4: string, param5: string): void;
						public static transition(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome, param2: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param3: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName, param4: string): void;
						public static e(param0: string, param1: string): void;
						public static decision(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome, param2: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param3: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName, param4: string): void;
						public static i(param0: string, param1: string): void;
						public static transition(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome, param2: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param3: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName, param4: string, param5: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason, param6: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackCategory, param7: string, param8: string, param9: string, param10: string, param11: string, param12: string): void;
						public static fallback(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName, param2: string, param3: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason, param4: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackCategory, param5: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackDestination, param6: string, param7: string): void;
						public static click(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome, param2: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param3: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName): void;
						public static wR(param0: string, param1: string): void;
						public static e(param0: string, param1: string, param2: java.lang.Throwable): void;
						public static fallback(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName, param2: string, param3: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason, param4: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackCategory, param5: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackDestination): void;
						public static transition(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome, param2: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param3: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName, param4: string, param5: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason, param6: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackCategory): void;
						public static transition(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome, param2: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param3: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName, param4: string, param5: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason, param6: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackCategory, param7: string, param8: string, param9: string): void;
						public static decision(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome, param2: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param3: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName, param4: string, param5: string, param6: string): void;
						public static decision(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome, param2: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param3: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName, param4: string, param5: string): void;
						public static v(param0: string, param1: string): void;
						public static fallback(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName, param2: string, param3: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason, param4: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackCategory, param5: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackDestination, param6: string, param7: string, param8: com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent.InstrumentationEventBuilder): void;
						public static transition(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome, param2: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param3: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName, param4: string, param5: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason): void;
						public static decision(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome, param2: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param3: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName): void;
						public static status(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome, param2: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param3: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName, param4: string, param5: com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent.InstrumentationEventBuilder): void;
						public static decision(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome, param2: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName): void;
						public static error(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.ErrorType, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param2: string, param3: string, param4: java.lang.Throwable, param5: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param6: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName, param7: string, param8: string, param9: string): void;
						public static error(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.ErrorType, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param2: string, param3: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName): void;
						public static scroll(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome, param2: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param3: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName, param4: string, param5: string, param6: string, param7: com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent.InstrumentationEventBuilder): void;
						public static fallback(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName, param2: string, param3: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason, param4: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackCategory, param5: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackDestination, param6: string): void;
						public static transition(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome): void;
						public static i(param0: string, param1: string, param2: number): void;
						public static e(param0: string, param1: string, param2: java.lang.Throwable, param3: number): void;
						public static transition(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome, param2: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode): void;
						public static d(param0: string, param1: string): void;
						public static click(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome, param2: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param3: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName, param4: string, param5: string, param6: string): void;
						public static v(param0: string, param1: string, param2: number): void;
						public static vR(param0: string, param1: string): void;
						public static eR(param0: string, param1: string, param2: java.lang.Exception): void;
						public static decision(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome, param2: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param3: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName, param4: string, param5: string, param6: string, param7: string, param8: string): void;
						public static decision(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome, param2: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param3: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName, param4: string, param5: string, param6: string, param7: string, param8: string, param9: string, param10: com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent.InstrumentationEventBuilder): void;
						public static error(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.ErrorType, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param2: string, param3: string, param4: java.lang.Throwable, param5: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param6: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName, param7: string, param8: string, param9: string, param10: com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent.InstrumentationEventBuilder): void;
						public static transition(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome, param2: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param3: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName): void;
						public static impression(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome, param2: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param3: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName, param4: string, param5: string, param6: string): void;
						public static eR(param0: string, param1: string): void;
						public static error(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.ErrorType, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param2: string, param3: string, param4: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName): void;
						public static iR(param0: string, param1: string): void;
						public static error(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.ErrorType, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param2: string, param3: string, param4: java.lang.Throwable, param5: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param6: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName, param7: string): void;
						public static transition(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome, param2: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param3: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName, param4: string, param5: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason, param6: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackCategory, param7: string): void;
						public static w(param0: string, param1: string, param2: number): void;
						public static impression(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome, param2: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param3: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName, param4: string, param5: string, param6: string, param7: string, param8: com.paypal.pyplcheckout.common.instrumentation.InstrumentationEvent.InstrumentationEventBuilder): void;
						public static transition(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome, param2: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param3: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName, param4: string, param5: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason, param6: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackCategory, param7: string, param8: string, param9: string, param10: string, param11: string): void;
						public static transition(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome, param2: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param3: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName, param4: string, param5: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason, param6: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackCategory, param7: string, param8: string, param9: string, param10: string): void;
						public static impression(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome, param2: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param3: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName): void;
						public static decision(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome, param2: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param3: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName, param4: string, param5: string, param6: string, param7: string): void;
						/** @deprecated */
						public static info(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.LogType, param1: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module instrumentation {
					export class ViewNames {
						public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.ViewNames>;
						public static PAY_SHEET_ACTIVITY: string;
						public static ADDRESS_BOOK_ACTIVITY: string;
						public static CURRENCY_CONVERSION_ACTIVITY: string;
						public static USER_PROFILE_ACTIVITY: string;
						public static SHIPPING_VIEW: string;
						public static CAROUSEL_VIEW: string;
						public static BALANCE_VIEW: string;
						public static BALANCE_TOGGLE: string;
						public static CTA_BUTTON_VIEW: string;
						public static PROFILE_CIRCLE: string;
						public static CURRENCY_CONVERSION_VIEW: string;
						public static PREFERRED_STAR_VIEW: string;
						public static FUNDING_INSTRUMENT_VIEW: string;
						public static ADD_CARD_BUTTON_VIEW: string;
						public static CART_DETAILS_ARROW: string;
						public static PRODUCT_DETAILS_VIEW: string;
						public static CART_DETAILS_VIEW: string;
						public static POLICY_RIGHTS_LINK: string;
						public static SHIPPING_ADDRESS_VIEW: string;
						public static SHIPPING_ADDRESS_ADD: string;
						public static OUTSIDE_CLICK: string;
						public static LOADING_SPINNER: string;
						public static PRIVACY_LINK: string;
						public static TERMS_LINK: string;
						public static LOGOUT_VIEW: string;
						public static PAYPAL_CREDIT_VIEW: string;
						public static GLOBAL_PAY_LATER_VIEW: string;
						public static EXIT_BUTTON: string;
						public static SHIPPING_METHOD_VIEW: string;
						public static SELECTED_FI_TOAST: string;
						public static SET_PREFERRED_TOAST: string;
						public constructor();
					}
					export module ViewNames {
						export class Companion {
							public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.ViewNames.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module instrumentation {
					export module amplitude {
						export module dao {
							export class AmplitudeDao {
								public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.amplitude.dao.AmplitudeDao>;
								/**
								 * Constructs a new instance of the com.paypal.pyplcheckout.common.instrumentation.amplitude.dao.AmplitudeDao interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									cachePendingEvents(param0: java.util.List<com.paypal.pyplcheckout.common.instrumentation.amplitude.models.AmplitudeEvent>, param1: any): any;
									getPendingEvents(): java.util.List<com.paypal.pyplcheckout.common.instrumentation.amplitude.models.AmplitudeEvent>;
									clearPendingEvents(param0: any): any;
									cacheAmplitudeSession(param0: com.paypal.pyplcheckout.common.instrumentation.amplitude.models.AmplitudeSession): void;
									getAmplitudeSession(): com.paypal.pyplcheckout.common.instrumentation.amplitude.models.AmplitudeSession;
								});
								public constructor();
								public getPendingEvents(): java.util.List<com.paypal.pyplcheckout.common.instrumentation.amplitude.models.AmplitudeEvent>;
								public cacheAmplitudeSession(param0: com.paypal.pyplcheckout.common.instrumentation.amplitude.models.AmplitudeSession): void;
								public cachePendingEvents(param0: java.util.List<com.paypal.pyplcheckout.common.instrumentation.amplitude.models.AmplitudeEvent>, param1: any): any;
								public clearPendingEvents(param0: any): any;
								public getAmplitudeSession(): com.paypal.pyplcheckout.common.instrumentation.amplitude.models.AmplitudeSession;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module instrumentation {
					export module amplitude {
						export module dao {
							export class SharedPrefAmplitudeDao extends com.paypal.pyplcheckout.common.instrumentation.amplitude.dao.AmplitudeDao {
								public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.amplitude.dao.SharedPrefAmplitudeDao>;
								public getPendingEvents(): java.util.List<com.paypal.pyplcheckout.common.instrumentation.amplitude.models.AmplitudeEvent>;
								public cacheAmplitudeSession(param0: com.paypal.pyplcheckout.common.instrumentation.amplitude.models.AmplitudeSession): void;
								public cachePendingEvents(param0: java.util.List<com.paypal.pyplcheckout.common.instrumentation.amplitude.models.AmplitudeEvent>, param1: any): any;
								public clearPendingEvents(param0: any): any;
								public constructor(param0: globalAndroid.content.Context, param1: com.google.gson.Gson);
								public getAmplitudeSession(): com.paypal.pyplcheckout.common.instrumentation.amplitude.models.AmplitudeSession;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module instrumentation {
					export module amplitude {
						export module dao {
							export class SharedPrefAmplitudeDao_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.common.instrumentation.amplitude.dao.SharedPrefAmplitudeDao> {
								public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.amplitude.dao.SharedPrefAmplitudeDao_Factory>;
								public get(): com.paypal.pyplcheckout.common.instrumentation.amplitude.dao.SharedPrefAmplitudeDao;
								public static create(param0: javax.inject.Provider<globalAndroid.content.Context>, param1: javax.inject.Provider<com.google.gson.Gson>): com.paypal.pyplcheckout.common.instrumentation.amplitude.dao.SharedPrefAmplitudeDao_Factory;
								public static newInstance(param0: globalAndroid.content.Context, param1: com.google.gson.Gson): com.paypal.pyplcheckout.common.instrumentation.amplitude.dao.SharedPrefAmplitudeDao;
								public constructor(param0: javax.inject.Provider<globalAndroid.content.Context>, param1: javax.inject.Provider<com.google.gson.Gson>);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module instrumentation {
					export module amplitude {
						export module di {
							export abstract class AmplitudeApiModule {
								public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.amplitude.di.AmplitudeApiModule>;
								public provideAmplitudeDao$pyplcheckout_externalThreedsRelease(param0: com.paypal.pyplcheckout.common.instrumentation.amplitude.dao.SharedPrefAmplitudeDao): com.paypal.pyplcheckout.common.instrumentation.amplitude.dao.AmplitudeDao;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module instrumentation {
					export module amplitude {
						export module logger {
							export class AmplitudeLogger {
								public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.amplitude.logger.AmplitudeLogger>;
								/**
								 * Constructs a new instance of the com.paypal.pyplcheckout.common.instrumentation.amplitude.logger.AmplitudeLogger interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									initialize(param0: string): void;
									logEvent(param0: string, param1: org.json.JSONObject): void;
									clearSession(): void;
								});
								public constructor();
								public initialize(param0: string): void;
								public clearSession(): void;
								public logEvent(param0: string, param1: org.json.JSONObject): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module instrumentation {
					export module amplitude {
						export module logger {
							export class AmplitudeSdk extends com.paypal.pyplcheckout.common.instrumentation.amplitude.logger.AmplitudeLogger {
								public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.amplitude.logger.AmplitudeSdk>;
								public initialize(param0: string): void;
								public clearSession(): void;
								public getUserId(): string;
								public constructor(param0: com.paypal.pyplcheckout.model.DebugConfigManager, param1: number, param2: com.paypal.pyplcheckout.utils.AmplitudeUtils, param3: globalAndroid.content.Context);
								public setUserId(param0: string): void;
								public logEvent(param0: string, param1: org.json.JSONObject): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module instrumentation {
					export module amplitude {
						export module logger {
							export class AmplitudeService extends com.paypal.pyplcheckout.common.instrumentation.amplitude.logger.AmplitudeLogger {
								public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.amplitude.logger.AmplitudeService>;
								public initialize(param0: string): void;
								public clearSession(): void;
								public getConnectivityHandler(): com.paypal.pyplcheckout.network.ConnectivityHandler;
								public getDeviceInfo(): com.paypal.pyplcheckout.common.instrumentation.amplitude.models.DeviceInfo;
								public uploadFailedEvents(): void;
								public getContext(): globalAndroid.content.Context;
								public getRepository(): com.paypal.pyplcheckout.common.instrumentation.amplitude.repository.AmplitudeRepository;
								public logEvent(param0: string, param1: org.json.JSONObject): void;
								public constructor(param0: com.paypal.pyplcheckout.common.instrumentation.amplitude.repository.AmplitudeRepository, param1: kotlinx.coroutines.CoroutineScope, param2: globalAndroid.content.Context, param3: com.paypal.pyplcheckout.common.instrumentation.amplitude.models.DeviceInfo, param4: com.paypal.pyplcheckout.network.ConnectivityHandler);
								public getScope(): kotlinx.coroutines.CoroutineScope;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module instrumentation {
					export module amplitude {
						export module logger {
							export class AmplitudeService_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.common.instrumentation.amplitude.logger.AmplitudeService> {
								public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.amplitude.logger.AmplitudeService_Factory>;
								public static newInstance(param0: com.paypal.pyplcheckout.common.instrumentation.amplitude.repository.AmplitudeRepository, param1: kotlinx.coroutines.CoroutineScope, param2: globalAndroid.content.Context, param3: com.paypal.pyplcheckout.common.instrumentation.amplitude.models.DeviceInfo, param4: com.paypal.pyplcheckout.network.ConnectivityHandler): com.paypal.pyplcheckout.common.instrumentation.amplitude.logger.AmplitudeService;
								public get(): com.paypal.pyplcheckout.common.instrumentation.amplitude.logger.AmplitudeService;
								public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.common.instrumentation.amplitude.repository.AmplitudeRepository>, param1: javax.inject.Provider<kotlinx.coroutines.CoroutineScope>, param2: javax.inject.Provider<globalAndroid.content.Context>, param3: javax.inject.Provider<com.paypal.pyplcheckout.common.instrumentation.amplitude.models.DeviceInfo>, param4: javax.inject.Provider<com.paypal.pyplcheckout.network.ConnectivityHandler>);
								public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.common.instrumentation.amplitude.repository.AmplitudeRepository>, param1: javax.inject.Provider<kotlinx.coroutines.CoroutineScope>, param2: javax.inject.Provider<globalAndroid.content.Context>, param3: javax.inject.Provider<com.paypal.pyplcheckout.common.instrumentation.amplitude.models.DeviceInfo>, param4: javax.inject.Provider<com.paypal.pyplcheckout.network.ConnectivityHandler>): com.paypal.pyplcheckout.common.instrumentation.amplitude.logger.AmplitudeService_Factory;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module instrumentation {
					export module amplitude {
						export module models {
							export class AmplitudeEvent {
								public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.amplitude.models.AmplitudeEvent>;
								public getEventType(): string;
								public toString(): string;
								public getDeviceBrand(): string;
								public getOsVersion(): string;
								public constructor(param0: string, param1: number, param2: string, param3: string, param4: number, param5: string, param6: string, param7: string, param8: number, param9: string, param10: string, param11: string, param12: string, param13: string, param14: string, param15: string, param16: java.util.Map<string,any>, param17: com.paypal.pyplcheckout.common.instrumentation.amplitude.models.UserProperties, param18: string);
								public component15(): string;
								public component17(): java.util.Map<string,any>;
								public equals(param0: any): boolean;
								public component11(): string;
								public getDeviceId(): string;
								public component1(): string;
								public component14(): string;
								public getVersionName(): string;
								public getPlatform(): string;
								public component8(): string;
								public component18(): com.paypal.pyplcheckout.common.instrumentation.amplitude.models.UserProperties;
								public getSessionId(): number;
								public component2(): number;
								public component9(): number;
								public getLanguage(): string;
								public component10(): string;
								public getOsName(): string;
								public component7(): string;
								public component13(): string;
								public getUserId(): string;
								public copy(param0: string, param1: number, param2: string, param3: string, param4: number, param5: string, param6: string, param7: string, param8: number, param9: string, param10: string, param11: string, param12: string, param13: string, param14: string, param15: string, param16: java.util.Map<string,any>, param17: com.paypal.pyplcheckout.common.instrumentation.amplitude.models.UserProperties, param18: string): com.paypal.pyplcheckout.common.instrumentation.amplitude.models.AmplitudeEvent;
								public component5(): number;
								public component4(): string;
								public getUserProperties(): com.paypal.pyplcheckout.common.instrumentation.amplitude.models.UserProperties;
								public getCarrier(): string;
								public component6(): string;
								public getInsertId(): string;
								public component16(): string;
								public getDeviceManufacturer(): string;
								public getEventProperties(): java.util.Map<string,any>;
								public component19(): string;
								public getCountry(): string;
								public getTimestamp(): number;
								public getApiLevel(): number;
								public component12(): string;
								public component3(): string;
								public hashCode(): number;
								public getDeviceModel(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module instrumentation {
					export module amplitude {
						export module models {
							export class AmplitudeResponse {
								public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.amplitude.models.AmplitudeResponse>;
								public toString(): string;
								public component1(): number;
								public equals(param0: any): boolean;
								public copy(param0: number, param1: string): com.paypal.pyplcheckout.common.instrumentation.amplitude.models.AmplitudeResponse;
								public getError(): string;
								public constructor(param0: number, param1: string);
								public component2(): string;
								public hashCode(): number;
								public getCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module instrumentation {
					export module amplitude {
						export module models {
							export class AmplitudeSession {
								public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.amplitude.models.AmplitudeSession>;
								public component4(): com.paypal.pyplcheckout.common.instrumentation.amplitude.models.UserProperties;
								public toString(): string;
								public getUserId(): string;
								public copy(param0: string, param1: string, param2: number, param3: com.paypal.pyplcheckout.common.instrumentation.amplitude.models.UserProperties): com.paypal.pyplcheckout.common.instrumentation.amplitude.models.AmplitudeSession;
								public equals(param0: any): boolean;
								public getDeviceId(): string;
								public component3(): number;
								public component2(): string;
								public getUserProperties(): com.paypal.pyplcheckout.common.instrumentation.amplitude.models.UserProperties;
								public component1(): string;
								public getSessionId(): number;
								public constructor(param0: string, param1: string, param2: number, param3: com.paypal.pyplcheckout.common.instrumentation.amplitude.models.UserProperties);
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module instrumentation {
					export module amplitude {
						export module models {
							export class AmplitudeUploadRequest {
								public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.amplitude.models.AmplitudeUploadRequest>;
								public component1(): string;
								public toString(): string;
								public getApiKey(): string;
								public equals(param0: any): boolean;
								public copy(param0: string, param1: java.util.List<com.paypal.pyplcheckout.common.instrumentation.amplitude.models.AmplitudeEvent>): com.paypal.pyplcheckout.common.instrumentation.amplitude.models.AmplitudeUploadRequest;
								public component2(): java.util.List<com.paypal.pyplcheckout.common.instrumentation.amplitude.models.AmplitudeEvent>;
								public getEvents(): java.util.List<com.paypal.pyplcheckout.common.instrumentation.amplitude.models.AmplitudeEvent>;
								public hashCode(): number;
								public constructor(param0: string, param1: java.util.List<com.paypal.pyplcheckout.common.instrumentation.amplitude.models.AmplitudeEvent>);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module instrumentation {
					export module amplitude {
						export module models {
							export class DeviceInfo {
								public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.amplitude.models.DeviceInfo>;
								public getOsVersion(): string;
								public constructor(param0: com.paypal.pyplcheckout.services.Repository, param1: globalAndroid.content.Context);
								public getDeviceCountry(): string;
								public getPlatform(): string;
								public getVersionName(): string;
								public getCarrier(): string;
								public getBrand(): string;
								public getDeviceManufacturer(): string;
								public getCountry(): string;
								public getLanguage(): string;
								public getOsName(): string;
								public getApiLevel(): number;
								public getIpCountry(): string;
								public getDeviceModel(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module instrumentation {
					export module amplitude {
						export module models {
							export class DeviceInfo_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.common.instrumentation.amplitude.models.DeviceInfo> {
								public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.amplitude.models.DeviceInfo_Factory>;
								public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param1: javax.inject.Provider<globalAndroid.content.Context>);
								public get(): com.paypal.pyplcheckout.common.instrumentation.amplitude.models.DeviceInfo;
								public static newInstance(param0: com.paypal.pyplcheckout.services.Repository, param1: globalAndroid.content.Context): com.paypal.pyplcheckout.common.instrumentation.amplitude.models.DeviceInfo;
								public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param1: javax.inject.Provider<globalAndroid.content.Context>): com.paypal.pyplcheckout.common.instrumentation.amplitude.models.DeviceInfo_Factory;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module instrumentation {
					export module amplitude {
						export module models {
							export class UserProperties {
								public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.amplitude.models.UserProperties>;
								public toString(): string;
								public equals(param0: any): boolean;
								public component4(): string;
								public constructor(param0: boolean, param1: string, param2: string, param3: string);
								public isAccessibilityEnabled(): boolean;
								public component2(): string;
								public getDeviceCountry(): string;
								public component1(): boolean;
								public getIpCountry(): string;
								public component3(): string;
								public copy(param0: boolean, param1: string, param2: string, param3: string): com.paypal.pyplcheckout.common.instrumentation.amplitude.models.UserProperties;
								public hashCode(): number;
								public getDisplayDensity(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module instrumentation {
					export module amplitude {
						export module repository {
							export class AmplitudeRepository {
								public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.amplitude.repository.AmplitudeRepository>;
								public setUserProperties(param0: com.paypal.pyplcheckout.common.instrumentation.amplitude.models.UserProperties): void;
								public uploadFailedEvents(param0: any): any;
								public clearUserSession(): void;
								public initializeSession(param0: string): void;
								public constructor(param0: com.paypal.pyplcheckout.common.instrumentation.amplitude.dao.AmplitudeDao, param1: com.paypal.pyplcheckout.common.instrumentation.AmplitudeApi);
								public logEvent(param0: string, param1: org.json.JSONObject, param2: any): any;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module common {
				export module instrumentation {
					export module amplitude {
						export module repository {
							export class AmplitudeRepository_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.common.instrumentation.amplitude.repository.AmplitudeRepository> {
								public static class: java.lang.Class<com.paypal.pyplcheckout.common.instrumentation.amplitude.repository.AmplitudeRepository_Factory>;
								public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.common.instrumentation.amplitude.dao.AmplitudeDao>, param1: javax.inject.Provider<com.paypal.pyplcheckout.common.instrumentation.AmplitudeApi>): com.paypal.pyplcheckout.common.instrumentation.amplitude.repository.AmplitudeRepository_Factory;
								public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.common.instrumentation.amplitude.dao.AmplitudeDao>, param1: javax.inject.Provider<com.paypal.pyplcheckout.common.instrumentation.AmplitudeApi>);
								public get(): com.paypal.pyplcheckout.common.instrumentation.amplitude.repository.AmplitudeRepository;
								public static newInstance(param0: com.paypal.pyplcheckout.common.instrumentation.amplitude.dao.AmplitudeDao, param1: com.paypal.pyplcheckout.common.instrumentation.AmplitudeApi): com.paypal.pyplcheckout.common.instrumentation.amplitude.repository.AmplitudeRepository;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module conversionrate {
				export module model {
					export class ConversionRateViewContentPageConfig extends com.paypal.pyplcheckout.navigation.ContentPage {
						public static class: java.lang.Class<com.paypal.pyplcheckout.conversionrate.model.ConversionRateViewContentPageConfig>;
						public setFooterContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
						public constructor();
						public constructor(param0: globalAndroid.content.Context, param1: androidx.fragment.app.Fragment, param2: com.paypal.pyplcheckout.conversionrate.model.ConversionRateViewListenerImpl, param3: com.paypal.pyplcheckout.navigation.ContentPage);
						public getBodyContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public setHeaderContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
						public getHeaderContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
						public setBodyContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
						public getHeaderContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public getTopBannerContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public getBodyContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
						public addViewsToContainer(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param1: globalAndroid.view.ViewGroup): void;
						public removeViewsFromContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup): void;
						public getFooterContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public addViewsToContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup): void;
						public getFooterContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
						public removeViewsFromContainer(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param1: globalAndroid.view.ViewGroup): void;
						public constructor(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param1: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param2: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param3: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>);
						public addViewsToContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup, param2: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module conversionrate {
				export module model {
					export class ConversionRateViewListenerImpl extends com.paypal.pyplcheckout.conversionrate.view.interfaces.ConversionRateViewListener {
						public static class: java.lang.Class<com.paypal.pyplcheckout.conversionrate.model.ConversionRateViewListenerImpl>;
						public onPayPalBackArrowClick(): void;
						public onPayPalConversionRateClicked(param0: com.paypal.pyplcheckout.utils.CurrencyConversionType, param1: boolean): void;
						public constructor();
						public constructor(param0: com.paypal.pyplcheckout.conversionrate.view.interfaces.PayPalConversionRateHeaderViewListener, param1: com.paypal.pyplcheckout.conversionrate.view.interfaces.PayPalConversionRateInfoViewListener);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module conversionrate {
				export module view {
					export module customviews {
						export class PayPalConversionRateHeaderView implements com.paypal.pyplcheckout.navigation.interfaces.ContentView {
							public static class: java.lang.Class<com.paypal.pyplcheckout.conversionrate.view.customviews.PayPalConversionRateHeaderView>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment);
							public getContentViewMinHeight(): number;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public removeListeners(): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment, param4: com.paypal.pyplcheckout.conversionrate.view.interfaces.PayPalConversionRateHeaderViewListener);
							public getViewId(): string;
							public getIsAnchoredToBottomSheet(): boolean;
							public onClick(param0: globalAndroid.view.View): void;
							public getFragment(): androidx.fragment.app.Fragment;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public _$_clearFindViewByIdCache(): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public constructor(param0: globalAndroid.content.Context);
							public setContentViewVisibility(param0: number): void;
						}
						export module PayPalConversionRateHeaderView {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.conversionrate.view.customviews.PayPalConversionRateHeaderView.Companion>;
								public getTAG(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module conversionrate {
				export module view {
					export module customviews {
						export class PayPalConversionRateInfoView implements com.paypal.pyplcheckout.navigation.interfaces.ContentView, com.paypal.pyplcheckout.navigation.interfaces.ICustomViewsViewModel {
							public static class: java.lang.Class<com.paypal.pyplcheckout.conversionrate.view.customviews.PayPalConversionRateInfoView>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment);
							public getContentViewMinHeight(): number;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public initViewModelObservers(): void;
							public removeListeners(): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment, param4: com.paypal.pyplcheckout.conversionrate.view.interfaces.PayPalConversionRateInfoViewListener);
							public getViewId(): string;
							public getIsAnchoredToBottomSheet(): boolean;
							public onClick(param0: globalAndroid.view.View): void;
							public getFragment(): androidx.fragment.app.Fragment;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public getLifecycleOwner(param0: globalAndroid.view.View): androidx.lifecycle.LifecycleOwner;
							public _$_clearFindViewByIdCache(): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public getComponentActivity(param0: globalAndroid.content.Context): androidx.activity.ComponentActivity;
							public constructor(param0: globalAndroid.content.Context);
							public setContentViewVisibility(param0: number): void;
						}
						export module PayPalConversionRateInfoView {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.conversionrate.view.customviews.PayPalConversionRateInfoView.Companion>;
								public getTAG(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module conversionrate {
				export module view {
					export module fragments {
						export class PYPLConversionRateFragment extends com.paypal.pyplcheckout.home.view.BaseFragment {
							public static class: java.lang.Class<com.paypal.pyplcheckout.conversionrate.view.fragments.PYPLConversionRateFragment>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public static TAG: string;
							public constructor();
							public getViewId(): string;
							public onActivityCreated(param0: globalAndroid.os.Bundle): void;
							public static newInstance(): com.paypal.pyplcheckout.conversionrate.view.fragments.PYPLConversionRateFragment;
							public onCreateView(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: globalAndroid.os.Bundle): globalAndroid.view.View;
							public _$_clearFindViewByIdCache(): void;
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
						}
						export module PYPLConversionRateFragment {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.conversionrate.view.fragments.PYPLConversionRateFragment.Companion>;
								public newInstance(): com.paypal.pyplcheckout.conversionrate.view.fragments.PYPLConversionRateFragment;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module conversionrate {
				export module view {
					export module interfaces {
						export class ConversionRateViewListener implements com.paypal.pyplcheckout.conversionrate.view.interfaces.PayPalConversionRateInfoViewListener, com.paypal.pyplcheckout.conversionrate.view.interfaces.PayPalConversionRateHeaderViewListener {
							public static class: java.lang.Class<com.paypal.pyplcheckout.conversionrate.view.interfaces.ConversionRateViewListener>;
							/**
							 * Constructs a new instance of the com.paypal.pyplcheckout.conversionrate.view.interfaces.ConversionRateViewListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onPayPalConversionRateClicked(param0: com.paypal.pyplcheckout.utils.CurrencyConversionType, param1: boolean): void;
								onPayPalBackArrowClick(): void;
							});
							public constructor();
							public onPayPalBackArrowClick(): void;
							public onPayPalConversionRateClicked(param0: com.paypal.pyplcheckout.utils.CurrencyConversionType, param1: boolean): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module conversionrate {
				export module view {
					export module interfaces {
						export class PayPalConversionRateHeaderViewListener {
							public static class: java.lang.Class<com.paypal.pyplcheckout.conversionrate.view.interfaces.PayPalConversionRateHeaderViewListener>;
							/**
							 * Constructs a new instance of the com.paypal.pyplcheckout.conversionrate.view.interfaces.PayPalConversionRateHeaderViewListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onPayPalBackArrowClick(): void;
							});
							public constructor();
							public onPayPalBackArrowClick(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module conversionrate {
				export module view {
					export module interfaces {
						export class PayPalConversionRateInfoViewListener {
							public static class: java.lang.Class<com.paypal.pyplcheckout.conversionrate.view.interfaces.PayPalConversionRateInfoViewListener>;
							/**
							 * Constructs a new instance of the com.paypal.pyplcheckout.conversionrate.view.interfaces.PayPalConversionRateInfoViewListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onPayPalConversionRateClicked(param0: com.paypal.pyplcheckout.utils.CurrencyConversionType, param1: boolean): void;
							});
							public constructor();
							public onPayPalConversionRateClicked(param0: com.paypal.pyplcheckout.utils.CurrencyConversionType, param1: boolean): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module conversionrateprotection {
				export module model {
					export class RateProtectionViewContentPageConfig extends com.paypal.pyplcheckout.navigation.ContentPage {
						public static class: java.lang.Class<com.paypal.pyplcheckout.conversionrateprotection.model.RateProtectionViewContentPageConfig>;
						public setFooterContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
						public constructor();
						public getBodyContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public setHeaderContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
						public getHeaderContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
						public setBodyContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
						public getHeaderContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public getTopBannerContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public getBodyContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
						public addViewsToContainer(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param1: globalAndroid.view.ViewGroup): void;
						public removeViewsFromContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup): void;
						public getFooterContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public addViewsToContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup): void;
						public getFooterContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
						public constructor(param0: globalAndroid.content.Context, param1: androidx.fragment.app.Fragment, param2: com.paypal.pyplcheckout.conversionrateprotection.model.RateProtectionViewListenerImpl, param3: com.paypal.pyplcheckout.navigation.ContentPage);
						public removeViewsFromContainer(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param1: globalAndroid.view.ViewGroup): void;
						public constructor(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param1: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param2: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param3: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>);
						public addViewsToContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup, param2: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module conversionrateprotection {
				export module model {
					export class RateProtectionViewListenerImpl extends com.paypal.pyplcheckout.conversionrateprotection.view.interfaces.RateProtectionViewListener {
						public static class: java.lang.Class<com.paypal.pyplcheckout.conversionrateprotection.model.RateProtectionViewListenerImpl>;
						public onPayPalBackArrowClick(): void;
						public constructor();
						public onOKClicked(): void;
						public constructor(param0: com.paypal.pyplcheckout.conversionrateprotection.view.interfaces.PayPalRateProtectionHeaderViewListener, param1: com.paypal.pyplcheckout.conversionrateprotection.view.interfaces.PayPalRateProtectionInfoViewListener);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module conversionrateprotection {
				export module view {
					export module customviews {
						export class PayPalRateProtectionHeaderView implements com.paypal.pyplcheckout.navigation.interfaces.ContentView {
							public static class: java.lang.Class<com.paypal.pyplcheckout.conversionrateprotection.view.customviews.PayPalRateProtectionHeaderView>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public static TAG: string;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment);
							public getContentViewMinHeight(): number;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public removeListeners(): void;
							public getViewId(): string;
							public getIsAnchoredToBottomSheet(): boolean;
							public onClick(param0: globalAndroid.view.View): void;
							public getFragment(): androidx.fragment.app.Fragment;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment, param4: com.paypal.pyplcheckout.conversionrateprotection.view.interfaces.PayPalRateProtectionHeaderViewListener);
							public _$_clearFindViewByIdCache(): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public constructor(param0: globalAndroid.content.Context);
							public setContentViewVisibility(param0: number): void;
						}
						export module PayPalRateProtectionHeaderView {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.conversionrateprotection.view.customviews.PayPalRateProtectionHeaderView.Companion>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module conversionrateprotection {
				export module view {
					export module customviews {
						export class PayPalRateProtectionInfoView implements com.paypal.pyplcheckout.navigation.interfaces.ContentView {
							public static class: java.lang.Class<com.paypal.pyplcheckout.conversionrateprotection.view.customviews.PayPalRateProtectionInfoView>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public static TAG: string;
							public getContentViewMinHeight(): number;
							public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment, param4: com.paypal.pyplcheckout.conversionrateprotection.view.interfaces.PayPalRateProtectionInfoViewListener);
							public removeListeners(): void;
							public getViewId(): string;
							public getIsAnchoredToBottomSheet(): boolean;
							public onClick(param0: globalAndroid.view.View): void;
							public getFragment(): androidx.fragment.app.Fragment;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public _$_clearFindViewByIdCache(): void;
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public setContentViewVisibility(param0: number): void;
						}
						export module PayPalRateProtectionInfoView {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.conversionrateprotection.view.customviews.PayPalRateProtectionInfoView.Companion>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module conversionrateprotection {
				export module view {
					export module fragments {
						export class PYPLRateProtectionFragment extends com.paypal.pyplcheckout.home.view.BaseFragment {
							public static class: java.lang.Class<com.paypal.pyplcheckout.conversionrateprotection.view.fragments.PYPLRateProtectionFragment>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public static TAG: string;
							public constructor();
							public getViewId(): string;
							public static newInstance(): com.paypal.pyplcheckout.conversionrateprotection.view.fragments.PYPLRateProtectionFragment;
							public onActivityCreated(param0: globalAndroid.os.Bundle): void;
							public onCreateView(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: globalAndroid.os.Bundle): globalAndroid.view.View;
							public _$_clearFindViewByIdCache(): void;
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
						}
						export module PYPLRateProtectionFragment {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.conversionrateprotection.view.fragments.PYPLRateProtectionFragment.Companion>;
								public newInstance(): com.paypal.pyplcheckout.conversionrateprotection.view.fragments.PYPLRateProtectionFragment;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module conversionrateprotection {
				export module view {
					export module interfaces {
						export class PayPalRateProtectionHeaderViewListener {
							public static class: java.lang.Class<com.paypal.pyplcheckout.conversionrateprotection.view.interfaces.PayPalRateProtectionHeaderViewListener>;
							/**
							 * Constructs a new instance of the com.paypal.pyplcheckout.conversionrateprotection.view.interfaces.PayPalRateProtectionHeaderViewListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onPayPalBackArrowClick(): void;
							});
							public constructor();
							public onPayPalBackArrowClick(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module conversionrateprotection {
				export module view {
					export module interfaces {
						export class PayPalRateProtectionInfoViewListener {
							public static class: java.lang.Class<com.paypal.pyplcheckout.conversionrateprotection.view.interfaces.PayPalRateProtectionInfoViewListener>;
							/**
							 * Constructs a new instance of the com.paypal.pyplcheckout.conversionrateprotection.view.interfaces.PayPalRateProtectionInfoViewListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onOKClicked(): void;
							});
							public constructor();
							public onOKClicked(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module conversionrateprotection {
				export module view {
					export module interfaces {
						export class RateProtectionViewListener implements com.paypal.pyplcheckout.conversionrateprotection.view.interfaces.PayPalRateProtectionInfoViewListener, com.paypal.pyplcheckout.conversionrateprotection.view.interfaces.PayPalRateProtectionHeaderViewListener {
							public static class: java.lang.Class<com.paypal.pyplcheckout.conversionrateprotection.view.interfaces.RateProtectionViewListener>;
							/**
							 * Constructs a new instance of the com.paypal.pyplcheckout.conversionrateprotection.view.interfaces.RateProtectionViewListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onOKClicked(): void;
								onPayPalBackArrowClick(): void;
							});
							public constructor();
							public onPayPalBackArrowClick(): void;
							public onOKClicked(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module crypto {
				export class NativePayWithCryptoCheck {
					public static class: java.lang.Class<com.paypal.pyplcheckout.crypto.NativePayWithCryptoCheck>;
					public constructor(param0: com.paypal.pyplcheckout.ab.AbManager, param1: boolean);
					public isPayWithCryptoEligible(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module crypto {
				export class NativePayWithCryptoCheck_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.crypto.NativePayWithCryptoCheck> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.crypto.NativePayWithCryptoCheck_Factory>;
					public static newInstance(param0: com.paypal.pyplcheckout.ab.AbManager, param1: boolean): com.paypal.pyplcheckout.crypto.NativePayWithCryptoCheck;
					public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.ab.AbManager>, param1: javax.inject.Provider<java.lang.Boolean>);
					public get(): com.paypal.pyplcheckout.crypto.NativePayWithCryptoCheck;
					public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.ab.AbManager>, param1: javax.inject.Provider<java.lang.Boolean>): com.paypal.pyplcheckout.crypto.NativePayWithCryptoCheck_Factory;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module crypto {
				export module model {
					export class CryptoConsentViewContentPageConfig extends com.paypal.pyplcheckout.navigation.ContentPage {
						public static class: java.lang.Class<com.paypal.pyplcheckout.crypto.model.CryptoConsentViewContentPageConfig>;
						public setFooterContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
						public constructor();
						public getBodyContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public setHeaderContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
						public getHeaderContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
						public setBodyContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
						public getHeaderContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public getTopBannerContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public getBodyContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
						public constructor(param0: globalAndroid.content.Context, param1: androidx.fragment.app.Fragment, param2: com.paypal.pyplcheckout.crypto.model.CryptoConsentViewListenerImpl, param3: com.paypal.pyplcheckout.navigation.ContentPage);
						public addViewsToContainer(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param1: globalAndroid.view.ViewGroup): void;
						public removeViewsFromContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup): void;
						public getFooterContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public addViewsToContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup): void;
						public getFooterContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
						public removeViewsFromContainer(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param1: globalAndroid.view.ViewGroup): void;
						public constructor(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param1: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param2: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param3: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>);
						public addViewsToContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup, param2: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module crypto {
				export module model {
					export class CryptoConsentViewListenerImpl extends com.paypal.pyplcheckout.crypto.view.interfaces.PayPalCryptoConsentListener {
						public static class: java.lang.Class<com.paypal.pyplcheckout.crypto.model.CryptoConsentViewListenerImpl>;
						public constructor(param0: com.paypal.pyplcheckout.crypto.view.interfaces.PayPalCryptoConsentListener);
						public constructor();
						public onPayPalCryptoTermsAndConditionsClick(): void;
						public onPayPalCryptoActionButtonClickListener(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module crypto {
				export module view {
					export module customviews {
						export class PayPalCryptoConsentHeaderView implements com.paypal.pyplcheckout.navigation.interfaces.ContentView {
							public static class: java.lang.Class<com.paypal.pyplcheckout.crypto.view.customviews.PayPalCryptoConsentHeaderView>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public static TAG: string;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment);
							public getContentViewMinHeight(): number;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public removeListeners(): void;
							public getViewId(): string;
							public getIsAnchoredToBottomSheet(): boolean;
							public getFragment(): androidx.fragment.app.Fragment;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public _$_clearFindViewByIdCache(): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public constructor(param0: globalAndroid.content.Context);
							public setContentViewVisibility(param0: number): void;
						}
						export module PayPalCryptoConsentHeaderView {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.crypto.view.customviews.PayPalCryptoConsentHeaderView.Companion>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module crypto {
				export module view {
					export module customviews {
						export class PayPalCryptoConsentInfoView implements com.paypal.pyplcheckout.navigation.interfaces.ContentView {
							public static class: java.lang.Class<com.paypal.pyplcheckout.crypto.view.customviews.PayPalCryptoConsentInfoView>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public static TAG: string;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment);
							public getContentViewMinHeight(): number;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment, param4: com.paypal.pyplcheckout.crypto.view.interfaces.PayPalCryptoConsentListener);
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public removeListeners(): void;
							public getViewId(): string;
							public getIsAnchoredToBottomSheet(): boolean;
							public onClick(param0: globalAndroid.view.View): void;
							public getFragment(): androidx.fragment.app.Fragment;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public _$_clearFindViewByIdCache(): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public constructor(param0: globalAndroid.content.Context);
							public setContentViewVisibility(param0: number): void;
						}
						export module PayPalCryptoConsentInfoView {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.crypto.view.customviews.PayPalCryptoConsentInfoView.Companion>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module crypto {
				export module view {
					export module fragments {
						export class PYPLCryptoConsentFragment extends com.paypal.pyplcheckout.home.view.BaseFragment {
							public static class: java.lang.Class<com.paypal.pyplcheckout.crypto.view.fragments.PYPLCryptoConsentFragment>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public static TAG: string;
							public constructor();
							public getViewId(): string;
							public onActivityCreated(param0: globalAndroid.os.Bundle): void;
							public onCreateView(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: globalAndroid.os.Bundle): globalAndroid.view.View;
							public static newInstance(): com.paypal.pyplcheckout.crypto.view.fragments.PYPLCryptoConsentFragment;
							public _$_clearFindViewByIdCache(): void;
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
						}
						export module PYPLCryptoConsentFragment {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.crypto.view.fragments.PYPLCryptoConsentFragment.Companion>;
								public newInstance(): com.paypal.pyplcheckout.crypto.view.fragments.PYPLCryptoConsentFragment;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module crypto {
				export module view {
					export module interfaces {
						export class PayPalCryptoConsentListener {
							public static class: java.lang.Class<com.paypal.pyplcheckout.crypto.view.interfaces.PayPalCryptoConsentListener>;
							/**
							 * Constructs a new instance of the com.paypal.pyplcheckout.crypto.view.interfaces.PayPalCryptoConsentListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onPayPalCryptoActionButtonClickListener(): void;
								onPayPalCryptoTermsAndConditionsClick(): void;
							});
							public constructor();
							public onPayPalCryptoActionButtonClickListener(): void;
							public onPayPalCryptoTermsAndConditionsClick(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module crypto {
				export module viewmodel {
					export class CryptoViewModel extends com.paypal.pyplcheckout.viewmodels.BaseViewModel {
						public static class: java.lang.Class<com.paypal.pyplcheckout.crypto.viewmodel.CryptoViewModel>;
						public constructor();
						public getCryptoLabel(): string;
						public isCryptoCurrencyConsentAccepted(): boolean;
						public constructor(param0: com.paypal.pyplcheckout.services.Repository, param1: com.paypal.pyplcheckout.services.CryptoRepository, param2: com.paypal.pyplcheckout.events.Events, param3: com.paypal.pyplcheckout.services.api.CryptoQuoteTimer, param4: com.paypal.pyplcheckout.fundingOptions.usecase.GetSelectedFundingOptionUseCase);
						public onResume(param0: androidx.lifecycle.LifecycleOwner): void;
						public onPause(param0: androidx.lifecycle.LifecycleOwner): void;
						public isCryptoPayment(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module crypto {
				export module viewmodel {
					export class CryptoViewModel_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.crypto.viewmodel.CryptoViewModel> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.crypto.viewmodel.CryptoViewModel_Factory>;
						public get(): com.paypal.pyplcheckout.crypto.viewmodel.CryptoViewModel;
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param1: javax.inject.Provider<com.paypal.pyplcheckout.services.CryptoRepository>, param2: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param3: javax.inject.Provider<com.paypal.pyplcheckout.services.api.CryptoQuoteTimer>, param4: javax.inject.Provider<com.paypal.pyplcheckout.fundingOptions.usecase.GetSelectedFundingOptionUseCase>): com.paypal.pyplcheckout.crypto.viewmodel.CryptoViewModel_Factory;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param1: javax.inject.Provider<com.paypal.pyplcheckout.services.CryptoRepository>, param2: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param3: javax.inject.Provider<com.paypal.pyplcheckout.services.api.CryptoQuoteTimer>, param4: javax.inject.Provider<com.paypal.pyplcheckout.fundingOptions.usecase.GetSelectedFundingOptionUseCase>);
						public static newInstance(param0: com.paypal.pyplcheckout.services.Repository, param1: com.paypal.pyplcheckout.services.CryptoRepository, param2: com.paypal.pyplcheckout.events.Events, param3: com.paypal.pyplcheckout.services.api.CryptoQuoteTimer, param4: com.paypal.pyplcheckout.fundingOptions.usecase.GetSelectedFundingOptionUseCase): com.paypal.pyplcheckout.crypto.viewmodel.CryptoViewModel;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module data {
				export module api {
					export class OkHttpClientFactory {
						public static class: java.lang.Class<com.paypal.pyplcheckout.data.api.OkHttpClientFactory>;
						public createOkHttpClientBuilder(): okhttp3.OkHttpClient.Builder;
						public constructor(param0: okhttp3.OkHttpClient.Builder, param1: com.paypal.pyplcheckout.services.api.interceptor.NetworkRetryInterceptor, param2: com.paypal.pyplcheckout.model.DebugConfigManager);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module data {
				export module api {
					export class OkHttpClientFactory_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.data.api.OkHttpClientFactory> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.data.api.OkHttpClientFactory_Factory>;
						public get(): com.paypal.pyplcheckout.data.api.OkHttpClientFactory;
						public static create(param0: javax.inject.Provider<okhttp3.OkHttpClient.Builder>, param1: javax.inject.Provider<com.paypal.pyplcheckout.services.api.interceptor.NetworkRetryInterceptor>, param2: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>): com.paypal.pyplcheckout.data.api.OkHttpClientFactory_Factory;
						public static newInstance(param0: okhttp3.OkHttpClient.Builder, param1: com.paypal.pyplcheckout.services.api.interceptor.NetworkRetryInterceptor, param2: com.paypal.pyplcheckout.model.DebugConfigManager): com.paypal.pyplcheckout.data.api.OkHttpClientFactory;
						public constructor(param0: javax.inject.Provider<okhttp3.OkHttpClient.Builder>, param1: javax.inject.Provider<com.paypal.pyplcheckout.services.api.interceptor.NetworkRetryInterceptor>, param2: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module data {
				export module daos {
					export class MerchantConfigDao {
						public static class: java.lang.Class<com.paypal.pyplcheckout.data.daos.MerchantConfigDao>;
						/**
						 * Constructs a new instance of the com.paypal.pyplcheckout.data.daos.MerchantConfigDao interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							setMerchantConfig(param0: com.paypal.checkout.config.CheckoutConfig): void;
							getMerchantConfig(): com.paypal.checkout.config.CheckoutConfig;
							setMerchantExtendedConfig(param0: com.paypal.pyplcheckout.providerIntegration.ExtendedCheckoutConfig): void;
							getMerchantExtendedConfig(): com.paypal.pyplcheckout.providerIntegration.ExtendedCheckoutConfig;
						});
						public constructor();
						public setMerchantConfig(param0: com.paypal.checkout.config.CheckoutConfig): void;
						public setMerchantExtendedConfig(param0: com.paypal.pyplcheckout.providerIntegration.ExtendedCheckoutConfig): void;
						public getMerchantConfig(): com.paypal.checkout.config.CheckoutConfig;
						public getMerchantExtendedConfig(): com.paypal.pyplcheckout.providerIntegration.ExtendedCheckoutConfig;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module data {
				export module daos {
					export class MerchantConfigDaoImpl extends com.paypal.pyplcheckout.data.daos.MerchantConfigDao {
						public static class: java.lang.Class<com.paypal.pyplcheckout.data.daos.MerchantConfigDaoImpl>;
						public setMerchantConfig(param0: com.paypal.checkout.config.CheckoutConfig): void;
						public setMerchantExtendedConfig(param0: com.paypal.pyplcheckout.providerIntegration.ExtendedCheckoutConfig): void;
						public constructor();
						public getMerchantConfig(): com.paypal.checkout.config.CheckoutConfig;
						public getMerchantExtendedConfig(): com.paypal.pyplcheckout.providerIntegration.ExtendedCheckoutConfig;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module data {
				export module daos {
					export class MerchantConfigDaoImpl_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.data.daos.MerchantConfigDaoImpl> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.data.daos.MerchantConfigDaoImpl_Factory>;
						public static newInstance(): com.paypal.pyplcheckout.data.daos.MerchantConfigDaoImpl;
						public constructor();
						public get(): com.paypal.pyplcheckout.data.daos.MerchantConfigDaoImpl;
						public static create(): com.paypal.pyplcheckout.data.daos.MerchantConfigDaoImpl_Factory;
					}
					export module MerchantConfigDaoImpl_Factory {
						export class InstanceHolder {
							public static class: java.lang.Class<com.paypal.pyplcheckout.data.daos.MerchantConfigDaoImpl_Factory.InstanceHolder>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module data {
				export module repositories {
					export class AuthRepository {
						public static class: java.lang.Class<com.paypal.pyplcheckout.data.repositories.AuthRepository>;
						public set1pUserAuthentication(param0: com.paypal.pyplcheckout.auth.UserAuthentication): void;
						public login(param0: com.paypal.pyplcheckout.auth.AuthHandler): void;
						public logout(param0: com.paypal.pyplcheckout.auth.AuthHandler): void;
						public constructor(param0: com.paypal.pyplcheckout.flavorauth.ThirdPartyAuth, param1: boolean);
						public getAccessToken(): string;
						public setAccessToken(param0: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module data {
				export module repositories {
					export class AuthRepository_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.data.repositories.AuthRepository> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.data.repositories.AuthRepository_Factory>;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.flavorauth.ThirdPartyAuth>, param1: javax.inject.Provider<java.lang.Boolean>);
						public static newInstance(param0: com.paypal.pyplcheckout.flavorauth.ThirdPartyAuth, param1: boolean): com.paypal.pyplcheckout.data.repositories.AuthRepository;
						public get(): com.paypal.pyplcheckout.data.repositories.AuthRepository;
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.flavorauth.ThirdPartyAuth>, param1: javax.inject.Provider<java.lang.Boolean>): com.paypal.pyplcheckout.data.repositories.AuthRepository_Factory;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module data {
				export module repositories {
					export class MerchantConfigRepository {
						public static class: java.lang.Class<com.paypal.pyplcheckout.data.repositories.MerchantConfigRepository>;
						public setMerchantConfig(param0: com.paypal.checkout.config.CheckoutConfig): void;
						public setMerchantExtendedConfig(param0: com.paypal.pyplcheckout.providerIntegration.ExtendedCheckoutConfig): void;
						public getMerchantExtendedConfig-d1pmJ48(): any;
						public setMerchantReturnURLScheme(param0: string): void;
						public getMerchantReturnURLScheme(): string;
						public getMerchantConfig-d1pmJ48(): any;
						public getUpgradeAccessToken-d1pmJ48(): any;
						public constructor(param0: com.paypal.pyplcheckout.data.daos.MerchantConfigDao);
						public setUpgradeAccessToken(param0: com.paypal.pyplcheckout.addcard.UpgradeAccessToken): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module data {
				export module repositories {
					export class MerchantConfigRepository_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.data.repositories.MerchantConfigRepository> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.data.repositories.MerchantConfigRepository_Factory>;
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.data.daos.MerchantConfigDao>): com.paypal.pyplcheckout.data.repositories.MerchantConfigRepository_Factory;
						public get(): com.paypal.pyplcheckout.data.repositories.MerchantConfigRepository;
						public static newInstance(param0: com.paypal.pyplcheckout.data.daos.MerchantConfigDao): com.paypal.pyplcheckout.data.repositories.MerchantConfigRepository;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.data.daos.MerchantConfigDao>);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module di {
				export class AndroidSDKVersionProvider {
					public static class: java.lang.Class<com.paypal.pyplcheckout.di.AndroidSDKVersionProvider>;
					public constructor();
					public getVersion(): number;
					public constructor(param0: number);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module di {
				export class AppModule {
					public static class: java.lang.Class<com.paypal.pyplcheckout.di.AppModule>;
					public providesPyplCheckoutUtils(): com.paypal.pyplcheckout.utils.PYPLCheckoutUtils;
					public providesMainLooper(): globalAndroid.os.Looper;
					public providesAmplitudeInitializer$pyplcheckout_externalThreedsRelease(param0: com.paypal.pyplcheckout.model.DebugConfigManager, param1: com.paypal.pyplcheckout.utils.AmplitudeUtils, param2: globalAndroid.content.Context): com.paypal.pyplcheckout.common.instrumentation.amplitude.logger.AmplitudeSdk;
					public providesIsDebug$pyplcheckout_externalThreedsRelease(): boolean;
					public providesBuildValidator(): com.paypal.checkout.internal.build.BuildValidator;
					public providesDebugConfigManager(): com.paypal.pyplcheckout.model.DebugConfigManager;
					public providesAmplitudeClient(): com.amplitude.api.AmplitudeClient;
					public providesIs1P$pyplcheckout_externalThreedsRelease(): boolean;
					public providesFeatureFlagManager$pyplcheckout_externalThreedsRelease(): com.paypal.pyplcheckout.ab.featureflag.FeatureFlagManager;
					public providesMainHandler(param0: globalAndroid.os.Looper): globalAndroid.os.Handler;
					public constructor();
					public providesBuildVersion(): com.paypal.pyplcheckout.di.AndroidSDKVersionProvider;
					public providesInstrumentationSession$pyplcheckout_externalThreedsRelease(): com.paypal.pyplcheckout.common.instrumentation.InstrumentationSession;
					public providesEvents(): com.paypal.pyplcheckout.events.Events;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module di {
				export class AppModule_ProvidesAmplitudeClientFactory extends dagger.internal.Factory<com.amplitude.api.AmplitudeClient> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.di.AppModule_ProvidesAmplitudeClientFactory>;
					public constructor(param0: com.paypal.pyplcheckout.di.AppModule);
					public static providesAmplitudeClient(param0: com.paypal.pyplcheckout.di.AppModule): com.amplitude.api.AmplitudeClient;
					public static create(param0: com.paypal.pyplcheckout.di.AppModule): com.paypal.pyplcheckout.di.AppModule_ProvidesAmplitudeClientFactory;
					public get(): com.amplitude.api.AmplitudeClient;
				}
				export module AppModule_ProvidesAmplitudeInitializer {
				export module AppModule_ProvidesAmplitudeClientFactory {
					export class pyplcheckout_externalThreedsReleaseFactory extends dagger.internal.Factory<com.paypal.pyplcheckout.common.instrumentation.amplitude.logger.AmplitudeSdk> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.di.AppModule_ProvidesAmplitudeInitializer.pyplcheckout_externalThreedsReleaseFactory>;
						public constructor(param0: com.paypal.pyplcheckout.di.AppModule, param1: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>, param2: javax.inject.Provider<com.paypal.pyplcheckout.utils.AmplitudeUtils>, param3: javax.inject.Provider<globalAndroid.content.Context>);
						public get(): com.paypal.pyplcheckout.common.instrumentation.amplitude.logger.AmplitudeSdk;
						public static create(param0: com.paypal.pyplcheckout.di.AppModule, param1: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>, param2: javax.inject.Provider<com.paypal.pyplcheckout.utils.AmplitudeUtils>, param3: javax.inject.Provider<globalAndroid.content.Context>): com.paypal.pyplcheckout.di.AppModule_ProvidesAmplitudeInitializer.pyplcheckout_externalThreedsReleaseFactory;
						public static providesAmplitudeInitializer$pyplcheckout_externalThreedsRelease(param0: com.paypal.pyplcheckout.di.AppModule, param1: com.paypal.pyplcheckout.model.DebugConfigManager, param2: com.paypal.pyplcheckout.utils.AmplitudeUtils, param3: globalAndroid.content.Context): com.paypal.pyplcheckout.common.instrumentation.amplitude.logger.AmplitudeSdk;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module di {
				export class AppModule_ProvidesBuildValidatorFactory extends dagger.internal.Factory<com.paypal.checkout.internal.build.BuildValidator> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.di.AppModule_ProvidesBuildValidatorFactory>;
					public get(): com.paypal.checkout.internal.build.BuildValidator;
					public static create(param0: com.paypal.pyplcheckout.di.AppModule): com.paypal.pyplcheckout.di.AppModule_ProvidesBuildValidatorFactory;
					public constructor(param0: com.paypal.pyplcheckout.di.AppModule);
					public static providesBuildValidator(param0: com.paypal.pyplcheckout.di.AppModule): com.paypal.checkout.internal.build.BuildValidator;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module di {
				export class AppModule_ProvidesBuildVersionFactory extends dagger.internal.Factory<com.paypal.pyplcheckout.di.AndroidSDKVersionProvider> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.di.AppModule_ProvidesBuildVersionFactory>;
					public constructor(param0: com.paypal.pyplcheckout.di.AppModule);
					public get(): com.paypal.pyplcheckout.di.AndroidSDKVersionProvider;
					public static create(param0: com.paypal.pyplcheckout.di.AppModule): com.paypal.pyplcheckout.di.AppModule_ProvidesBuildVersionFactory;
					public static providesBuildVersion(param0: com.paypal.pyplcheckout.di.AppModule): com.paypal.pyplcheckout.di.AndroidSDKVersionProvider;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module di {
				export class AppModule_ProvidesDebugConfigManagerFactory extends dagger.internal.Factory<com.paypal.pyplcheckout.model.DebugConfigManager> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.di.AppModule_ProvidesDebugConfigManagerFactory>;
					public get(): com.paypal.pyplcheckout.model.DebugConfigManager;
					public constructor(param0: com.paypal.pyplcheckout.di.AppModule);
					public static create(param0: com.paypal.pyplcheckout.di.AppModule): com.paypal.pyplcheckout.di.AppModule_ProvidesDebugConfigManagerFactory;
					public static providesDebugConfigManager(param0: com.paypal.pyplcheckout.di.AppModule): com.paypal.pyplcheckout.model.DebugConfigManager;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module di {
				export class AppModule_ProvidesEventsFactory extends dagger.internal.Factory<com.paypal.pyplcheckout.events.Events> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.di.AppModule_ProvidesEventsFactory>;
					public static providesEvents(param0: com.paypal.pyplcheckout.di.AppModule): com.paypal.pyplcheckout.events.Events;
					public constructor(param0: com.paypal.pyplcheckout.di.AppModule);
					public static create(param0: com.paypal.pyplcheckout.di.AppModule): com.paypal.pyplcheckout.di.AppModule_ProvidesEventsFactory;
					public get(): com.paypal.pyplcheckout.events.Events;
				}
				export module AppModule_ProvidesFeatureFlagManager {
				export module AppModule_ProvidesEventsFactory {
					export class pyplcheckout_externalThreedsReleaseFactory extends dagger.internal.Factory<com.paypal.pyplcheckout.ab.featureflag.FeatureFlagManager> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.di.AppModule_ProvidesFeatureFlagManager.pyplcheckout_externalThreedsReleaseFactory>;
						public static providesFeatureFlagManager$pyplcheckout_externalThreedsRelease(param0: com.paypal.pyplcheckout.di.AppModule): com.paypal.pyplcheckout.ab.featureflag.FeatureFlagManager;
						public constructor(param0: com.paypal.pyplcheckout.di.AppModule);
						public get(): com.paypal.pyplcheckout.ab.featureflag.FeatureFlagManager;
						public static create(param0: com.paypal.pyplcheckout.di.AppModule): com.paypal.pyplcheckout.di.AppModule_ProvidesFeatureFlagManager.pyplcheckout_externalThreedsReleaseFactory;
					}
				export module AppModule_ProvidesInstrumentationSession {
					export class pyplcheckout_externalThreedsReleaseFactory extends dagger.internal.Factory<com.paypal.pyplcheckout.common.instrumentation.InstrumentationSession> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.di.AppModule_ProvidesInstrumentationSession.pyplcheckout_externalThreedsReleaseFactory>;
						public get(): com.paypal.pyplcheckout.common.instrumentation.InstrumentationSession;
						public static providesInstrumentationSession$pyplcheckout_externalThreedsRelease(param0: com.paypal.pyplcheckout.di.AppModule): com.paypal.pyplcheckout.common.instrumentation.InstrumentationSession;
						public constructor(param0: com.paypal.pyplcheckout.di.AppModule);
						public static create(param0: com.paypal.pyplcheckout.di.AppModule): com.paypal.pyplcheckout.di.AppModule_ProvidesInstrumentationSession.pyplcheckout_externalThreedsReleaseFactory;
					}
				export module AppModule_ProvidesIs1P {
					export class pyplcheckout_externalThreedsReleaseFactory extends dagger.internal.Factory<java.lang.Boolean> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.di.AppModule_ProvidesIs1P.pyplcheckout_externalThreedsReleaseFactory>;
						public constructor(param0: com.paypal.pyplcheckout.di.AppModule);
						public static providesIs1P$pyplcheckout_externalThreedsRelease(param0: com.paypal.pyplcheckout.di.AppModule): boolean;
						public static create(param0: com.paypal.pyplcheckout.di.AppModule): com.paypal.pyplcheckout.di.AppModule_ProvidesIs1P.pyplcheckout_externalThreedsReleaseFactory;
						public get(): java.lang.Boolean;
					}
				export module AppModule_ProvidesIsDebug {
					export class pyplcheckout_externalThreedsReleaseFactory extends dagger.internal.Factory<java.lang.Boolean> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.di.AppModule_ProvidesIsDebug.pyplcheckout_externalThreedsReleaseFactory>;
						public static providesIsDebug$pyplcheckout_externalThreedsRelease(param0: com.paypal.pyplcheckout.di.AppModule): boolean;
						public constructor(param0: com.paypal.pyplcheckout.di.AppModule);
						public static create(param0: com.paypal.pyplcheckout.di.AppModule): com.paypal.pyplcheckout.di.AppModule_ProvidesIsDebug.pyplcheckout_externalThreedsReleaseFactory;
						public get(): java.lang.Boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module di {
				export class AppModule_ProvidesMainHandlerFactory extends dagger.internal.Factory<globalAndroid.os.Handler> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.di.AppModule_ProvidesMainHandlerFactory>;
					public static providesMainHandler(param0: com.paypal.pyplcheckout.di.AppModule, param1: globalAndroid.os.Looper): globalAndroid.os.Handler;
					public get(): globalAndroid.os.Handler;
					public constructor(param0: com.paypal.pyplcheckout.di.AppModule, param1: javax.inject.Provider<globalAndroid.os.Looper>);
					public static create(param0: com.paypal.pyplcheckout.di.AppModule, param1: javax.inject.Provider<globalAndroid.os.Looper>): com.paypal.pyplcheckout.di.AppModule_ProvidesMainHandlerFactory;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module di {
				export class AppModule_ProvidesMainLooperFactory extends dagger.internal.Factory<globalAndroid.os.Looper> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.di.AppModule_ProvidesMainLooperFactory>;
					public constructor(param0: com.paypal.pyplcheckout.di.AppModule);
					public static providesMainLooper(param0: com.paypal.pyplcheckout.di.AppModule): globalAndroid.os.Looper;
					public get(): globalAndroid.os.Looper;
					public static create(param0: com.paypal.pyplcheckout.di.AppModule): com.paypal.pyplcheckout.di.AppModule_ProvidesMainLooperFactory;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module di {
				export class AppModule_ProvidesPyplCheckoutUtilsFactory extends dagger.internal.Factory<com.paypal.pyplcheckout.utils.PYPLCheckoutUtils> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.di.AppModule_ProvidesPyplCheckoutUtilsFactory>;
					public get(): com.paypal.pyplcheckout.utils.PYPLCheckoutUtils;
					public constructor(param0: com.paypal.pyplcheckout.di.AppModule);
					public static providesPyplCheckoutUtils(param0: com.paypal.pyplcheckout.di.AppModule): com.paypal.pyplcheckout.utils.PYPLCheckoutUtils;
					public static create(param0: com.paypal.pyplcheckout.di.AppModule): com.paypal.pyplcheckout.di.AppModule_ProvidesPyplCheckoutUtilsFactory;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module di {
				export class CoroutinesModule {
					public static class: java.lang.Class<com.paypal.pyplcheckout.di.CoroutinesModule>;
					public providesIODispatcher(): kotlinx.coroutines.CoroutineDispatcher;
					public providesDefaultDispatcher(): kotlinx.coroutines.CoroutineDispatcher;
					public constructor();
					public providesMainCoroutineContextChild(): any;
					public providesSupervisorIODispatcher(): kotlinx.coroutines.CoroutineScope;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module di {
				export class CoroutinesModule_ProvidesDefaultDispatcherFactory extends dagger.internal.Factory<kotlinx.coroutines.CoroutineDispatcher> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.di.CoroutinesModule_ProvidesDefaultDispatcherFactory>;
					public static create(param0: com.paypal.pyplcheckout.di.CoroutinesModule): com.paypal.pyplcheckout.di.CoroutinesModule_ProvidesDefaultDispatcherFactory;
					public constructor(param0: com.paypal.pyplcheckout.di.CoroutinesModule);
					public static providesDefaultDispatcher(param0: com.paypal.pyplcheckout.di.CoroutinesModule): kotlinx.coroutines.CoroutineDispatcher;
					public get(): kotlinx.coroutines.CoroutineDispatcher;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module di {
				export class CoroutinesModule_ProvidesIODispatcherFactory extends dagger.internal.Factory<kotlinx.coroutines.CoroutineDispatcher> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.di.CoroutinesModule_ProvidesIODispatcherFactory>;
					public static create(param0: com.paypal.pyplcheckout.di.CoroutinesModule): com.paypal.pyplcheckout.di.CoroutinesModule_ProvidesIODispatcherFactory;
					public static providesIODispatcher(param0: com.paypal.pyplcheckout.di.CoroutinesModule): kotlinx.coroutines.CoroutineDispatcher;
					public constructor(param0: com.paypal.pyplcheckout.di.CoroutinesModule);
					public get(): kotlinx.coroutines.CoroutineDispatcher;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module di {
				export class CoroutinesModule_ProvidesMainCoroutineContextChildFactory extends dagger.internal.Factory<any> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.di.CoroutinesModule_ProvidesMainCoroutineContextChildFactory>;
					public static create(param0: com.paypal.pyplcheckout.di.CoroutinesModule): com.paypal.pyplcheckout.di.CoroutinesModule_ProvidesMainCoroutineContextChildFactory;
					public static providesMainCoroutineContextChild(param0: com.paypal.pyplcheckout.di.CoroutinesModule): any;
					public constructor(param0: com.paypal.pyplcheckout.di.CoroutinesModule);
					public get(): any;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module di {
				export class CoroutinesModule_ProvidesSupervisorIODispatcherFactory extends dagger.internal.Factory<kotlinx.coroutines.CoroutineScope> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.di.CoroutinesModule_ProvidesSupervisorIODispatcherFactory>;
					public get(): kotlinx.coroutines.CoroutineScope;
					public constructor(param0: com.paypal.pyplcheckout.di.CoroutinesModule);
					public static providesSupervisorIODispatcher(param0: com.paypal.pyplcheckout.di.CoroutinesModule): kotlinx.coroutines.CoroutineScope;
					public static create(param0: com.paypal.pyplcheckout.di.CoroutinesModule): com.paypal.pyplcheckout.di.CoroutinesModule_ProvidesSupervisorIODispatcherFactory;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module di {
				export class DaggerSdkComponent extends com.paypal.pyplcheckout.di.SdkComponent {
					public static class: java.lang.Class<com.paypal.pyplcheckout.di.DaggerSdkComponent>;
					public inject(param0: com.paypal.pyplcheckout.addressbook.view.fragments.PYPLNewShippingAddressReviewFragment): void;
					public getGetCheckoutStateUseCase(): com.paypal.pyplcheckout.state.usecase.GetCheckoutStateUseCase;
					public inject(param0: com.paypal.pyplcheckout.auth.ui.NativeAuthParentFragment): void;
					public getCache(): com.paypal.pyplcheckout.common.cache.CheckoutCache;
					public getBillingAgreementsGetBalancePrefUseCase(): com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsGetBalancePrefUseCase;
					public getInstrumentationSession(): com.paypal.pyplcheckout.common.instrumentation.InstrumentationSession;
					public getGetLocaleMetadataUseCase(): com.paypal.pyplcheckout.domain.usecase.address.GetLocaleMetadataUseCase;
					public static factory(): com.paypal.pyplcheckout.di.SdkComponent.Factory;
					public getViewModelProviderFactory(): androidx.lifecycle.ViewModelProvider.Factory;
					public getMerchantActions(): com.paypal.pyplcheckout.di.MerchantActions;
					public inject(param0: com.paypal.pyplcheckout.home.view.BaseFragment): void;
					public getBuildVersionProvider(): com.paypal.pyplcheckout.di.AndroidSDKVersionProvider;
					public getMerchantConfigRepository(): com.paypal.pyplcheckout.data.repositories.MerchantConfigRepository;
					public inject(param0: com.paypal.pyplcheckout.home.view.activities.PYPLInitiateCheckoutActivity): void;
					public getBillingAgreementsRepository(): com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsRepository;
					public getCacheConfigManager(): com.paypal.pyplcheckout.common.cache.CacheConfigManager;
					public getCacheUseCase(): com.paypal.pyplcheckout.userprofile.usecase.CacheClientIdUseCase;
					public inject(param0: com.paypal.pyplcheckout.services.callbacks.BaseCallback): void;
					public getCryptoRepo(): com.paypal.pyplcheckout.services.CryptoRepository;
					public getBuildValidator(): com.paypal.checkout.internal.build.BuildValidator;
					public getCheckoutStateRepository(): com.paypal.pyplcheckout.state.data.repositories.CheckoutStateRepository;
					public getConnectivityHandler(): com.paypal.pyplcheckout.network.ConnectivityHandler;
					public getCreateOrderActions(): com.paypal.checkout.createorder.CreateOrderActions;
					public getRepository(): com.paypal.pyplcheckout.services.Repository;
					public static create(param0: globalAndroid.app.Application): com.paypal.pyplcheckout.di.SdkComponent;
					public getAuthRepository(): com.paypal.pyplcheckout.data.repositories.AuthRepository;
					public getRetrieveFundingEligibilityAction(): com.paypal.checkout.fundingeligibility.RetrieveFundingEligibilityAction;
					public getSetCheckoutStateUseCase(): com.paypal.pyplcheckout.state.usecase.SetCheckoutStateUseCase;
					public static getInstance(): com.paypal.pyplcheckout.di.SdkComponent;
					public inject(param0: com.paypal.pyplcheckout.home.view.fragments.HomeFragment): void;
					public getAmplitudeManager(): com.paypal.pyplcheckout.common.instrumentation.AmplitudeManager;
					public inject(param0: com.paypal.pyplcheckout.addressbook.view.fragments.PYPLAddressRecommendationFragment): void;
					public inject(param0: com.paypal.pyplcheckout.threeds.ThreeDS20Activity): void;
					public inject(param0: com.paypal.pyplcheckout.home.view.activities.PYPLHomeActivity): void;
				}
				export module DaggerSdkComponent {
					export class Factory extends com.paypal.pyplcheckout.di.SdkComponent.Factory {
						public static class: java.lang.Class<com.paypal.pyplcheckout.di.DaggerSdkComponent.Factory>;
						public create(param0: globalAndroid.content.Context): com.paypal.pyplcheckout.di.SdkComponent;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module di {
				export class DaoModule {
					public static class: java.lang.Class<com.paypal.pyplcheckout.di.DaoModule>;
					/**
					 * Constructs a new instance of the com.paypal.pyplcheckout.di.DaoModule interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						provideMerchantConfigDao(param0: com.paypal.pyplcheckout.data.daos.MerchantConfigDaoImpl): com.paypal.pyplcheckout.data.daos.MerchantConfigDao;
					});
					public constructor();
					public provideMerchantConfigDao(param0: com.paypal.pyplcheckout.data.daos.MerchantConfigDaoImpl): com.paypal.pyplcheckout.data.daos.MerchantConfigDao;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module di {
				export class DeviceModule {
					public static class: java.lang.Class<com.paypal.pyplcheckout.di.DeviceModule>;
					public providesDeviceLocale(): java.util.Locale;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module di {
				export class DeviceModule_ProvidesDeviceLocaleFactory extends dagger.internal.Factory<java.util.Locale> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.di.DeviceModule_ProvidesDeviceLocaleFactory>;
					public constructor(param0: com.paypal.pyplcheckout.di.DeviceModule);
					public get(): java.util.Locale;
					public static create(param0: com.paypal.pyplcheckout.di.DeviceModule): com.paypal.pyplcheckout.di.DeviceModule_ProvidesDeviceLocaleFactory;
					public static providesDeviceLocale(param0: com.paypal.pyplcheckout.di.DeviceModule): java.util.Locale;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module di {
				export class MerchantActions {
					public static class: java.lang.Class<com.paypal.pyplcheckout.di.MerchantActions>;
					public constructor(param0: com.paypal.checkout.approve.Approval);
					public getApproval(): com.paypal.checkout.approve.Approval;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module di {
				export class MerchantActions_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.di.MerchantActions> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.di.MerchantActions_Factory>;
					public static newInstance(param0: com.paypal.checkout.approve.Approval): com.paypal.pyplcheckout.di.MerchantActions;
					public constructor(param0: javax.inject.Provider<com.paypal.checkout.approve.Approval>);
					public static create(param0: javax.inject.Provider<com.paypal.checkout.approve.Approval>): com.paypal.pyplcheckout.di.MerchantActions_Factory;
					public get(): com.paypal.pyplcheckout.di.MerchantActions;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module di {
				export class NetworkModule {
					public static class: java.lang.Class<com.paypal.pyplcheckout.di.NetworkModule>;
					public providesGsonBuilder(): com.google.gson.GsonBuilder;
					public providesOkHttpClient(): okhttp3.OkHttpClient;
					public constructor();
					public providesOkHttpClientFactory(param0: okhttp3.OkHttpClient.Builder, param1: com.paypal.pyplcheckout.services.api.interceptor.NetworkRetryInterceptor, param2: com.paypal.pyplcheckout.model.DebugConfigManager): com.paypal.pyplcheckout.data.api.OkHttpClientFactory;
					public providesOkHttpClientBuilder(): okhttp3.OkHttpClient.Builder;
					public providesRequestBuilder(): okhttp3.Request.Builder;
					public providesAuthenticatedOkHttpClient(param0: com.paypal.pyplcheckout.data.api.OkHttpClientFactory, param1: com.paypal.pyplcheckout.services.api.interceptor.AccessTokenInterceptor): okhttp3.OkHttpClient;
					public provideAccessTokenInterceptor(param0: com.paypal.pyplcheckout.data.repositories.AuthRepository): com.paypal.pyplcheckout.services.api.interceptor.AccessTokenInterceptor;
					public providesGson(): com.google.gson.Gson;
					public provideNetworkRetryInterceptor(): com.paypal.pyplcheckout.services.api.interceptor.NetworkRetryInterceptor;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module di {
				export class NetworkModule_ProvideAccessTokenInterceptorFactory extends dagger.internal.Factory<com.paypal.pyplcheckout.services.api.interceptor.AccessTokenInterceptor> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.di.NetworkModule_ProvideAccessTokenInterceptorFactory>;
					public get(): com.paypal.pyplcheckout.services.api.interceptor.AccessTokenInterceptor;
					public static create(param0: com.paypal.pyplcheckout.di.NetworkModule, param1: javax.inject.Provider<com.paypal.pyplcheckout.data.repositories.AuthRepository>): com.paypal.pyplcheckout.di.NetworkModule_ProvideAccessTokenInterceptorFactory;
					public constructor(param0: com.paypal.pyplcheckout.di.NetworkModule, param1: javax.inject.Provider<com.paypal.pyplcheckout.data.repositories.AuthRepository>);
					public static provideAccessTokenInterceptor(param0: com.paypal.pyplcheckout.di.NetworkModule, param1: com.paypal.pyplcheckout.data.repositories.AuthRepository): com.paypal.pyplcheckout.services.api.interceptor.AccessTokenInterceptor;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module di {
				export class NetworkModule_ProvideNetworkRetryInterceptorFactory extends dagger.internal.Factory<com.paypal.pyplcheckout.services.api.interceptor.NetworkRetryInterceptor> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.di.NetworkModule_ProvideNetworkRetryInterceptorFactory>;
					public constructor(param0: com.paypal.pyplcheckout.di.NetworkModule);
					public get(): com.paypal.pyplcheckout.services.api.interceptor.NetworkRetryInterceptor;
					public static provideNetworkRetryInterceptor(param0: com.paypal.pyplcheckout.di.NetworkModule): com.paypal.pyplcheckout.services.api.interceptor.NetworkRetryInterceptor;
					public static create(param0: com.paypal.pyplcheckout.di.NetworkModule): com.paypal.pyplcheckout.di.NetworkModule_ProvideNetworkRetryInterceptorFactory;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module di {
				export class NetworkModule_ProvidesAuthenticatedOkHttpClientFactory extends dagger.internal.Factory<okhttp3.OkHttpClient> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.di.NetworkModule_ProvidesAuthenticatedOkHttpClientFactory>;
					public constructor(param0: com.paypal.pyplcheckout.di.NetworkModule, param1: javax.inject.Provider<com.paypal.pyplcheckout.data.api.OkHttpClientFactory>, param2: javax.inject.Provider<com.paypal.pyplcheckout.services.api.interceptor.AccessTokenInterceptor>);
					public static create(param0: com.paypal.pyplcheckout.di.NetworkModule, param1: javax.inject.Provider<com.paypal.pyplcheckout.data.api.OkHttpClientFactory>, param2: javax.inject.Provider<com.paypal.pyplcheckout.services.api.interceptor.AccessTokenInterceptor>): com.paypal.pyplcheckout.di.NetworkModule_ProvidesAuthenticatedOkHttpClientFactory;
					public get(): okhttp3.OkHttpClient;
					public static providesAuthenticatedOkHttpClient(param0: com.paypal.pyplcheckout.di.NetworkModule, param1: com.paypal.pyplcheckout.data.api.OkHttpClientFactory, param2: com.paypal.pyplcheckout.services.api.interceptor.AccessTokenInterceptor): okhttp3.OkHttpClient;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module di {
				export class NetworkModule_ProvidesGsonBuilderFactory extends dagger.internal.Factory<com.google.gson.GsonBuilder> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.di.NetworkModule_ProvidesGsonBuilderFactory>;
					public constructor(param0: com.paypal.pyplcheckout.di.NetworkModule);
					public static providesGsonBuilder(param0: com.paypal.pyplcheckout.di.NetworkModule): com.google.gson.GsonBuilder;
					public static create(param0: com.paypal.pyplcheckout.di.NetworkModule): com.paypal.pyplcheckout.di.NetworkModule_ProvidesGsonBuilderFactory;
					public get(): com.google.gson.GsonBuilder;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module di {
				export class NetworkModule_ProvidesGsonFactory extends dagger.internal.Factory<com.google.gson.Gson> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.di.NetworkModule_ProvidesGsonFactory>;
					public constructor(param0: com.paypal.pyplcheckout.di.NetworkModule);
					public static create(param0: com.paypal.pyplcheckout.di.NetworkModule): com.paypal.pyplcheckout.di.NetworkModule_ProvidesGsonFactory;
					public static providesGson(param0: com.paypal.pyplcheckout.di.NetworkModule): com.google.gson.Gson;
					public get(): com.google.gson.Gson;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module di {
				export class NetworkModule_ProvidesOkHttpClientBuilderFactory extends dagger.internal.Factory<okhttp3.OkHttpClient.Builder> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.di.NetworkModule_ProvidesOkHttpClientBuilderFactory>;
					public get(): okhttp3.OkHttpClient.Builder;
					public constructor(param0: com.paypal.pyplcheckout.di.NetworkModule);
					public static providesOkHttpClientBuilder(param0: com.paypal.pyplcheckout.di.NetworkModule): okhttp3.OkHttpClient.Builder;
					public static create(param0: com.paypal.pyplcheckout.di.NetworkModule): com.paypal.pyplcheckout.di.NetworkModule_ProvidesOkHttpClientBuilderFactory;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module di {
				export class NetworkModule_ProvidesOkHttpClientFactory extends dagger.internal.Factory<okhttp3.OkHttpClient> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.di.NetworkModule_ProvidesOkHttpClientFactory>;
					public constructor(param0: com.paypal.pyplcheckout.di.NetworkModule);
					public get(): okhttp3.OkHttpClient;
					public static create(param0: com.paypal.pyplcheckout.di.NetworkModule): com.paypal.pyplcheckout.di.NetworkModule_ProvidesOkHttpClientFactory;
					public static providesOkHttpClient(param0: com.paypal.pyplcheckout.di.NetworkModule): okhttp3.OkHttpClient;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module di {
				export class NetworkModule_ProvidesOkHttpClientFactoryFactory extends dagger.internal.Factory<com.paypal.pyplcheckout.data.api.OkHttpClientFactory> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.di.NetworkModule_ProvidesOkHttpClientFactoryFactory>;
					public get(): com.paypal.pyplcheckout.data.api.OkHttpClientFactory;
					public constructor(param0: com.paypal.pyplcheckout.di.NetworkModule, param1: javax.inject.Provider<okhttp3.OkHttpClient.Builder>, param2: javax.inject.Provider<com.paypal.pyplcheckout.services.api.interceptor.NetworkRetryInterceptor>, param3: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>);
					public static create(param0: com.paypal.pyplcheckout.di.NetworkModule, param1: javax.inject.Provider<okhttp3.OkHttpClient.Builder>, param2: javax.inject.Provider<com.paypal.pyplcheckout.services.api.interceptor.NetworkRetryInterceptor>, param3: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>): com.paypal.pyplcheckout.di.NetworkModule_ProvidesOkHttpClientFactoryFactory;
					public static providesOkHttpClientFactory(param0: com.paypal.pyplcheckout.di.NetworkModule, param1: okhttp3.OkHttpClient.Builder, param2: com.paypal.pyplcheckout.services.api.interceptor.NetworkRetryInterceptor, param3: com.paypal.pyplcheckout.model.DebugConfigManager): com.paypal.pyplcheckout.data.api.OkHttpClientFactory;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module di {
				export class NetworkModule_ProvidesRequestBuilderFactory extends dagger.internal.Factory<okhttp3.Request.Builder> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.di.NetworkModule_ProvidesRequestBuilderFactory>;
					public constructor(param0: com.paypal.pyplcheckout.di.NetworkModule);
					public get(): okhttp3.Request.Builder;
					public static providesRequestBuilder(param0: com.paypal.pyplcheckout.di.NetworkModule): okhttp3.Request.Builder;
					public static create(param0: com.paypal.pyplcheckout.di.NetworkModule): com.paypal.pyplcheckout.di.NetworkModule_ProvidesRequestBuilderFactory;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module di {
				export class SdkComponent {
					public static class: java.lang.Class<com.paypal.pyplcheckout.di.SdkComponent>;
					/**
					 * Constructs a new instance of the com.paypal.pyplcheckout.di.SdkComponent interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						inject(param0: com.paypal.pyplcheckout.home.view.activities.PYPLHomeActivity): void;
						inject(param0: com.paypal.pyplcheckout.home.view.activities.PYPLInitiateCheckoutActivity): void;
						inject(param0: com.paypal.pyplcheckout.home.view.BaseFragment): void;
						inject(param0: com.paypal.pyplcheckout.home.view.fragments.HomeFragment): void;
						inject(param0: com.paypal.pyplcheckout.auth.ui.NativeAuthParentFragment): void;
						inject(param0: com.paypal.pyplcheckout.threeds.ThreeDS20Activity): void;
						inject(param0: com.paypal.pyplcheckout.services.callbacks.BaseCallback): void;
						inject(param0: com.paypal.pyplcheckout.addressbook.view.fragments.PYPLNewShippingAddressReviewFragment): void;
						inject(param0: com.paypal.pyplcheckout.addressbook.view.fragments.PYPLAddressRecommendationFragment): void;
						getConnectivityHandler(): com.paypal.pyplcheckout.network.ConnectivityHandler;
						getRepository(): com.paypal.pyplcheckout.services.Repository;
						getCryptoRepo(): com.paypal.pyplcheckout.services.CryptoRepository;
						getViewModelProviderFactory(): androidx.lifecycle.ViewModelProvider.Factory;
						getRetrieveFundingEligibilityAction(): com.paypal.checkout.fundingeligibility.RetrieveFundingEligibilityAction;
						getCreateOrderActions(): com.paypal.checkout.createorder.CreateOrderActions;
						getBuildValidator(): com.paypal.checkout.internal.build.BuildValidator;
						getMerchantActions(): com.paypal.pyplcheckout.di.MerchantActions;
						getBuildVersionProvider(): com.paypal.pyplcheckout.di.AndroidSDKVersionProvider;
						getInstrumentationSession(): com.paypal.pyplcheckout.common.instrumentation.InstrumentationSession;
						getAmplitudeManager(): com.paypal.pyplcheckout.common.instrumentation.AmplitudeManager;
						getCache(): com.paypal.pyplcheckout.common.cache.CheckoutCache;
						getCacheConfigManager(): com.paypal.pyplcheckout.common.cache.CacheConfigManager;
						getMerchantConfigRepository(): com.paypal.pyplcheckout.data.repositories.MerchantConfigRepository;
						getBillingAgreementsRepository(): com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsRepository;
						getBillingAgreementsGetBalancePrefUseCase(): com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsGetBalancePrefUseCase;
						getAuthRepository(): com.paypal.pyplcheckout.data.repositories.AuthRepository;
						getGetLocaleMetadataUseCase(): com.paypal.pyplcheckout.domain.usecase.address.GetLocaleMetadataUseCase;
						getCheckoutStateRepository(): com.paypal.pyplcheckout.state.data.repositories.CheckoutStateRepository;
						getGetCheckoutStateUseCase(): com.paypal.pyplcheckout.state.usecase.GetCheckoutStateUseCase;
						getSetCheckoutStateUseCase(): com.paypal.pyplcheckout.state.usecase.SetCheckoutStateUseCase;
						getCacheUseCase(): com.paypal.pyplcheckout.userprofile.usecase.CacheClientIdUseCase;
						create(param0: globalAndroid.app.Application): com.paypal.pyplcheckout.di.SdkComponent;
						getInstance(): com.paypal.pyplcheckout.di.SdkComponent;
						<clinit>(): void;
					});
					public constructor();
					public inject(param0: com.paypal.pyplcheckout.addressbook.view.fragments.PYPLNewShippingAddressReviewFragment): void;
					public getGetCheckoutStateUseCase(): com.paypal.pyplcheckout.state.usecase.GetCheckoutStateUseCase;
					public inject(param0: com.paypal.pyplcheckout.auth.ui.NativeAuthParentFragment): void;
					public getCache(): com.paypal.pyplcheckout.common.cache.CheckoutCache;
					public getBillingAgreementsGetBalancePrefUseCase(): com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsGetBalancePrefUseCase;
					public getInstrumentationSession(): com.paypal.pyplcheckout.common.instrumentation.InstrumentationSession;
					public getGetLocaleMetadataUseCase(): com.paypal.pyplcheckout.domain.usecase.address.GetLocaleMetadataUseCase;
					public getViewModelProviderFactory(): androidx.lifecycle.ViewModelProvider.Factory;
					public getMerchantActions(): com.paypal.pyplcheckout.di.MerchantActions;
					public inject(param0: com.paypal.pyplcheckout.home.view.BaseFragment): void;
					public getBuildVersionProvider(): com.paypal.pyplcheckout.di.AndroidSDKVersionProvider;
					public getMerchantConfigRepository(): com.paypal.pyplcheckout.data.repositories.MerchantConfigRepository;
					public inject(param0: com.paypal.pyplcheckout.home.view.activities.PYPLInitiateCheckoutActivity): void;
					public getBillingAgreementsRepository(): com.paypal.pyplcheckout.billingagreements.repo.BillingAgreementsRepository;
					public getCacheConfigManager(): com.paypal.pyplcheckout.common.cache.CacheConfigManager;
					public getCacheUseCase(): com.paypal.pyplcheckout.userprofile.usecase.CacheClientIdUseCase;
					public inject(param0: com.paypal.pyplcheckout.services.callbacks.BaseCallback): void;
					public getCryptoRepo(): com.paypal.pyplcheckout.services.CryptoRepository;
					public getBuildValidator(): com.paypal.checkout.internal.build.BuildValidator;
					public getCheckoutStateRepository(): com.paypal.pyplcheckout.state.data.repositories.CheckoutStateRepository;
					public getConnectivityHandler(): com.paypal.pyplcheckout.network.ConnectivityHandler;
					public getCreateOrderActions(): com.paypal.checkout.createorder.CreateOrderActions;
					public getRepository(): com.paypal.pyplcheckout.services.Repository;
					public static create(param0: globalAndroid.app.Application): com.paypal.pyplcheckout.di.SdkComponent;
					public getAuthRepository(): com.paypal.pyplcheckout.data.repositories.AuthRepository;
					public getRetrieveFundingEligibilityAction(): com.paypal.checkout.fundingeligibility.RetrieveFundingEligibilityAction;
					public getSetCheckoutStateUseCase(): com.paypal.pyplcheckout.state.usecase.SetCheckoutStateUseCase;
					public static getInstance(): com.paypal.pyplcheckout.di.SdkComponent;
					public inject(param0: com.paypal.pyplcheckout.home.view.fragments.HomeFragment): void;
					public getAmplitudeManager(): com.paypal.pyplcheckout.common.instrumentation.AmplitudeManager;
					public inject(param0: com.paypal.pyplcheckout.addressbook.view.fragments.PYPLAddressRecommendationFragment): void;
					public inject(param0: com.paypal.pyplcheckout.threeds.ThreeDS20Activity): void;
					public inject(param0: com.paypal.pyplcheckout.home.view.activities.PYPLHomeActivity): void;
				}
				export module SdkComponent {
					export class Companion {
						public static class: java.lang.Class<com.paypal.pyplcheckout.di.SdkComponent.Companion>;
						public getInstance(): com.paypal.pyplcheckout.di.SdkComponent;
						public create(param0: globalAndroid.app.Application): com.paypal.pyplcheckout.di.SdkComponent;
					}
					export class Factory {
						public static class: java.lang.Class<com.paypal.pyplcheckout.di.SdkComponent.Factory>;
						/**
						 * Constructs a new instance of the com.paypal.pyplcheckout.di.SdkComponent$Factory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							create(param0: globalAndroid.content.Context): com.paypal.pyplcheckout.di.SdkComponent;
						});
						public constructor();
						public create(param0: globalAndroid.content.Context): com.paypal.pyplcheckout.di.SdkComponent;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module di {
				export class ThirdPartyAuthModule {
					public static class: java.lang.Class<com.paypal.pyplcheckout.di.ThirdPartyAuthModule>;
					/**
					 * Constructs a new instance of the com.paypal.pyplcheckout.di.ThirdPartyAuthModule interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						provideUserAuthentication(param0: com.paypal.pyplcheckout.flavorauth.ThirdPartyAuth): com.paypal.pyplcheckout.auth.UserAuthentication;
					});
					public constructor();
					public provideUserAuthentication(param0: com.paypal.pyplcheckout.flavorauth.ThirdPartyAuth): com.paypal.pyplcheckout.auth.UserAuthentication;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module di {
				export module viewmodel {
					export class CustomViewModelFactory {
						public static class: java.lang.Class<com.paypal.pyplcheckout.di.viewmodel.CustomViewModelFactory>;
						public constructor(param0: java.util.Map<java.lang.Class<any>,javax.inject.Provider<androidx.lifecycle.ViewModel>>);
						public create(param0: java.lang.Class<any>): androidx.lifecycle.ViewModel;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module di {
				export module viewmodel {
					export class CustomViewModelFactory_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.di.viewmodel.CustomViewModelFactory> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.di.viewmodel.CustomViewModelFactory_Factory>;
						public constructor(param0: javax.inject.Provider<java.util.Map<java.lang.Class<any>,javax.inject.Provider<androidx.lifecycle.ViewModel>>>);
						public static newInstance(param0: java.util.Map<java.lang.Class<any>,javax.inject.Provider<androidx.lifecycle.ViewModel>>): com.paypal.pyplcheckout.di.viewmodel.CustomViewModelFactory;
						public static create(param0: javax.inject.Provider<java.util.Map<java.lang.Class<any>,javax.inject.Provider<androidx.lifecycle.ViewModel>>>): com.paypal.pyplcheckout.di.viewmodel.CustomViewModelFactory_Factory;
						public get(): com.paypal.pyplcheckout.di.viewmodel.CustomViewModelFactory;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module di {
				export module viewmodel {
					export class ViewModelKey {
						public static class: java.lang.Class<com.paypal.pyplcheckout.di.viewmodel.ViewModelKey>;
						/**
						 * Constructs a new instance of the com.paypal.pyplcheckout.di.viewmodel.ViewModelKey interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							value(): java.lang.Class<any>;
						});
						public constructor();
						public value(): java.lang.Class<any>;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module di {
				export module viewmodel {
					export abstract class ViewModelModule {
						public static class: java.lang.Class<com.paypal.pyplcheckout.di.viewmodel.ViewModelModule>;
						public provideBillingAgreementsViewModel(param0: com.paypal.pyplcheckout.billingagreements.viewmodel.BillingAgreementsViewModel): androidx.lifecycle.ViewModel;
						public constructor();
						public bindViewModelFactory(param0: com.paypal.pyplcheckout.di.viewmodel.CustomViewModelFactory): androidx.lifecycle.ViewModelProvider.Factory;
						public provideAddressAutoCompleteViewModel(param0: com.paypal.pyplcheckout.addshipping.AddressAutoCompleteViewModel): androidx.lifecycle.ViewModel;
						public provideAddressReviewViewModel(param0: com.paypal.pyplcheckout.addressbook.viewmodel.AddressReviewViewModel): androidx.lifecycle.ViewModel;
						public provideUserViewModel(param0: com.paypal.pyplcheckout.userprofile.viewModel.UserViewModel): androidx.lifecycle.ViewModel;
						public provideAvailableBalanceViewModel(param0: com.paypal.pyplcheckout.home.view.customviews.availablebalance.AvailableBalanceViewModel): androidx.lifecycle.ViewModel;
						public provideCancelViewModel(param0: com.paypal.pyplcheckout.viewmodels.CancelViewModel): androidx.lifecycle.ViewModel;
						public provideAddCardViewModel(param0: com.paypal.pyplcheckout.addcard.AddCardViewModel): androidx.lifecycle.ViewModel;
						public provideMainPaysheetViewModel(param0: com.paypal.pyplcheckout.home.viewmodel.MainPaysheetViewModel): androidx.lifecycle.ViewModel;
						public provideFundingOptionsViewModel(param0: com.paypal.pyplcheckout.fundingOptions.viewModel.FundingOptionsViewModel): androidx.lifecycle.ViewModel;
						public provideCryptoQuoteViewModel(param0: com.paypal.pyplcheckout.crypto.viewmodel.CryptoViewModel): androidx.lifecycle.ViewModel;
						public provideCartViewModel(param0: com.paypal.pyplcheckout.home.viewmodel.CartViewModel): androidx.lifecycle.ViewModel;
						public provideAddressRecommendationViewModel(param0: com.paypal.pyplcheckout.addressbook.view.AddressRecommendationViewModel): androidx.lifecycle.ViewModel;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module domain {
				export module usecase {
					export class GetMerchantConfigUseCase {
						public static class: java.lang.Class<com.paypal.pyplcheckout.domain.usecase.GetMerchantConfigUseCase>;
						public invoke-d1pmJ48(): any;
						public constructor(param0: com.paypal.pyplcheckout.data.repositories.MerchantConfigRepository);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module domain {
				export module usecase {
					export class GetMerchantConfigUseCase_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.domain.usecase.GetMerchantConfigUseCase> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.domain.usecase.GetMerchantConfigUseCase_Factory>;
						public static newInstance(param0: com.paypal.pyplcheckout.data.repositories.MerchantConfigRepository): com.paypal.pyplcheckout.domain.usecase.GetMerchantConfigUseCase;
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.data.repositories.MerchantConfigRepository>): com.paypal.pyplcheckout.domain.usecase.GetMerchantConfigUseCase_Factory;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.data.repositories.MerchantConfigRepository>);
						public get(): com.paypal.pyplcheckout.domain.usecase.GetMerchantConfigUseCase;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module domain {
				export module usecase {
					export module address {
						export class GetLocaleMetadataUseCase {
							public static class: java.lang.Class<com.paypal.pyplcheckout.domain.usecase.address.GetLocaleMetadataUseCase>;
							public constructor(param0: com.paypal.pyplcheckout.addressvalidation.AddressRepository);
							public invoke-gIAlu-s(param0: string, param1: any): any;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module domain {
				export module usecase {
					export module address {
						export class GetLocaleMetadataUseCase_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.domain.usecase.address.GetLocaleMetadataUseCase> {
							public static class: java.lang.Class<com.paypal.pyplcheckout.domain.usecase.address.GetLocaleMetadataUseCase_Factory>;
							public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.addressvalidation.AddressRepository>);
							public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.addressvalidation.AddressRepository>): com.paypal.pyplcheckout.domain.usecase.address.GetLocaleMetadataUseCase_Factory;
							public static newInstance(param0: com.paypal.pyplcheckout.addressvalidation.AddressRepository): com.paypal.pyplcheckout.domain.usecase.address.GetLocaleMetadataUseCase;
							public get(): com.paypal.pyplcheckout.domain.usecase.address.GetLocaleMetadataUseCase;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module eligibility {
				export class EligibilityManager {
					public static class: java.lang.Class<com.paypal.pyplcheckout.eligibility.EligibilityManager>;
					public shouldFallbackToCCTExperiment(): boolean;
					public createEligibilityListener(): void;
					public performEligibilityCall(): void;
					public constructor(param0: com.paypal.pyplcheckout.events.Events, param1: com.paypal.pyplcheckout.utils.PYPLCheckoutUtils, param2: com.paypal.pyplcheckout.model.DebugConfigManager, param3: com.paypal.pyplcheckout.ab.AbManager, param4: com.paypal.pyplcheckout.services.Repository);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module eligibility {
				export class EligibilityManager_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.eligibility.EligibilityManager> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.eligibility.EligibilityManager_Factory>;
					public static newInstance(param0: com.paypal.pyplcheckout.events.Events, param1: com.paypal.pyplcheckout.utils.PYPLCheckoutUtils, param2: com.paypal.pyplcheckout.model.DebugConfigManager, param3: com.paypal.pyplcheckout.ab.AbManager, param4: com.paypal.pyplcheckout.services.Repository): com.paypal.pyplcheckout.eligibility.EligibilityManager;
					public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param1: javax.inject.Provider<com.paypal.pyplcheckout.utils.PYPLCheckoutUtils>, param2: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>, param3: javax.inject.Provider<com.paypal.pyplcheckout.ab.AbManager>, param4: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>);
					public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param1: javax.inject.Provider<com.paypal.pyplcheckout.utils.PYPLCheckoutUtils>, param2: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>, param3: javax.inject.Provider<com.paypal.pyplcheckout.ab.AbManager>, param4: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>): com.paypal.pyplcheckout.eligibility.EligibilityManager_Factory;
					public get(): com.paypal.pyplcheckout.eligibility.EligibilityManager;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module eligibility {
				export class Native3pEligibilityCheck {
					public static class: java.lang.Class<com.paypal.pyplcheckout.eligibility.Native3pEligibilityCheck>;
					public constructor(param0: com.paypal.pyplcheckout.ab.AbManager);
					public is3pNativeEligible(param0: com.paypal.pyplcheckout.eligibility.Native3pEligibilityCheck.EligibilityCallback): void;
				}
				export module Native3pEligibilityCheck {
					export class EligibilityCallback {
						public static class: java.lang.Class<com.paypal.pyplcheckout.eligibility.Native3pEligibilityCheck.EligibilityCallback>;
						/**
						 * Constructs a new instance of the com.paypal.pyplcheckout.eligibility.Native3pEligibilityCheck$EligibilityCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onPassed(): void;
							onFailed(): void;
						});
						public constructor();
						public onPassed(): void;
						public onFailed(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module eligibility {
				export class Native3pEligibilityCheck_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.eligibility.Native3pEligibilityCheck> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.eligibility.Native3pEligibilityCheck_Factory>;
					public get(): com.paypal.pyplcheckout.eligibility.Native3pEligibilityCheck;
					public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.ab.AbManager>): com.paypal.pyplcheckout.eligibility.Native3pEligibilityCheck_Factory;
					public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.ab.AbManager>);
					public static newInstance(param0: com.paypal.pyplcheckout.ab.AbManager): com.paypal.pyplcheckout.eligibility.Native3pEligibilityCheck;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module events {
				export class Error<F>  extends com.paypal.pyplcheckout.events.ResultData {
					public static class: java.lang.Class<com.paypal.pyplcheckout.events.Error<any>>;
					public equals(param0: any): boolean;
					public getData(): any;
					public toString(): string;
					public component1(): any;
					public constructor(param0: any);
					public hashCode(): number;
					public copy(param0: any): com.paypal.pyplcheckout.events.Error<any>;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module events {
				export class EventListener {
					public static class: java.lang.Class<com.paypal.pyplcheckout.events.EventListener>;
					/**
					 * Constructs a new instance of the com.paypal.pyplcheckout.events.EventListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onEvent(param0: com.paypal.pyplcheckout.events.EventType, param1: com.paypal.pyplcheckout.events.ResultData): void;
					});
					public constructor();
					public onEvent(param0: com.paypal.pyplcheckout.events.EventType, param1: com.paypal.pyplcheckout.events.ResultData): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module events {
				export class EventType {
					public static class: java.lang.Class<com.paypal.pyplcheckout.events.EventType>;
					/**
					 * Constructs a new instance of the com.paypal.pyplcheckout.events.EventType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getDescription(): string;
					});
					public constructor();
					public getDescription(): string;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module events {
				export class Events {
					public static class: java.lang.Class<com.paypal.pyplcheckout.events.Events>;
					public clearAllListeners(): void;
					public register(param0: com.paypal.pyplcheckout.events.EventType): void;
					public getErrorListForEvent(param0: com.paypal.pyplcheckout.events.EventType): java.util.List<com.paypal.pyplcheckout.events.Error<any>>;
					public constructor();
					public removeListener(param0: com.paypal.pyplcheckout.events.EventType, param1: com.paypal.pyplcheckout.events.EventListener): void;
					public getLastErrorDataForEvent(param0: com.paypal.pyplcheckout.events.EventType): com.paypal.pyplcheckout.events.Error<any>;
					public static getInstance(): com.paypal.pyplcheckout.events.Events;
					public listen(param0: com.paypal.pyplcheckout.events.EventType, param1: com.paypal.pyplcheckout.events.EventListener): void;
					public doesEventExist(param0: com.paypal.pyplcheckout.events.EventType): boolean;
					public fire(param0: com.paypal.pyplcheckout.events.EventType, param1: com.paypal.pyplcheckout.events.ResultData): void;
					public register(param0: java.lang.Class<any>): void;
					public getLastSuccessDataForEvent(param0: com.paypal.pyplcheckout.events.EventType): com.paypal.pyplcheckout.events.Success<any>;
				}
				export module Events {
					export class Companion {
						public static class: java.lang.Class<com.paypal.pyplcheckout.events.Events.Companion>;
						public getInstance(): com.paypal.pyplcheckout.events.Events;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module events {
				export class ExtendedPayPalEventTypes extends com.paypal.pyplcheckout.events.EventType {
					public static class: java.lang.Class<com.paypal.pyplcheckout.events.ExtendedPayPalEventTypes>;
					public static FINISHED_FIREBASE_AUTH: com.paypal.pyplcheckout.events.ExtendedPayPalEventTypes;
					public static RECEIVED_CHECKOUT_COMPLETE_RESPONSE: com.paypal.pyplcheckout.events.ExtendedPayPalEventTypes;
					public static SPB_REQUESTED_CLOSE: com.paypal.pyplcheckout.events.ExtendedPayPalEventTypes;
					public static SHIPPING_CALLBACK_REQUEST_SENT: com.paypal.pyplcheckout.events.ExtendedPayPalEventTypes;
					public static SHIPPING_CALLBACK_RESPONSE_RECEIVED: com.paypal.pyplcheckout.events.ExtendedPayPalEventTypes;
					public static FINISHED_SETTING_SPB_PROPS: com.paypal.pyplcheckout.events.ExtendedPayPalEventTypes;
					public static KILL_APP_CANCEL_TB_TIMER: com.paypal.pyplcheckout.events.ExtendedPayPalEventTypes;
					public static INSTRUMENTATION_SENT: com.paypal.pyplcheckout.events.ExtendedPayPalEventTypes;
					public static CONTINGENCY_ERROR: com.paypal.pyplcheckout.events.ExtendedPayPalEventTypes;
					public static SDK_SHUT_DOWN: com.paypal.pyplcheckout.events.ExtendedPayPalEventTypes;
					public static valueOf(param0: string): com.paypal.pyplcheckout.events.ExtendedPayPalEventTypes;
					public getDescription(): string;
					public static values(): androidNative.Array<com.paypal.pyplcheckout.events.ExtendedPayPalEventTypes>;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module events {
				export class NetworkEventTypes extends com.paypal.pyplcheckout.events.EventType {
					public static class: java.lang.Class<com.paypal.pyplcheckout.events.NetworkEventTypes>;
					public static NETWORK_AVAILABILITY: com.paypal.pyplcheckout.events.NetworkEventTypes;
					public static valueOf(param0: string): com.paypal.pyplcheckout.events.NetworkEventTypes;
					public static values(): androidNative.Array<com.paypal.pyplcheckout.events.NetworkEventTypes>;
					public getDescription(): string;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module events {
				export class ObserversWrapper<T>  extends java.lang.Object {
					public static class: java.lang.Class<com.paypal.pyplcheckout.events.ObserversWrapper<any>>;
					public equals(param0: any): boolean;
					public toString(): string;
					public constructor(param0: java.util.Set<androidx.lifecycle.Observer<any>>, param1: java.util.concurrent.atomic.AtomicBoolean);
					public constructor();
					public getAlreadyNotified(): java.util.concurrent.atomic.AtomicBoolean;
					public getObservers(): java.util.Set<androidx.lifecycle.Observer<any>>;
					public hashCode(): number;
					public component2(): java.util.concurrent.atomic.AtomicBoolean;
					public copy(param0: java.util.Set<androidx.lifecycle.Observer<any>>, param1: java.util.concurrent.atomic.AtomicBoolean): com.paypal.pyplcheckout.events.ObserversWrapper<T>;
					public component1(): java.util.Set<androidx.lifecycle.Observer<any>>;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module events {
				export class PayPalEventTypes extends com.paypal.pyplcheckout.events.EventType {
					public static class: java.lang.Class<com.paypal.pyplcheckout.events.PayPalEventTypes>;
					public static FINISHED_CLIENT_CONFIG_UPDATE: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static FINISHED_ELIGIBILITY_CALL: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static FINISHED_USER_CHECKOUT_RESPONSE: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static FINISHED_CRYPTO_QUOTE_RESPONSE: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static FINISHED_CHECKOUT_ON_APPROVE: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static FINISHED_FINAL_ANIMATION: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static FINISHED_PRE_REVIEW_CALLS: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static FINISHED_POST_REVIEW_CALLS: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static FINISHED_POST_APPROVE_CALLS: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static FINALIZE_CHECKOUT: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static FINISH_CHECKOUT: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static START_THREE_DS_FLOW_REQUEST: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static SCA_ON_CONTINGENCY_CLEARED: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static BACK_BTN_BLOCK_REQUEST: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static CTA_BTN_BLOCK_REQUEST: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static DISABLE_VIEWS_TOUCH_INTERACTION: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static CART_DETAILS_EXPANDING: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static OUTSIDE_SCREEN_CLICK_TRIGGERED: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static CAROUSEL_ADD_CARD_POSITION_TRIGGERED: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static CAROUSEL_CREDIT_OFFER_POSITION_TRIGGERED: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static CAROUSEL_PAY_IN_FOUR_POSITION_TRIGGERED: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static CAROUSEL_FUNDING_INSTRUMENT_POSITION_TRIGGERED: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static CAROUSEL_SCROLLABILITY_CHANGE: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static CHECKOUT_BUTTON_CLICKED: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static CHECKOUT_BUTTON_UI_RENDER_REQUESTED: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static START_FRAGMENT: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static FINISH_FRAGMENT: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static FINISH_ACTIVITY_AND_SHOW_PAY_SHEET: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static START_ACTIVITY_AND_HIDE_PAY_SHEET: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static SHIPPING_CHANGES_NEW_SHIPPING_ADDRESS_SELECTED: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static SHIPPING_CHANGES_INVALID_SHIPPING_ADDRESS: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static PATCH_SHIPPING_CHANGES_ERROR: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static PATCH_SHIPPING_CHANGES_NEW_SHIPPING_ADDRESS_SELECTED: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static PATCH_SHIPPING_CHANGES_REFRESH_IS_COMPLETE: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static SHIPPING_CHANGES_REFRESH_IS_PENDING: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static SHIPPING_CHANGES_REFRESH_IS_COMPLETED: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static SHIPPING_CHANGES_INVALID_SHIPPING_METHOD: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static THREE_DS_DECISIONING_FLOW_FINISHED: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static THREE_DS_RESOLVE_CONTINGENCY_FLOW_FINISHED: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static NATIVE_CHECKOUT_PAY_SHEET_LIFE_CYCLE: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static FINISHED_APPROVE_PAYMENT_CALL: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static FETCH_USER_DATA_COMPLETE: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static CONTINGENCY_EVENT: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static THREE_DS_V1_STEP_UP_CLOSING: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static THREE_DS_V1_CANCEL_CLICKED: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static START_THREE_DS_V1_FLOW: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static USER_LOGOUT: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static CLEARED_THREE_DS_CONTINGENCIES: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static MAKE_PLANNING_CALL: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static SHOW_NATIVE_ADD_CARD: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static FUNDING_ELIGIBILITY_RESPONSE: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static NEW_SHIPPING_ADDRESS_REQUESTED: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static NEW_SHIPPING_ADDRESS_RESULT: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static CHECKOUT_PARAMS_SET: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static NATIVE_ADD_CARD_BUTTON_CLICKED: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static REFRESH_CAROUSEL: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static CTA_LOADING_SPINNER: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static VALIDATE_ADDRESS_API_REQUESTED: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static VALIDATE_ADDRESS_API_STARTED: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static VALIDATE_ADDRESS_API_FINISHED: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static START_FINAL_LOADING_ANIMATION: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static SHOW_SPINNER_BASED_ON_TREATMENT: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static FINISHED_ORIGIN_URI_PARSING: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static FETCH_USER_AND_CHECKOUT_ATTEMPTED: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static POST_AUTH_SUCCESS_HANDLER_RESPONSE: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static USER_ACCEPTED_CRYPTO_CURRENCY_CONSENT: com.paypal.pyplcheckout.events.PayPalEventTypes;
					public getDescription(): string;
					public static valueOf(param0: string): com.paypal.pyplcheckout.events.PayPalEventTypes;
					public static values(): androidNative.Array<com.paypal.pyplcheckout.events.PayPalEventTypes>;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module events {
				export abstract class ResultData {
					public static class: java.lang.Class<com.paypal.pyplcheckout.events.ResultData>;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module events {
				export class SingleLiveEvent<T>  extends androidx.lifecycle.MutableLiveData<any> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.events.SingleLiveEvent<any>>;
					public observe(param0: androidx.lifecycle.LifecycleOwner, param1: androidx.lifecycle.Observer<any>): void;
					public removeObserver(param0: androidx.lifecycle.Observer<any>): void;
					public observeForever(param0: androidx.lifecycle.Observer<any>): void;
					public constructor();
					public setValue(param0: any): void;
					public postValue(param0: any): void;
					public removeObservers(param0: androidx.lifecycle.LifecycleOwner): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module events {
				export class Success<E>  extends com.paypal.pyplcheckout.events.ResultData {
					public static class: java.lang.Class<com.paypal.pyplcheckout.events.Success<any>>;
					public equals(param0: any): boolean;
					public copy(param0: any): com.paypal.pyplcheckout.events.Success<any>;
					public getData(): any;
					public toString(): string;
					public component1(): any;
					public constructor(param0: any);
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module events {
				export module model {
					export class ActivityInfo {
						public static class: java.lang.Class<com.paypal.pyplcheckout.events.model.ActivityInfo>;
						public constructor(param0: globalAndroid.content.Intent);
						public getIntent(): globalAndroid.content.Intent;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module events {
				export module model {
					export class AddCardViewStateUpdateEvent {
						public static class: java.lang.Class<com.paypal.pyplcheckout.events.model.AddCardViewStateUpdateEvent>;
						public getListOfPaymentCards(): java.util.List<com.paypal.pyplcheckout.home.view.customviews.CardUiModel>;
						public constructor(param0: number, param1: java.util.List<any>, param2: com.paypal.pyplcheckout.home.view.customviews.CardUiModel.AddCardUiModel);
						public getAddCard(): com.paypal.pyplcheckout.home.view.customviews.CardUiModel.AddCardUiModel;
						public getAddCardPosition(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module events {
				export module model {
					export class CheckoutButtonStyleEventModel {
						public static class: java.lang.Class<com.paypal.pyplcheckout.events.model.CheckoutButtonStyleEventModel>;
						public getButtonColor(): com.paypal.pyplcheckout.home.view.customviews.ActionButtonColor;
						public isVisible(): boolean;
						public constructor(param0: boolean, param1: string, param2: com.paypal.pyplcheckout.home.view.customviews.ActionButtonColor);
						public getButtonText(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module events {
				export module model {
					export class CheckoutFinishedEventModel {
						public static class: java.lang.Class<com.paypal.pyplcheckout.events.model.CheckoutFinishedEventModel>;
						public isClickEnabled(): boolean;
						public isAddCardMode(): boolean;
						public constructor(param0: boolean, param1: boolean);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module events {
				export module model {
					export class ContingencyEventsModel {
						public static class: java.lang.Class<com.paypal.pyplcheckout.events.model.ContingencyEventsModel>;
						public getContingencyProcessingStatus(): com.paypal.pyplcheckout.events.model.ContingencyProcessingStatus;
						public getContingencyType(): com.paypal.pyplcheckout.events.model.ContingencyType;
						public isAddCardContingency(): boolean;
						public constructor(param0: com.paypal.pyplcheckout.events.model.ContingencyType, param1: com.paypal.pyplcheckout.events.model.ContingencyProcessingStatus, param2: java.lang.Exception, param3: string, param4: com.paypal.pyplcheckout.threeds.ThreeDSSource);
						public getException(): java.lang.Exception;
						public getStatus(): string;
						public getSource(): com.paypal.pyplcheckout.threeds.ThreeDSSource;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module events {
				export module model {
					export class ContingencyProcessingStatus {
						public static class: java.lang.Class<com.paypal.pyplcheckout.events.model.ContingencyProcessingStatus>;
						public static THREE_DS_JWT_1_STARTED: com.paypal.pyplcheckout.events.model.ContingencyProcessingStatus;
						public static THREE_DS_JWT_2_STARTED: com.paypal.pyplcheckout.events.model.ContingencyProcessingStatus;
						public static THREE_DS_LOOK_UP_STARTED: com.paypal.pyplcheckout.events.model.ContingencyProcessingStatus;
						public static THREE_DS_AUTHENTICATE_STARTED: com.paypal.pyplcheckout.events.model.ContingencyProcessingStatus;
						public static THREE_DS_RESOLVE_STARTED: com.paypal.pyplcheckout.events.model.ContingencyProcessingStatus;
						public static THREE_DS_JWT_1_PROCESSING: com.paypal.pyplcheckout.events.model.ContingencyProcessingStatus;
						public static THREE_DS_JWT_2_PROCESSING: com.paypal.pyplcheckout.events.model.ContingencyProcessingStatus;
						public static THREE_DS_LOOK_UP_PROCESSING: com.paypal.pyplcheckout.events.model.ContingencyProcessingStatus;
						public static THREE_DS_AUTHENTICATE_PROCESSING: com.paypal.pyplcheckout.events.model.ContingencyProcessingStatus;
						public static THREE_DS_RESOLVE_PROCESSING: com.paypal.pyplcheckout.events.model.ContingencyProcessingStatus;
						public static THREE_DS_JWT_1_SUCCESS: com.paypal.pyplcheckout.events.model.ContingencyProcessingStatus;
						public static THREE_DS_JWT_2_SUCCESS: com.paypal.pyplcheckout.events.model.ContingencyProcessingStatus;
						public static THREE_DS_LOOK_UP_SUCCESS: com.paypal.pyplcheckout.events.model.ContingencyProcessingStatus;
						public static THREE_DS_AUTHENTICATE_SUCCESS: com.paypal.pyplcheckout.events.model.ContingencyProcessingStatus;
						public static THREE_DS_RESOLVE_SUCCESS: com.paypal.pyplcheckout.events.model.ContingencyProcessingStatus;
						public static THREE_DS_JWT_1_FAILED: com.paypal.pyplcheckout.events.model.ContingencyProcessingStatus;
						public static THREE_DS_JWT_2_FAILED: com.paypal.pyplcheckout.events.model.ContingencyProcessingStatus;
						public static THREE_DS_LOOK_UP_FAILED: com.paypal.pyplcheckout.events.model.ContingencyProcessingStatus;
						public static THREE_DS_AUTHENTICATE_FAILED: com.paypal.pyplcheckout.events.model.ContingencyProcessingStatus;
						public static THREE_DS_RESOLVE_FAILED: com.paypal.pyplcheckout.events.model.ContingencyProcessingStatus;
						public static THREE_DS_SUBMIT_CLICKED: com.paypal.pyplcheckout.events.model.ContingencyProcessingStatus;
						public static THREE_DS_CANCEL_CLICKED: com.paypal.pyplcheckout.events.model.ContingencyProcessingStatus;
						public static THREE_DS_CARDINAL_V2_SUCCESS: com.paypal.pyplcheckout.events.model.ContingencyProcessingStatus;
						public static THREE_DS_UNKNOWN_FAILURE: com.paypal.pyplcheckout.events.model.ContingencyProcessingStatus;
						public static values(): androidNative.Array<com.paypal.pyplcheckout.events.model.ContingencyProcessingStatus>;
						public static valueOf(param0: string): com.paypal.pyplcheckout.events.model.ContingencyProcessingStatus;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module events {
				export module model {
					export class ContingencyType {
						public static class: java.lang.Class<com.paypal.pyplcheckout.events.model.ContingencyType>;
						public static THREE_DS_V1_CONTINGENCY: com.paypal.pyplcheckout.events.model.ContingencyType;
						public static THREE_DS_V2_CONTINGENCY: com.paypal.pyplcheckout.events.model.ContingencyType;
						public static SCA_CONTINGENCY: com.paypal.pyplcheckout.events.model.ContingencyType;
						public static values(): androidNative.Array<com.paypal.pyplcheckout.events.model.ContingencyType>;
						public static valueOf(param0: string): com.paypal.pyplcheckout.events.model.ContingencyType;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module events {
				export module model {
					export class EligibilityResultError {
						public static class: java.lang.Class<com.paypal.pyplcheckout.events.model.EligibilityResultError>;
						public getMessage(): string;
						public constructor(param0: string, param1: java.lang.Exception);
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getException(): java.lang.Exception;
						public copy(param0: string, param1: java.lang.Exception): com.paypal.pyplcheckout.events.model.EligibilityResultError;
						public component2(): java.lang.Exception;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module events {
				export module model {
					export class FragmentInfo {
						public static class: java.lang.Class<com.paypal.pyplcheckout.events.model.FragmentInfo>;
						public constructor(param0: string, param1: androidx.fragment.app.Fragment);
						public getFragmentId(): string;
						public getFragment(): androidx.fragment.app.Fragment;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module events {
				export module model {
					export class FundingInstrumentSelectedEvent {
						public static class: java.lang.Class<com.paypal.pyplcheckout.events.model.FundingInstrumentSelectedEvent>;
						public getShouldShowCrypto(): boolean;
						public getListOfPaymentCards(): java.util.List<com.paypal.pyplcheckout.home.view.customviews.CardUiModel>;
						public getSelectedFundingOptionType(): string;
						public getShouldShowBalance(): boolean;
						public getSelectedPosition(): number;
						public isShippingHidden(): boolean;
						public getSelectedFundingOptionId(): string;
						public getShouldShowConversion(): boolean;
						public constructor(param0: number, param1: number, param2: boolean, param3: boolean, param4: boolean, param5: boolean, param6: boolean, param7: string, param8: string, param9: java.util.List<any>);
						public getFundingOptionsListSize(): number;
						public isPayNowMode(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module events {
				export module model {
					export class LifeCycleInfo {
						public static class: java.lang.Class<com.paypal.pyplcheckout.events.model.LifeCycleInfo>;
						public constructor(param0: string, param1: com.paypal.pyplcheckout.events.model.LifecycleName);
						public getLifecycleName(): com.paypal.pyplcheckout.events.model.LifecycleName;
						public getViewId(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module events {
				export module model {
					export class LifecycleName {
						public static class: java.lang.Class<com.paypal.pyplcheckout.events.model.LifecycleName>;
						public getLifeCycle(): com.paypal.pyplcheckout.events.model.LifecycleName.State;
						public setLifeCycle(param0: com.paypal.pyplcheckout.events.model.LifecycleName.State): void;
						public constructor(param0: com.paypal.pyplcheckout.events.model.LifecycleName.State);
					}
					export module LifecycleName {
						export class State {
							public static class: java.lang.Class<com.paypal.pyplcheckout.events.model.LifecycleName.State>;
							public static ON_ATTACH: com.paypal.pyplcheckout.events.model.LifecycleName.State;
							public static ON_CREATE: com.paypal.pyplcheckout.events.model.LifecycleName.State;
							public static ON_CREATE_VIEW: com.paypal.pyplcheckout.events.model.LifecycleName.State;
							public static ON_ACTIVITY_CREATED: com.paypal.pyplcheckout.events.model.LifecycleName.State;
							public static ON_START: com.paypal.pyplcheckout.events.model.LifecycleName.State;
							public static ON_RESUME: com.paypal.pyplcheckout.events.model.LifecycleName.State;
							public static ON_PAUSE: com.paypal.pyplcheckout.events.model.LifecycleName.State;
							public static ON_STOP: com.paypal.pyplcheckout.events.model.LifecycleName.State;
							public static ON_DESTROY_VIEW: com.paypal.pyplcheckout.events.model.LifecycleName.State;
							public static ON_DESTROY: com.paypal.pyplcheckout.events.model.LifecycleName.State;
							public static ON_DETACH: com.paypal.pyplcheckout.events.model.LifecycleName.State;
							public static values(): androidNative.Array<com.paypal.pyplcheckout.events.model.LifecycleName.State>;
							public static valueOf(param0: string): com.paypal.pyplcheckout.events.model.LifecycleName.State;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module events {
				export module model {
					export class OfferViewStateUpdateEvent {
						public static class: java.lang.Class<com.paypal.pyplcheckout.events.model.OfferViewStateUpdateEvent>;
						public constructor(param0: string, param1: string, param2: string);
						public getTermsLink(): string;
						public getTermsText(): string;
						public getCtaText(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module exception {
				export class CheckoutCancelReason {
					public static class: java.lang.Class<com.paypal.pyplcheckout.exception.CheckoutCancelReason>;
					public static USER_CANCELLED: com.paypal.pyplcheckout.exception.CheckoutCancelReason;
					public static CHECKOUT_ERROR: com.paypal.pyplcheckout.exception.CheckoutCancelReason;
					public static values(): androidNative.Array<com.paypal.pyplcheckout.exception.CheckoutCancelReason>;
					public static valueOf(param0: string): com.paypal.pyplcheckout.exception.CheckoutCancelReason;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module exception {
				export class ExceptionTypeDescriptor {
					public static class: java.lang.Class<com.paypal.pyplcheckout.exception.ExceptionTypeDescriptor>;
					public getExceptionType(): com.paypal.pyplcheckout.exception.ExceptionTypeDescriptor.Type;
					public constructor(param0: com.paypal.pyplcheckout.exception.ExceptionTypeDescriptor.Type);
				}
				export module ExceptionTypeDescriptor {
					export class Type {
						public static class: java.lang.Class<com.paypal.pyplcheckout.exception.ExceptionTypeDescriptor.Type>;
						public static UNKNOWN_EXCEPTION: com.paypal.pyplcheckout.exception.ExceptionTypeDescriptor.Type;
						public static NETWORK_EXCEPTION: com.paypal.pyplcheckout.exception.ExceptionTypeDescriptor.Type;
						public static JSON_PARSING_EXCEPTION: com.paypal.pyplcheckout.exception.ExceptionTypeDescriptor.Type;
						public static WEB_PARAM_EXCEPTION: com.paypal.pyplcheckout.exception.ExceptionTypeDescriptor.Type;
						public static WEB_SERVER_EXCEPTION: com.paypal.pyplcheckout.exception.ExceptionTypeDescriptor.Type;
						public static OBJECT_INSTANTIATION_EXCEPTION: com.paypal.pyplcheckout.exception.ExceptionTypeDescriptor.Type;
						public static DATE_PARSING_EXCEPTION: com.paypal.pyplcheckout.exception.ExceptionTypeDescriptor.Type;
						public static NO_DATA_EXCEPTION: com.paypal.pyplcheckout.exception.ExceptionTypeDescriptor.Type;
						public static UPDATE_STATUS_FORCE_EXCEPTION: com.paypal.pyplcheckout.exception.ExceptionTypeDescriptor.Type;
						public static valueOf(param0: string): com.paypal.pyplcheckout.exception.ExceptionTypeDescriptor.Type;
						public static values(): androidNative.Array<com.paypal.pyplcheckout.exception.ExceptionTypeDescriptor.Type>;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module exception {
				export class PYPLException {
					public static class: java.lang.Class<com.paypal.pyplcheckout.exception.PYPLException>;
					public constructor(param0: string);
					public getErrorCode(): number;
					public constructor(param0: string, param1: number);
					public setExceptionTypeDescriptor(param0: com.paypal.pyplcheckout.exception.ExceptionTypeDescriptor): void;
					public setErrorCode(param0: number): void;
					public constructor(param0: number);
					public constructor(param0: com.paypal.pyplcheckout.exception.ExceptionTypeDescriptor);
					public static getAppException(param0: java.lang.Exception): com.paypal.pyplcheckout.exception.PYPLException;
					public getExceptionTypeDescriptor(): com.paypal.pyplcheckout.exception.ExceptionTypeDescriptor;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module flavorauth {
				export class ClearAccessTokenUseCase {
					public static class: java.lang.Class<com.paypal.pyplcheckout.flavorauth.ClearAccessTokenUseCase>;
					public invoke(): void;
					public constructor(param0: com.paypal.pyplcheckout.flavorauth.PartnerAuthenticationProviderFactory);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module flavorauth {
				export class ClearAccessTokenUseCase_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.flavorauth.ClearAccessTokenUseCase> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.flavorauth.ClearAccessTokenUseCase_Factory>;
					public get(): com.paypal.pyplcheckout.flavorauth.ClearAccessTokenUseCase;
					public static newInstance(param0: com.paypal.pyplcheckout.flavorauth.PartnerAuthenticationProviderFactory): com.paypal.pyplcheckout.flavorauth.ClearAccessTokenUseCase;
					public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.flavorauth.PartnerAuthenticationProviderFactory>);
					public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.flavorauth.PartnerAuthenticationProviderFactory>): com.paypal.pyplcheckout.flavorauth.ClearAccessTokenUseCase_Factory;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module flavorauth {
				export class FoundationRiskConfig {
					public static class: java.lang.Class<com.paypal.pyplcheckout.flavorauth.FoundationRiskConfig>;
					/** @deprecated */
					public setSourceApp(param0: lib.android.paypal.com.magnessdk.MagnesSource): void;
					public generatePairingIdAndNotifyDyson(param0: string, param1: java.util.Map<string,string>): void;
					public getRiskPayload(): string;
					/** @deprecated */
					public sendRiskDataToDyson(param0: string, param1: java.util.Map<string,string>): void;
					public getDysonPairingId(): string;
					public initRisk(): void;
					public constructor(param0: globalAndroid.content.Context);
					public getSourceApp(): lib.android.paypal.com.magnessdk.MagnesSource;
					public generatePairingIdAndNotifyDyson(): void;
					public getClientMetaDataId(): string;
					public generatePairingIdAndNotifyDyson(param0: java.util.Map<string,string>): void;
					public generatePairingIdAndNotifyDyson(param0: string): void;
					/** @deprecated */
					public sendRiskDataToDyson(param0: string): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module flavorauth {
				export class FoundationRiskConfig_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.flavorauth.FoundationRiskConfig> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.flavorauth.FoundationRiskConfig_Factory>;
					public constructor(param0: javax.inject.Provider<globalAndroid.content.Context>);
					public static newInstance(param0: globalAndroid.content.Context): com.paypal.pyplcheckout.flavorauth.FoundationRiskConfig;
					public get(): com.paypal.pyplcheckout.flavorauth.FoundationRiskConfig;
					public static create(param0: javax.inject.Provider<globalAndroid.content.Context>): com.paypal.pyplcheckout.flavorauth.FoundationRiskConfig_Factory;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module flavorauth {
				export class LogoutUseCase {
					public static class: java.lang.Class<com.paypal.pyplcheckout.flavorauth.LogoutUseCase>;
					public invoke(): void;
					public constructor(param0: com.paypal.pyplcheckout.flavorauth.PartnerAuthenticationProviderFactory);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module flavorauth {
				export class LogoutUseCase_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.flavorauth.LogoutUseCase> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.flavorauth.LogoutUseCase_Factory>;
					public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.flavorauth.PartnerAuthenticationProviderFactory>): com.paypal.pyplcheckout.flavorauth.LogoutUseCase_Factory;
					public static newInstance(param0: com.paypal.pyplcheckout.flavorauth.PartnerAuthenticationProviderFactory): com.paypal.pyplcheckout.flavorauth.LogoutUseCase;
					public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.flavorauth.PartnerAuthenticationProviderFactory>);
					public get(): com.paypal.pyplcheckout.flavorauth.LogoutUseCase;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module flavorauth {
				export class NativeAuthAccessTokenUseCase {
					public static class: java.lang.Class<com.paypal.pyplcheckout.flavorauth.NativeAuthAccessTokenUseCase>;
					public constructor(param0: com.paypal.pyplcheckout.flavorauth.PartnerAuthenticationProviderFactory, param1: com.paypal.pyplcheckout.flavorauth.ThirdPartyAuthPresenter);
					public invoke(param0: com.paypal.pyplcheckout.auth.AuthListener): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module flavorauth {
				export class NativeAuthAccessTokenUseCase_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.flavorauth.NativeAuthAccessTokenUseCase> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.flavorauth.NativeAuthAccessTokenUseCase_Factory>;
					public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.flavorauth.PartnerAuthenticationProviderFactory>, param1: javax.inject.Provider<com.paypal.pyplcheckout.flavorauth.ThirdPartyAuthPresenter>);
					public get(): com.paypal.pyplcheckout.flavorauth.NativeAuthAccessTokenUseCase;
					public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.flavorauth.PartnerAuthenticationProviderFactory>, param1: javax.inject.Provider<com.paypal.pyplcheckout.flavorauth.ThirdPartyAuthPresenter>): com.paypal.pyplcheckout.flavorauth.NativeAuthAccessTokenUseCase_Factory;
					public static newInstance(param0: com.paypal.pyplcheckout.flavorauth.PartnerAuthenticationProviderFactory, param1: com.paypal.pyplcheckout.flavorauth.ThirdPartyAuthPresenter): com.paypal.pyplcheckout.flavorauth.NativeAuthAccessTokenUseCase;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module flavorauth {
				export class PartnerAuthenticationProviderFactory {
					public static class: java.lang.Class<com.paypal.pyplcheckout.flavorauth.PartnerAuthenticationProviderFactory>;
					public invoke(): com.paypal.authcore.authentication.PartnerAuthenticationProvider;
					public constructor(param0: com.paypal.pyplcheckout.model.DebugConfigManager, param1: com.paypal.pyplcheckout.flavorauth.FoundationRiskConfig, param2: com.paypal.pyplcheckout.flavorauth.ThirdPartyAuthPresenter, param3: com.paypal.pyplcheckout.flavorauth.ThirdPartyTrackingDelegate);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module flavorauth {
				export class PartnerAuthenticationProviderFactory_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.flavorauth.PartnerAuthenticationProviderFactory> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.flavorauth.PartnerAuthenticationProviderFactory_Factory>;
					public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>, param1: javax.inject.Provider<com.paypal.pyplcheckout.flavorauth.FoundationRiskConfig>, param2: javax.inject.Provider<com.paypal.pyplcheckout.flavorauth.ThirdPartyAuthPresenter>, param3: javax.inject.Provider<com.paypal.pyplcheckout.flavorauth.ThirdPartyTrackingDelegate>);
					public get(): com.paypal.pyplcheckout.flavorauth.PartnerAuthenticationProviderFactory;
					public static newInstance(param0: com.paypal.pyplcheckout.model.DebugConfigManager, param1: com.paypal.pyplcheckout.flavorauth.FoundationRiskConfig, param2: com.paypal.pyplcheckout.flavorauth.ThirdPartyAuthPresenter, param3: com.paypal.pyplcheckout.flavorauth.ThirdPartyTrackingDelegate): com.paypal.pyplcheckout.flavorauth.PartnerAuthenticationProviderFactory;
					public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>, param1: javax.inject.Provider<com.paypal.pyplcheckout.flavorauth.FoundationRiskConfig>, param2: javax.inject.Provider<com.paypal.pyplcheckout.flavorauth.ThirdPartyAuthPresenter>, param3: javax.inject.Provider<com.paypal.pyplcheckout.flavorauth.ThirdPartyTrackingDelegate>): com.paypal.pyplcheckout.flavorauth.PartnerAuthenticationProviderFactory_Factory;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module flavorauth {
				export class ThirdPartyAuth extends com.paypal.pyplcheckout.auth.UserAuthentication {
					public static class: java.lang.Class<com.paypal.pyplcheckout.flavorauth.ThirdPartyAuth>;
					public static NATIVEXO_SCOPES: string;
					public static nativeXoFlowName: string;
					public getUserAccessToken(param0: com.paypal.pyplcheckout.auth.AuthListener): void;
					public getNativeOtpEnabled(): boolean;
					public constructor(param0: com.paypal.pyplcheckout.model.DebugConfigManager, param1: com.paypal.pyplcheckout.flavorauth.FoundationRiskConfig, param2: com.paypal.pyplcheckout.ab.AbManager, param3: com.paypal.pyplcheckout.data.repositories.MerchantConfigRepository, param4: com.paypal.pyplcheckout.flavorauth.NativeAuthAccessTokenUseCase, param5: com.paypal.pyplcheckout.flavorauth.UpgradeAuthAccessTokenUseCase, param6: com.paypal.pyplcheckout.flavorauth.WebBasedAuthAccessTokenUseCase, param7: com.paypal.pyplcheckout.flavorauth.LogoutUseCase, param8: com.paypal.pyplcheckout.userprofile.usecase.GetCachedClientIdUseCase);
					public logoutUser(param0: com.paypal.pyplcheckout.auth.AuthListener): void;
					public setNativeOtpEnabled(param0: boolean): void;
				}
				export module ThirdPartyAuth {
					export class Companion {
						public static class: java.lang.Class<com.paypal.pyplcheckout.flavorauth.ThirdPartyAuth.Companion>;
						public getTAG(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module flavorauth {
				export class ThirdPartyAuthFailure extends com.paypal.pyplcheckout.auth.AuthenticationFailure {
					public static class: java.lang.Class<com.paypal.pyplcheckout.flavorauth.ThirdPartyAuthFailure>;
					public constructor(param0: string, param1: java.lang.Exception);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module flavorauth {
				export class ThirdPartyAuthPresenter {
					public static class: java.lang.Class<com.paypal.pyplcheckout.flavorauth.ThirdPartyAuthPresenter>;
					public clearListeners(): void;
					public onViewDismissRequested(param0: androidx.fragment.app.Fragment, param1: boolean): void;
					public constructor();
					public onLoaderStatusChanged(param0: boolean, param1: androidx.fragment.app.Fragment): void;
					public setListeners(param0: any<any,any>, param1: any<any,any,any>, param2: any): void;
					public setLoadingListener(param0: any<any,any>): void;
					public onViewPresentRequested(param0: androidx.fragment.app.Fragment, param1: boolean): void;
					public dismissAuthFlow(): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module flavorauth {
				export class ThirdPartyAuthPresenter_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.flavorauth.ThirdPartyAuthPresenter> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.flavorauth.ThirdPartyAuthPresenter_Factory>;
					public get(): com.paypal.pyplcheckout.flavorauth.ThirdPartyAuthPresenter;
					public static newInstance(): com.paypal.pyplcheckout.flavorauth.ThirdPartyAuthPresenter;
					public constructor();
					public static create(): com.paypal.pyplcheckout.flavorauth.ThirdPartyAuthPresenter_Factory;
				}
				export module ThirdPartyAuthPresenter_Factory {
					export class InstanceHolder {
						public static class: java.lang.Class<com.paypal.pyplcheckout.flavorauth.ThirdPartyAuthPresenter_Factory.InstanceHolder>;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module flavorauth {
				export class ThirdPartyAuthSuccess extends com.paypal.pyplcheckout.auth.AuthenticationSuccess {
					public static class: java.lang.Class<com.paypal.pyplcheckout.flavorauth.ThirdPartyAuthSuccess>;
					public constructor(param0: string, param1: java.util.Map<string,any>);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module flavorauth {
				export class ThirdPartyAuth_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.flavorauth.ThirdPartyAuth> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.flavorauth.ThirdPartyAuth_Factory>;
					public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>, param1: javax.inject.Provider<com.paypal.pyplcheckout.flavorauth.FoundationRiskConfig>, param2: javax.inject.Provider<com.paypal.pyplcheckout.ab.AbManager>, param3: javax.inject.Provider<com.paypal.pyplcheckout.data.repositories.MerchantConfigRepository>, param4: javax.inject.Provider<com.paypal.pyplcheckout.flavorauth.NativeAuthAccessTokenUseCase>, param5: javax.inject.Provider<com.paypal.pyplcheckout.flavorauth.UpgradeAuthAccessTokenUseCase>, param6: javax.inject.Provider<com.paypal.pyplcheckout.flavorauth.WebBasedAuthAccessTokenUseCase>, param7: javax.inject.Provider<com.paypal.pyplcheckout.flavorauth.LogoutUseCase>, param8: javax.inject.Provider<com.paypal.pyplcheckout.userprofile.usecase.GetCachedClientIdUseCase>): com.paypal.pyplcheckout.flavorauth.ThirdPartyAuth_Factory;
					public get(): com.paypal.pyplcheckout.flavorauth.ThirdPartyAuth;
					public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>, param1: javax.inject.Provider<com.paypal.pyplcheckout.flavorauth.FoundationRiskConfig>, param2: javax.inject.Provider<com.paypal.pyplcheckout.ab.AbManager>, param3: javax.inject.Provider<com.paypal.pyplcheckout.data.repositories.MerchantConfigRepository>, param4: javax.inject.Provider<com.paypal.pyplcheckout.flavorauth.NativeAuthAccessTokenUseCase>, param5: javax.inject.Provider<com.paypal.pyplcheckout.flavorauth.UpgradeAuthAccessTokenUseCase>, param6: javax.inject.Provider<com.paypal.pyplcheckout.flavorauth.WebBasedAuthAccessTokenUseCase>, param7: javax.inject.Provider<com.paypal.pyplcheckout.flavorauth.LogoutUseCase>, param8: javax.inject.Provider<com.paypal.pyplcheckout.userprofile.usecase.GetCachedClientIdUseCase>);
					public static newInstance(param0: com.paypal.pyplcheckout.model.DebugConfigManager, param1: com.paypal.pyplcheckout.flavorauth.FoundationRiskConfig, param2: com.paypal.pyplcheckout.ab.AbManager, param3: com.paypal.pyplcheckout.data.repositories.MerchantConfigRepository, param4: com.paypal.pyplcheckout.flavorauth.NativeAuthAccessTokenUseCase, param5: com.paypal.pyplcheckout.flavorauth.UpgradeAuthAccessTokenUseCase, param6: com.paypal.pyplcheckout.flavorauth.WebBasedAuthAccessTokenUseCase, param7: com.paypal.pyplcheckout.flavorauth.LogoutUseCase, param8: com.paypal.pyplcheckout.userprofile.usecase.GetCachedClientIdUseCase): com.paypal.pyplcheckout.flavorauth.ThirdPartyAuth;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module flavorauth {
				export class ThirdPartyTrackingDelegate {
					public static class: java.lang.Class<com.paypal.pyplcheckout.flavorauth.ThirdPartyTrackingDelegate>;
					public constructor();
					public getTrackingId(): string;
					public trackEvent(param0: com.paypal.android.platform.authsdk.authcommon.analytics.TrackingEvent): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module flavorauth {
				export class ThirdPartyTrackingDelegate_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.flavorauth.ThirdPartyTrackingDelegate> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.flavorauth.ThirdPartyTrackingDelegate_Factory>;
					public static create(): com.paypal.pyplcheckout.flavorauth.ThirdPartyTrackingDelegate_Factory;
					public constructor();
					public get(): com.paypal.pyplcheckout.flavorauth.ThirdPartyTrackingDelegate;
					public static newInstance(): com.paypal.pyplcheckout.flavorauth.ThirdPartyTrackingDelegate;
				}
				export module ThirdPartyTrackingDelegate_Factory {
					export class InstanceHolder {
						public static class: java.lang.Class<com.paypal.pyplcheckout.flavorauth.ThirdPartyTrackingDelegate_Factory.InstanceHolder>;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module flavorauth {
				export class UpgradeAuthAccessTokenUseCase {
					public static class: java.lang.Class<com.paypal.pyplcheckout.flavorauth.UpgradeAuthAccessTokenUseCase>;
					public constructor(param0: com.paypal.pyplcheckout.model.DebugConfigManager, param1: com.paypal.pyplcheckout.flavorauth.PartnerAuthenticationProviderFactory);
					public invoke(param0: com.paypal.pyplcheckout.addcard.UpgradeAccessTokenListener): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module flavorauth {
				export class UpgradeAuthAccessTokenUseCase_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.flavorauth.UpgradeAuthAccessTokenUseCase> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.flavorauth.UpgradeAuthAccessTokenUseCase_Factory>;
					public get(): com.paypal.pyplcheckout.flavorauth.UpgradeAuthAccessTokenUseCase;
					public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>, param1: javax.inject.Provider<com.paypal.pyplcheckout.flavorauth.PartnerAuthenticationProviderFactory>);
					public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>, param1: javax.inject.Provider<com.paypal.pyplcheckout.flavorauth.PartnerAuthenticationProviderFactory>): com.paypal.pyplcheckout.flavorauth.UpgradeAuthAccessTokenUseCase_Factory;
					public static newInstance(param0: com.paypal.pyplcheckout.model.DebugConfigManager, param1: com.paypal.pyplcheckout.flavorauth.PartnerAuthenticationProviderFactory): com.paypal.pyplcheckout.flavorauth.UpgradeAuthAccessTokenUseCase;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module flavorauth {
				export class WebBasedAuthAccessTokenUseCase {
					public static class: java.lang.Class<com.paypal.pyplcheckout.flavorauth.WebBasedAuthAccessTokenUseCase>;
					public getAuthenticator(): com.paypal.authcore.authentication.Authenticator;
					public invoke(param0: com.paypal.pyplcheckout.auth.AuthListener): void;
					public constructor(param0: com.paypal.pyplcheckout.model.DebugConfigManager, param1: com.paypal.pyplcheckout.flavorauth.FoundationRiskConfig);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module flavorauth {
				export class WebBasedAuthAccessTokenUseCase_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.flavorauth.WebBasedAuthAccessTokenUseCase> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.flavorauth.WebBasedAuthAccessTokenUseCase_Factory>;
					public get(): com.paypal.pyplcheckout.flavorauth.WebBasedAuthAccessTokenUseCase;
					public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>, param1: javax.inject.Provider<com.paypal.pyplcheckout.flavorauth.FoundationRiskConfig>): com.paypal.pyplcheckout.flavorauth.WebBasedAuthAccessTokenUseCase_Factory;
					public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>, param1: javax.inject.Provider<com.paypal.pyplcheckout.flavorauth.FoundationRiskConfig>);
					public static newInstance(param0: com.paypal.pyplcheckout.model.DebugConfigManager, param1: com.paypal.pyplcheckout.flavorauth.FoundationRiskConfig): com.paypal.pyplcheckout.flavorauth.WebBasedAuthAccessTokenUseCase;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module flavorfirebasedb {
				export class RealTimeDB {
					public static class: java.lang.Class<com.paypal.pyplcheckout.flavorfirebasedb.RealTimeDB>;
					public sendRequest(param0: com.paypal.pyplcheckout.common.firebase.firebasemodels.FirebaseRequestModel): void;
					public sendResponse(param0: com.paypal.pyplcheckout.common.firebase.firebasemodels.FirebaseRequestModel): void;
					public clearAllResponseTimers(): void;
					public constructor();
					public getShippingCallbackRequest(param0: com.paypal.pyplcheckout.pojo.ShippingData): com.paypal.pyplcheckout.common.firebase.firebasemodels.GetPropsRequest;
					public signOutCurrentSession(): void;
					public static getInstance(): com.paypal.pyplcheckout.flavorfirebasedb.RealTimeDB;
					public static setAccessToken(param0: string): void;
				}
				export module RealTimeDB {
					export class Companion {
						public static class: java.lang.Class<com.paypal.pyplcheckout.flavorfirebasedb.RealTimeDB.Companion>;
						public getInstance(): com.paypal.pyplcheckout.flavorfirebasedb.RealTimeDB;
						public getInstance(param0: string): com.paypal.pyplcheckout.flavorfirebasedb.RealTimeDB;
						public setAccessToken(param0: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module flavornavigation {
				export class ContentRouter extends com.paypal.pyplcheckout.navigation.interfaces.IContentRouter {
					public static class: java.lang.Class<com.paypal.pyplcheckout.flavornavigation.ContentRouter>;
					public static INSTANCE: com.paypal.pyplcheckout.flavornavigation.ContentRouter;
					public reset(): void;
					public gotoFragment(param0: globalAndroid.content.Context, param1: string): void;
					public startFragment(param0: androidx.appcompat.app.AppCompatActivity, param1: number, param2: androidx.fragment.app.Fragment, param3: string): void;
					public doesFragmentNotExistOrNull(param0: string, param1: androidx.fragment.app.Fragment): boolean;
					public closeNativeAuthFlow$pyplcheckout_externalThreedsRelease(param0: androidx.appcompat.app.AppCompatActivity): void;
					public finishFragment(param0: string, param1: androidx.fragment.app.Fragment): void;
					public getFragment(param0: string): androidx.fragment.app.Fragment;
					public doesFragmentExistOrNull(param0: string, param1: androidx.fragment.app.Fragment): boolean;
					public updateFragment(param0: string, param1: androidx.fragment.app.Fragment): void;
					public addFragment(param0: string, param1: androidx.fragment.app.Fragment): void;
					public dismissNativeAuthFragment$pyplcheckout_externalThreedsRelease(param0: androidx.appcompat.app.AppCompatActivity, param1: androidx.fragment.app.Fragment, param2: boolean): void;
					public getCheckoutActivity(): java.lang.ref.WeakReference<androidx.appcompat.app.AppCompatActivity>;
					public showCurrentFragment(param0: androidx.appcompat.app.AppCompatActivity): void;
					public clear(): void;
					public setUpFragmentAnimation(param0: com.paypal.pyplcheckout.animation.base.FragmentAnimation): void;
					public onBackPressed(param0: androidx.appcompat.app.AppCompatActivity): boolean;
					public setCheckoutActivity(param0: java.lang.ref.WeakReference<androidx.appcompat.app.AppCompatActivity>): void;
					public finishActivityAndShowPaySheet(param0: androidx.appcompat.app.AppCompatActivity): void;
					public navigateBackInAuthFlow$pyplcheckout_externalThreedsRelease(): void;
					public loadNativeAuthFragment$pyplcheckout_externalThreedsRelease(param0: androidx.appcompat.app.AppCompatActivity, param1: com.paypal.pyplcheckout.auth.ui.NativeAuthScreen): void;
					public startActivityAndHidePaySheet(param0: androidx.appcompat.app.AppCompatActivity, param1: globalAndroid.content.Intent): void;
					public removeFragment(param0: string): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module fundingOptions {
				export module dao {
					export class FundingOptionsDao {
						public static class: java.lang.Class<com.paypal.pyplcheckout.fundingOptions.dao.FundingOptionsDao>;
						/**
						 * Constructs a new instance of the com.paypal.pyplcheckout.fundingOptions.dao.FundingOptionsDao interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							cacheCarouselPosition(param0: number): void;
							getCarouselPosition(): number;
							cacheSelectedFundingOption(param0: com.paypal.pyplcheckout.pojo.FundingOption): void;
							getSelectedFundingOption(): com.paypal.pyplcheckout.pojo.FundingOption;
							clear(): void;
						});
						public constructor();
						public cacheCarouselPosition(param0: number): void;
						public cacheSelectedFundingOption(param0: com.paypal.pyplcheckout.pojo.FundingOption): void;
						public getSelectedFundingOption(): com.paypal.pyplcheckout.pojo.FundingOption;
						public clear(): void;
						public getCarouselPosition(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module fundingOptions {
				export module dao {
					export class SharedPrefsFundingOptionsDao extends com.paypal.pyplcheckout.fundingOptions.dao.FundingOptionsDao {
						public static class: java.lang.Class<com.paypal.pyplcheckout.fundingOptions.dao.SharedPrefsFundingOptionsDao>;
						public cacheCarouselPosition(param0: number): void;
						public constructor(param0: globalAndroid.content.Context, param1: com.google.gson.Gson);
						public cacheSelectedFundingOption(param0: com.paypal.pyplcheckout.pojo.FundingOption): void;
						public getSelectedFundingOption(): com.paypal.pyplcheckout.pojo.FundingOption;
						public clear(): void;
						public getCarouselPosition(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module fundingOptions {
				export module dao {
					export class SharedPrefsFundingOptionsDao_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.fundingOptions.dao.SharedPrefsFundingOptionsDao> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.fundingOptions.dao.SharedPrefsFundingOptionsDao_Factory>;
						public static newInstance(param0: globalAndroid.content.Context, param1: com.google.gson.Gson): com.paypal.pyplcheckout.fundingOptions.dao.SharedPrefsFundingOptionsDao;
						public constructor(param0: javax.inject.Provider<globalAndroid.content.Context>, param1: javax.inject.Provider<com.google.gson.Gson>);
						public static create(param0: javax.inject.Provider<globalAndroid.content.Context>, param1: javax.inject.Provider<com.google.gson.Gson>): com.paypal.pyplcheckout.fundingOptions.dao.SharedPrefsFundingOptionsDao_Factory;
						public get(): com.paypal.pyplcheckout.fundingOptions.dao.SharedPrefsFundingOptionsDao;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module fundingOptions {
				export module di {
					export class FundingOptionsModule {
						public static class: java.lang.Class<com.paypal.pyplcheckout.fundingOptions.di.FundingOptionsModule>;
						/**
						 * Constructs a new instance of the com.paypal.pyplcheckout.fundingOptions.di.FundingOptionsModule interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							provideFundingOptionsDao(param0: com.paypal.pyplcheckout.fundingOptions.dao.SharedPrefsFundingOptionsDao): com.paypal.pyplcheckout.fundingOptions.dao.FundingOptionsDao;
						});
						public constructor();
						public provideFundingOptionsDao(param0: com.paypal.pyplcheckout.fundingOptions.dao.SharedPrefsFundingOptionsDao): com.paypal.pyplcheckout.fundingOptions.dao.FundingOptionsDao;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module fundingOptions {
				export module model {
					export abstract class SelectedOptionState {
						public static class: java.lang.Class<com.paypal.pyplcheckout.fundingOptions.model.SelectedOptionState>;
					}
					export module SelectedOptionState {
						export class AddCard extends com.paypal.pyplcheckout.fundingOptions.model.SelectedOptionState {
							public static class: java.lang.Class<com.paypal.pyplcheckout.fundingOptions.model.SelectedOptionState.AddCard>;
							public component1(): boolean;
							public hashCode(): number;
							public constructor(param0: boolean);
							public isNative(): boolean;
							public toString(): string;
							public equals(param0: any): boolean;
							public copy(param0: boolean): com.paypal.pyplcheckout.fundingOptions.model.SelectedOptionState.AddCard;
						}
						export class CreditsOffer extends com.paypal.pyplcheckout.fundingOptions.model.SelectedOptionState {
							public static class: java.lang.Class<com.paypal.pyplcheckout.fundingOptions.model.SelectedOptionState.CreditsOffer>;
							public constructor();
							public component1(): com.paypal.pyplcheckout.fundingOptions.model.SelectedOptionState.CreditsOffer.Type;
							public copy(param0: com.paypal.pyplcheckout.fundingOptions.model.SelectedOptionState.CreditsOffer.Type): com.paypal.pyplcheckout.fundingOptions.model.SelectedOptionState.CreditsOffer;
							public getType(): com.paypal.pyplcheckout.fundingOptions.model.SelectedOptionState.CreditsOffer.Type;
							public hashCode(): number;
							public toString(): string;
							public equals(param0: any): boolean;
							public constructor(param0: com.paypal.pyplcheckout.fundingOptions.model.SelectedOptionState.CreditsOffer.Type);
						}
						export module CreditsOffer {
							export class Type {
								public static class: java.lang.Class<com.paypal.pyplcheckout.fundingOptions.model.SelectedOptionState.CreditsOffer.Type>;
								public static CREDIT: com.paypal.pyplcheckout.fundingOptions.model.SelectedOptionState.CreditsOffer.Type;
								public static PAY_LATER: com.paypal.pyplcheckout.fundingOptions.model.SelectedOptionState.CreditsOffer.Type;
								public static values(): androidNative.Array<com.paypal.pyplcheckout.fundingOptions.model.SelectedOptionState.CreditsOffer.Type>;
								public static valueOf(param0: string): com.paypal.pyplcheckout.fundingOptions.model.SelectedOptionState.CreditsOffer.Type;
							}
						}
						export class Crypto extends com.paypal.pyplcheckout.fundingOptions.model.SelectedOptionState {
							public static class: java.lang.Class<com.paypal.pyplcheckout.fundingOptions.model.SelectedOptionState.Crypto>;
							public hashCode(): number;
							public copy(param0: com.paypal.pyplcheckout.pojo.FundingOption): com.paypal.pyplcheckout.fundingOptions.model.SelectedOptionState.Crypto;
							public getFundingOption(): com.paypal.pyplcheckout.pojo.FundingOption;
							public component1(): com.paypal.pyplcheckout.pojo.FundingOption;
							public constructor(param0: com.paypal.pyplcheckout.pojo.FundingOption);
							public toString(): string;
							public equals(param0: any): boolean;
						}
						export class None extends com.paypal.pyplcheckout.fundingOptions.model.SelectedOptionState {
							public static class: java.lang.Class<com.paypal.pyplcheckout.fundingOptions.model.SelectedOptionState.None>;
							public static INSTANCE: com.paypal.pyplcheckout.fundingOptions.model.SelectedOptionState.None;
						}
						export class PayPalBalance extends com.paypal.pyplcheckout.fundingOptions.model.SelectedOptionState {
							public static class: java.lang.Class<com.paypal.pyplcheckout.fundingOptions.model.SelectedOptionState.PayPalBalance>;
							public constructor(param0: com.paypal.pyplcheckout.pojo.FundingOption, param1: string);
							public component2(): string;
							public hashCode(): number;
							public copy(param0: com.paypal.pyplcheckout.pojo.FundingOption, param1: string): com.paypal.pyplcheckout.fundingOptions.model.SelectedOptionState.PayPalBalance;
							public getFundingOption(): com.paypal.pyplcheckout.pojo.FundingOption;
							public getLabel(): string;
							public component1(): com.paypal.pyplcheckout.pojo.FundingOption;
							public toString(): string;
							public equals(param0: any): boolean;
						}
						export class PaymentSource extends com.paypal.pyplcheckout.fundingOptions.model.SelectedOptionState {
							public static class: java.lang.Class<com.paypal.pyplcheckout.fundingOptions.model.SelectedOptionState.PaymentSource>;
							public copy(param0: com.paypal.pyplcheckout.pojo.FundingOption, param1: string, param2: string): com.paypal.pyplcheckout.fundingOptions.model.SelectedOptionState.PaymentSource;
							public component2(): string;
							public constructor(param0: com.paypal.pyplcheckout.pojo.FundingOption, param1: string, param2: string);
							public getLastDigits(): string;
							public hashCode(): number;
							public getFundingOption(): com.paypal.pyplcheckout.pojo.FundingOption;
							public getLabel(): string;
							public component1(): com.paypal.pyplcheckout.pojo.FundingOption;
							public toString(): string;
							public equals(param0: any): boolean;
							public component3(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module fundingOptions {
				export module usecase {
					export class GetSelectedFundingOptionUseCase {
						public static class: java.lang.Class<com.paypal.pyplcheckout.fundingOptions.usecase.GetSelectedFundingOptionUseCase>;
						public invoke(): kotlinx.coroutines.flow.StateFlow<com.paypal.pyplcheckout.fundingOptions.model.SelectedOptionState>;
						public constructor(param0: com.paypal.pyplcheckout.events.Events, param1: com.paypal.pyplcheckout.services.Repository, param2: kotlinx.coroutines.CoroutineScope, param3: com.paypal.pyplcheckout.addcard.usecase.GetAddCardEnabledUseCase);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module fundingOptions {
				export module usecase {
					export class GetSelectedFundingOptionUseCase_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.fundingOptions.usecase.GetSelectedFundingOptionUseCase> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.fundingOptions.usecase.GetSelectedFundingOptionUseCase_Factory>;
						public get(): com.paypal.pyplcheckout.fundingOptions.usecase.GetSelectedFundingOptionUseCase;
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param1: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param2: javax.inject.Provider<kotlinx.coroutines.CoroutineScope>, param3: javax.inject.Provider<com.paypal.pyplcheckout.addcard.usecase.GetAddCardEnabledUseCase>): com.paypal.pyplcheckout.fundingOptions.usecase.GetSelectedFundingOptionUseCase_Factory;
						public static newInstance(param0: com.paypal.pyplcheckout.events.Events, param1: com.paypal.pyplcheckout.services.Repository, param2: kotlinx.coroutines.CoroutineScope, param3: com.paypal.pyplcheckout.addcard.usecase.GetAddCardEnabledUseCase): com.paypal.pyplcheckout.fundingOptions.usecase.GetSelectedFundingOptionUseCase;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param1: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param2: javax.inject.Provider<kotlinx.coroutines.CoroutineScope>, param3: javax.inject.Provider<com.paypal.pyplcheckout.addcard.usecase.GetAddCardEnabledUseCase>);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module fundingOptions {
				export module viewModel {
					export class FundingOptionsViewModel {
						public static class: java.lang.Class<com.paypal.pyplcheckout.fundingOptions.viewModel.FundingOptionsViewModel>;
						public getSelectedCryptoCurrencySymbol(): string;
						public constructor(param0: com.paypal.pyplcheckout.events.Events, param1: com.paypal.pyplcheckout.services.Repository, param2: com.paypal.pyplcheckout.services.CryptoRepository);
						public getCryptoCurrencyValue(): string;
						public setCarouselPosition(param0: number): void;
						public getCarouselPosition(): number;
						public getSelectingFILabel(): string;
						public getSelectedFundingOptionType(): string;
						public setSelectedFundingOption(param0: number): void;
						public fetchFundingOptionsList(): java.util.List<com.paypal.pyplcheckout.pojo.FundingOption>;
						public isCryptoConsentAccepted(): boolean;
						public setSelectedFundingOption(param0: com.paypal.pyplcheckout.pojo.FundingOption): void;
						public getSelectedFundingOption(): com.paypal.pyplcheckout.pojo.FundingOption;
						public getCryptoCurrencyCode(): string;
						public getBackupFundingOption(): com.paypal.pyplcheckout.pojo.FundingInstrument;
						public shouldShowCryptoCurrencyView(): boolean;
						public setCryptoConsentAccepted(param0: boolean): void;
						public getCryptoCurrencyExchangeRate(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module fundingOptions {
				export module viewModel {
					export class FundingOptionsViewModel_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.fundingOptions.viewModel.FundingOptionsViewModel> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.fundingOptions.viewModel.FundingOptionsViewModel_Factory>;
						public get(): com.paypal.pyplcheckout.fundingOptions.viewModel.FundingOptionsViewModel;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param1: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param2: javax.inject.Provider<com.paypal.pyplcheckout.services.CryptoRepository>);
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param1: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param2: javax.inject.Provider<com.paypal.pyplcheckout.services.CryptoRepository>): com.paypal.pyplcheckout.fundingOptions.viewModel.FundingOptionsViewModel_Factory;
						public static newInstance(param0: com.paypal.pyplcheckout.events.Events, param1: com.paypal.pyplcheckout.services.Repository, param2: com.paypal.pyplcheckout.services.CryptoRepository): com.paypal.pyplcheckout.fundingOptions.viewModel.FundingOptionsViewModel;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module model {
					export class HomeViewContentPageConfig extends com.paypal.pyplcheckout.navigation.ContentPage {
						public static class: java.lang.Class<com.paypal.pyplcheckout.home.model.HomeViewContentPageConfig>;
						public setFooterContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
						public constructor();
						public getBodyContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public setHeaderContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
						public getHeaderContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
						public setBodyContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
						public getHeaderContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public getTopBannerContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public removeContentViewListeners(): void;
						public getBodyContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
						public constructor(param0: globalAndroid.content.Context, param1: androidx.fragment.app.Fragment, param2: com.paypal.pyplcheckout.navigation.ContentPage, param3: com.paypal.pyplcheckout.home.model.HomeViewListenerImpl);
						public addViewsToContainer(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param1: globalAndroid.view.ViewGroup): void;
						public removeViewsFromContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup): void;
						public getFooterContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public addViewsToContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup): void;
						public getFooterContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
						public clearHomeScreenViews(): void;
						public removeViewsFromContainer(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param1: globalAndroid.view.ViewGroup): void;
						public constructor(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param1: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param2: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param3: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>);
						public addViewsToContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup, param2: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module model {
					export class HomeViewListenerImpl extends com.paypal.pyplcheckout.home.view.interfaces.HomeViewListener {
						public static class: java.lang.Class<com.paypal.pyplcheckout.home.model.HomeViewListenerImpl>;
						public setMPayPalExpandedCartDetailsViewListener(param0: com.paypal.pyplcheckout.home.view.interfaces.PayPalExpandedCartDetailsViewListener): void;
						public onShippingNameUpdated(): void;
						public initFundingOptionSelection(param0: number): void;
						public setCurrencyPaddingViewVisible(param0: boolean): void;
						public getMPayPalShippingViewListener(): com.paypal.pyplcheckout.home.view.interfaces.PayPalShippingViewListener;
						public getMPayPalCurrencyConversionViewListener(): com.paypal.pyplcheckout.home.view.interfaces.PayPalCurrencyConversionViewListener;
						public getMPayPalCheckoutButtonClickedListener(): com.paypal.pyplcheckout.home.view.interfaces.PayPalCheckoutButtonClickedListener;
						public setMPayPalPoliciesAndRightsLinkViewListener(param0: com.paypal.pyplcheckout.home.view.interfaces.PayPalPoliciesAndRightsLinkViewListener): void;
						public onPolicyAndRightsLinkClick(): void;
						public onProfileImageHeaderClick(): void;
						public setMPayPalShippingViewListener(param0: com.paypal.pyplcheckout.home.view.interfaces.PayPalShippingViewListener): void;
						public onPayPalLogoClicked(): void;
						public onEmptyCartDetailsReceived(): void;
						public constructor();
						public setMPayPalCheckoutButtonClickedListener(param0: com.paypal.pyplcheckout.home.view.interfaces.PayPalCheckoutButtonClickedListener): void;
						public setMPayPalCurrencyConversionViewListener(param0: com.paypal.pyplcheckout.home.view.interfaces.PayPalCurrencyConversionViewListener): void;
						public getMPayPalSnappingRecyclerViewListener(): com.paypal.pyplcheckout.home.view.interfaces.PayPalSnappingRecyclerViewListener;
						public onUpdateAddCardViewState(param0: number, param1: java.util.List<any>): void;
						public onShippingMethodClickListener(): void;
						public getMPayPalCompoundHeaderViewListener(): com.paypal.pyplcheckout.home.view.interfaces.PayPalCompoundHeaderViewListener;
						public onSeeMore72HourClicked(): void;
						public onCurrencyConversionViewClickListener(): void;
						public getMPayPalPoliciesAndRightsLinkViewListener(): com.paypal.pyplcheckout.home.view.interfaces.PayPalPoliciesAndRightsLinkViewListener;
						public onCheckoutViewClicked(): void;
						public setUpInvoiceSummaryTotal(param0: string, param1: boolean): void;
						public onCartDetailsArrowClick(param0: globalAndroid.view.View, param1: number, param2: number): void;
						public setMPayPalSnappingRecyclerViewListener(param0: com.paypal.pyplcheckout.home.view.interfaces.PayPalSnappingRecyclerViewListener): void;
						public onProfileInitialsHeaderClick(): void;
						public getMPayPalExpandedCartDetailsViewListener(): com.paypal.pyplcheckout.home.view.interfaces.PayPalExpandedCartDetailsViewListener;
						public setMPayPalCompoundHeaderViewListener(param0: com.paypal.pyplcheckout.home.view.interfaces.PayPalCompoundHeaderViewListener): void;
						public onCryptoRatesAndFeesClickListener(): void;
						public onFundingInstrumentSelected(param0: number, param1: number, param2: boolean, param3: boolean, param4: boolean, param5: boolean, param6: java.util.List<any>): void;
						public onShippingViewClickListener(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export abstract class BaseActivity {
						public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.BaseActivity>;
						public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
						public onMoveToForeground(): void;
						public constructor();
						public addBreadcrumb(param0: string): void;
						public onResume(): void;
						public startFragment(param0: com.paypal.pyplcheckout.home.view.BaseActivity, param1: number, param2: com.paypal.pyplcheckout.home.view.BaseFragment, param3: string): void;
						public onStop(): void;
						public _$_clearFindViewByIdCache(): void;
						public onPause(): void;
						public _$_findCachedViewById(param0: number): globalAndroid.view.View;
						public updateInflatedContentViewsToSpecificIndex(param0: com.paypal.pyplcheckout.navigation.interfaces.IContentPage, param1: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param2: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param3: globalAndroid.view.ViewGroup, param4: com.paypal.pyplcheckout.navigation.ContainerViewTypeDescriptor, param5: number): void;
						public onDestroy(): void;
						public attachContentViewsToContainer(param0: java.util.List<any>, param1: globalAndroid.view.ViewGroup): void;
						public onCreate(param0: globalAndroid.os.Bundle): void;
						public killMe(param0: string): void;
						public handleAppBackgroundTransition(): void;
						public onAppCreated(): void;
						public onMoveToBackground(): void;
						public handleAppForegroundTransition(): void;
					}
					export module BaseActivity {
						export class Companion {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.BaseActivity.Companion>;
							public getTAG(): string;
							public wasInBackground(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export class BaseFragment implements com.paypal.pyplcheckout.navigation.interfaces.Identifiable {
						public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.BaseFragment>;
						public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
						public events: com.paypal.pyplcheckout.events.Events;
						public finishFragment(param0: string, param1: androidx.fragment.app.Fragment): void;
						public hideKeyboard(param0: globalAndroid.view.View): void;
						public getOnOutsidePaysheetClick(): any;
						public onPause(): void;
						public onDestroyView(): void;
						public onDestroy(): void;
						public attachContentViewsToContainer(param0: java.util.List<any>, param1: globalAndroid.view.ViewGroup): void;
						public onAttach(param0: globalAndroid.content.Context): void;
						public onCreate(param0: globalAndroid.os.Bundle): void;
						public showAlertToast(param0: com.paypal.pyplcheckout.home.view.customviews.alertview.AlertToast): void;
						public showKeyboard(param0: globalAndroid.content.Context): void;
						public onCreateView(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: globalAndroid.os.Bundle): globalAndroid.view.View;
						public hideKeyboard(): void;
						public constructor();
						public addBreadcrumb(param0: string): void;
						public onActivityCreated(param0: globalAndroid.os.Bundle): void;
						public onResume(): void;
						public onStop(): void;
						public getEvents(): com.paypal.pyplcheckout.events.Events;
						public _$_clearFindViewByIdCache(): void;
						public getViewId(): string;
						public _$_findCachedViewById(param0: number): globalAndroid.view.View;
						public updateInflatedContentViewsToSpecificIndex(param0: com.paypal.pyplcheckout.navigation.interfaces.IContentPage, param1: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param2: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param3: globalAndroid.view.ViewGroup, param4: com.paypal.pyplcheckout.navigation.ContainerViewTypeDescriptor, param5: number): void;
						public setEvents(param0: com.paypal.pyplcheckout.events.Events): void;
						public startFragment(param0: androidx.appcompat.app.AppCompatActivity, param1: number, param2: androidx.fragment.app.Fragment, param3: string): void;
						public onDetach(): void;
						public onStart(): void;
					}
					export module BaseFragment {
						export class Companion {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.BaseFragment.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export class BaseFragment_MembersInjector extends dagger.MembersInjector<com.paypal.pyplcheckout.home.view.BaseFragment> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.BaseFragment_MembersInjector>;
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>): dagger.MembersInjector<com.paypal.pyplcheckout.home.view.BaseFragment>;
						public static injectEvents(param0: com.paypal.pyplcheckout.home.view.BaseFragment, param1: com.paypal.pyplcheckout.events.Events): void;
						public injectMembers(param0: com.paypal.pyplcheckout.home.view.BaseFragment): void;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module activities {
						export class PYPLHomeActivity extends com.paypal.pyplcheckout.home.view.BaseActivity {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.activities.PYPLHomeActivity>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public factory: androidx.lifecycle.ViewModelProvider.Factory;
							public debugConfigManager: com.paypal.pyplcheckout.model.DebugConfigManager;
							public events: com.paypal.pyplcheckout.events.Events;
							public thirdPartyAuthPresenter: com.paypal.pyplcheckout.flavorauth.ThirdPartyAuthPresenter;
							public static IS_ACTIVITY_RECREATED: string;
							public constructor();
							public setDebugConfigManager(param0: com.paypal.pyplcheckout.model.DebugConfigManager): void;
							public getEvents(): com.paypal.pyplcheckout.events.Events;
							public onActivityResult(param0: number, param1: number, param2: globalAndroid.content.Intent): void;
							public getFactory(): androidx.lifecycle.ViewModelProvider.Factory;
							public onDestroy(): void;
							public handleAppForegroundTransition(): void;
							public setFactory(param0: androidx.lifecycle.ViewModelProvider.Factory): void;
							public onResume(): void;
							public getDebugConfigManager(): com.paypal.pyplcheckout.model.DebugConfigManager;
							public handleAppBackgroundTransition(): void;
							public killMe(param0: string): void;
							public showAlertToast(param0: com.paypal.pyplcheckout.home.view.customviews.alertview.AlertToast): void;
							public setThirdPartyAuthPresenter(param0: com.paypal.pyplcheckout.flavorauth.ThirdPartyAuthPresenter): void;
							public onCreate(param0: globalAndroid.os.Bundle): void;
							public setEvents(param0: com.paypal.pyplcheckout.events.Events): void;
							public getThirdPartyAuthPresenter(): com.paypal.pyplcheckout.flavorauth.ThirdPartyAuthPresenter;
							public _$_clearFindViewByIdCache(): void;
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public onBackPressed(): void;
						}
						export module PYPLHomeActivity {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.activities.PYPLHomeActivity.Companion>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module activities {
						export class PYPLHomeActivity_MembersInjector extends dagger.MembersInjector<com.paypal.pyplcheckout.home.view.activities.PYPLHomeActivity> {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.activities.PYPLHomeActivity_MembersInjector>;
							public static create(param0: javax.inject.Provider<androidx.lifecycle.ViewModelProvider.Factory>, param1: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>, param2: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param3: javax.inject.Provider<com.paypal.pyplcheckout.flavorauth.ThirdPartyAuthPresenter>): dagger.MembersInjector<com.paypal.pyplcheckout.home.view.activities.PYPLHomeActivity>;
							public constructor(param0: javax.inject.Provider<androidx.lifecycle.ViewModelProvider.Factory>, param1: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>, param2: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param3: javax.inject.Provider<com.paypal.pyplcheckout.flavorauth.ThirdPartyAuthPresenter>);
							public static injectDebugConfigManager(param0: com.paypal.pyplcheckout.home.view.activities.PYPLHomeActivity, param1: com.paypal.pyplcheckout.model.DebugConfigManager): void;
							public static injectFactory(param0: com.paypal.pyplcheckout.home.view.activities.PYPLHomeActivity, param1: androidx.lifecycle.ViewModelProvider.Factory): void;
							public static injectThirdPartyAuthPresenter(param0: com.paypal.pyplcheckout.home.view.activities.PYPLHomeActivity, param1: com.paypal.pyplcheckout.flavorauth.ThirdPartyAuthPresenter): void;
							public static injectEvents(param0: com.paypal.pyplcheckout.home.view.activities.PYPLHomeActivity, param1: com.paypal.pyplcheckout.events.Events): void;
							public injectMembers(param0: com.paypal.pyplcheckout.home.view.activities.PYPLHomeActivity): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module activities {
						export class PYPLInitiateCheckoutActivity extends com.paypal.pyplcheckout.home.view.BaseActivity {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.activities.PYPLInitiateCheckoutActivity>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public debugConfigManager: com.paypal.pyplcheckout.model.DebugConfigManager;
							public events: com.paypal.pyplcheckout.events.Events;
							public abManager: com.paypal.pyplcheckout.ab.AbManager;
							public constructor();
							public setDebugConfigManager(param0: com.paypal.pyplcheckout.model.DebugConfigManager): void;
							public getEvents(): com.paypal.pyplcheckout.events.Events;
							public onActivityResult(param0: number, param1: number, param2: globalAndroid.content.Intent): void;
							public onDestroy(): void;
							public handleAppForegroundTransition(): void;
							public getAbManager(): com.paypal.pyplcheckout.ab.AbManager;
							public onNewIntent(param0: globalAndroid.content.Intent): void;
							public onResume(): void;
							public getDebugConfigManager(): com.paypal.pyplcheckout.model.DebugConfigManager;
							public handleAppBackgroundTransition(): void;
							public setAbManager(param0: com.paypal.pyplcheckout.ab.AbManager): void;
							public killMe(param0: string): void;
							public onPause(): void;
							public onCreate(param0: globalAndroid.os.Bundle): void;
							public setEvents(param0: com.paypal.pyplcheckout.events.Events): void;
							public _$_clearFindViewByIdCache(): void;
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
						}
						export module PYPLInitiateCheckoutActivity {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.activities.PYPLInitiateCheckoutActivity.Companion>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module activities {
						export class PYPLInitiateCheckoutActivity_MembersInjector extends dagger.MembersInjector<com.paypal.pyplcheckout.home.view.activities.PYPLInitiateCheckoutActivity> {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.activities.PYPLInitiateCheckoutActivity_MembersInjector>;
							public injectMembers(param0: com.paypal.pyplcheckout.home.view.activities.PYPLInitiateCheckoutActivity): void;
							public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>, param1: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param2: javax.inject.Provider<com.paypal.pyplcheckout.ab.AbManager>);
							public static injectDebugConfigManager(param0: com.paypal.pyplcheckout.home.view.activities.PYPLInitiateCheckoutActivity, param1: com.paypal.pyplcheckout.model.DebugConfigManager): void;
							public static injectEvents(param0: com.paypal.pyplcheckout.home.view.activities.PYPLInitiateCheckoutActivity, param1: com.paypal.pyplcheckout.events.Events): void;
							public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>, param1: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param2: javax.inject.Provider<com.paypal.pyplcheckout.ab.AbManager>): dagger.MembersInjector<com.paypal.pyplcheckout.home.view.activities.PYPLInitiateCheckoutActivity>;
							public static injectAbManager(param0: com.paypal.pyplcheckout.home.view.activities.PYPLInitiateCheckoutActivity, param1: com.paypal.pyplcheckout.ab.AbManager): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module adapters {
						export class CarouselAdapter extends androidx.recyclerview.widget.RecyclerView.Adapter<com.paypal.pyplcheckout.home.view.adapters.CarouselAdapterViewHolder> {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.adapters.CarouselAdapter>;
							public constructor(param0: java.util.List<any>, param1: com.paypal.pyplcheckout.interfaces.HeartListener, param2: com.paypal.pyplcheckout.interfaces.SelectedListener);
							public getItemViewType(param0: number): number;
							public getItemCount(): number;
							public onBindViewHolder(param0: com.paypal.pyplcheckout.home.view.adapters.CarouselAdapterViewHolder, param1: number): void;
							public onCreateViewHolder(param0: globalAndroid.view.ViewGroup, param1: number): com.paypal.pyplcheckout.home.view.adapters.CarouselAdapterViewHolder;
						}
						export module CarouselAdapter {
							export class WhenMappings {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.adapters.CarouselAdapter.WhenMappings>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module adapters {
						export class CarouselAdapterTypes {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.adapters.CarouselAdapterTypes>;
							public static FUNDING_OPTION: com.paypal.pyplcheckout.home.view.adapters.CarouselAdapterTypes;
							public static BNPL_OFFER: com.paypal.pyplcheckout.home.view.adapters.CarouselAdapterTypes;
							public static WEB_ADD_CARD: com.paypal.pyplcheckout.home.view.adapters.CarouselAdapterTypes;
							public static NATIVE_ADD_CARD: com.paypal.pyplcheckout.home.view.adapters.CarouselAdapterTypes;
							public static valueOf(param0: string): com.paypal.pyplcheckout.home.view.adapters.CarouselAdapterTypes;
							public static values(): androidNative.Array<com.paypal.pyplcheckout.home.view.adapters.CarouselAdapterTypes>;
							public getValue(): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module adapters {
						export abstract class CarouselAdapterViewHolder {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.adapters.CarouselAdapterViewHolder>;
							public getSelectedListener(): com.paypal.pyplcheckout.interfaces.SelectedListener;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module adapters {
						export class CartItemsAdapter extends androidx.recyclerview.widget.RecyclerView.Adapter<com.paypal.pyplcheckout.home.view.adapters.CartItemsAdapter.ItemViewHolder> {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.adapters.CartItemsAdapter>;
							public constructor(param0: java.util.List<com.paypal.pyplcheckout.pojo.Item>);
							public getItemCount(): number;
							public onCreateViewHolder(param0: globalAndroid.view.ViewGroup, param1: number): com.paypal.pyplcheckout.home.view.adapters.CartItemsAdapter.ItemViewHolder;
							public onBindViewHolder(param0: com.paypal.pyplcheckout.home.view.adapters.CartItemsAdapter.ItemViewHolder, param1: number): void;
						}
						export module CartItemsAdapter {
							export class ItemViewHolder {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.adapters.CartItemsAdapter.ItemViewHolder>;
								public getItemPriceTv(): globalAndroid.widget.TextView;
								public getItemNameTv(): globalAndroid.widget.TextView;
								public getItemDescriptionTv(): globalAndroid.widget.TextView;
								public constructor(param0: globalAndroid.view.View);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module adapters {
						export class FundingOptionViewHolder extends com.paypal.pyplcheckout.home.view.adapters.CarouselAdapterViewHolder {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.adapters.FundingOptionViewHolder>;
							public isPayPalBalanceFundingOption(param0: com.paypal.pyplcheckout.home.view.customviews.CardUiModel.PaymentSourceUiModel): boolean;
							public constructor(param0: globalAndroid.view.View, param1: com.paypal.pyplcheckout.interfaces.SelectedListener, param2: com.paypal.pyplcheckout.interfaces.HeartListener);
							public canDisplayPayPalBalance(param0: com.paypal.pyplcheckout.home.view.customviews.CardUiModel.PaymentSourceUiModel): boolean;
							public bind(param0: com.paypal.pyplcheckout.home.view.customviews.CardUiModel.PaymentSourceUiModel, param1: boolean, param2: any): void;
						}
						export module FundingOptionViewHolder {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.adapters.FundingOptionViewHolder.Companion>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module adapters {
						export class NativeAddCardViewHolder extends com.paypal.pyplcheckout.home.view.adapters.CarouselAdapterViewHolder {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.adapters.NativeAddCardViewHolder>;
							public constructor(param0: globalAndroid.view.View, param1: com.paypal.pyplcheckout.interfaces.SelectedListener);
							public bind(param0: com.paypal.pyplcheckout.home.view.customviews.CardUiModel.AddCardUiModel.Native): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module adapters {
						export class OfferViewHolder extends com.paypal.pyplcheckout.home.view.adapters.CarouselAdapterViewHolder {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.adapters.OfferViewHolder>;
							public constructor(param0: globalAndroid.view.View, param1: com.paypal.pyplcheckout.interfaces.SelectedListener);
							public bind(param0: com.paypal.pyplcheckout.home.view.customviews.CardUiModel.OfferCardUiModel): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module adapters {
						export class WebAddCardViewHolder extends com.paypal.pyplcheckout.home.view.adapters.CarouselAdapterViewHolder {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.adapters.WebAddCardViewHolder>;
							public constructor(param0: globalAndroid.view.View, param1: com.paypal.pyplcheckout.interfaces.SelectedListener);
							public bind(param0: com.paypal.pyplcheckout.home.view.customviews.CardUiModel.AddCardUiModel.Web): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module customviews {
						export class ActionButtonColor {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.ActionButtonColor>;
							public static BLUE: com.paypal.pyplcheckout.home.view.customviews.ActionButtonColor;
							public static GRAY: com.paypal.pyplcheckout.home.view.customviews.ActionButtonColor;
							public static WHITE: com.paypal.pyplcheckout.home.view.customviews.ActionButtonColor;
							public static valueOf(param0: string): com.paypal.pyplcheckout.home.view.customviews.ActionButtonColor;
							public static values(): androidNative.Array<com.paypal.pyplcheckout.home.view.customviews.ActionButtonColor>;
							public retrieveColorResource(param0: globalAndroid.content.Context): globalAndroid.content.res.ColorStateList;
						}
						export module ActionButtonColor {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.ActionButtonColor.Companion>;
								public invoke(param0: number): com.paypal.pyplcheckout.home.view.customviews.ActionButtonColor;
							}
							export class WhenMappings {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.ActionButtonColor.WhenMappings>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module customviews {
						export class ActionButtonShape {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.ActionButtonShape>;
							public static RECTANGLE: com.paypal.pyplcheckout.home.view.customviews.ActionButtonShape;
							public static PILL: com.paypal.pyplcheckout.home.view.customviews.ActionButtonShape;
							public static ROUNDED: com.paypal.pyplcheckout.home.view.customviews.ActionButtonShape;
							public static MATERIAL_DESIGN: com.paypal.pyplcheckout.home.view.customviews.ActionButtonShape;
							public static values(): androidNative.Array<com.paypal.pyplcheckout.home.view.customviews.ActionButtonShape>;
							public static valueOf(param0: string): com.paypal.pyplcheckout.home.view.customviews.ActionButtonShape;
						}
						export module ActionButtonShape {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.ActionButtonShape.Companion>;
								public invoke(param0: number): com.paypal.pyplcheckout.home.view.customviews.ActionButtonShape;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module customviews {
						export class ActionButtonSize {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.ActionButtonSize>;
							public static SMALL: com.paypal.pyplcheckout.home.view.customviews.ActionButtonSize;
							public static MEDIUM: com.paypal.pyplcheckout.home.view.customviews.ActionButtonSize;
							public static LARGE: com.paypal.pyplcheckout.home.view.customviews.ActionButtonSize;
							public getMinHeightResId(): number;
							public getLabelTextSizeResId(): number;
							public static values(): androidNative.Array<com.paypal.pyplcheckout.home.view.customviews.ActionButtonSize>;
							public getVerticalPaddingResId(): number;
							public static valueOf(param0: string): com.paypal.pyplcheckout.home.view.customviews.ActionButtonSize;
						}
						export module ActionButtonSize {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.ActionButtonSize.Companion>;
								public invoke(param0: number): com.paypal.pyplcheckout.home.view.customviews.ActionButtonSize;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module customviews {
						export class AddCardView implements com.paypal.pyplcheckout.navigation.interfaces.ContentView, com.paypal.pyplcheckout.navigation.interfaces.ICustomViewsViewModel {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.AddCardView>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public static TAG: string;
							public onDetachedFromWindow(): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment);
							public getContentViewMinHeight(): number;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public initViewModelObservers(): void;
							public removeListeners(): void;
							public getViewId(): string;
							public getIsAnchoredToBottomSheet(): boolean;
							public onClick(param0: globalAndroid.view.View): void;
							public getFragment(): androidx.fragment.app.Fragment;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public getLifecycleOwner(param0: globalAndroid.view.View): androidx.lifecycle.LifecycleOwner;
							public onAttachedToWindow(): void;
							public _$_clearFindViewByIdCache(): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public getComponentActivity(param0: globalAndroid.content.Context): androidx.activity.ComponentActivity;
							public setContentViewVisibility(param0: number): void;
							public constructor(param0: globalAndroid.content.Context);
						}
						export module AddCardView {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.AddCardView.Companion>;
							}
							export class WhenMappings {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.AddCardView.WhenMappings>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module customviews {
						export class AutoCloseBottomSheetBehavior<V>  extends com.google.android.material.bottomsheet.BottomSheetBehavior<any> {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.AutoCloseBottomSheetBehavior<any>>;
							public onLayoutChild(param0: androidx.coordinatorlayout.widget.CoordinatorLayout, param1: any, param2: number): boolean;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public onInterceptTouchEvent(param0: androidx.coordinatorlayout.widget.CoordinatorLayout, param1: any, param2: globalAndroid.view.MotionEvent): boolean;
							public constructor(param0: globalAndroid.content.Context);
						}
						export module AutoCloseBottomSheetBehavior {
							export class BottomSheetSizeChangeListener {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.AutoCloseBottomSheetBehavior.BottomSheetSizeChangeListener>;
								/**
								 * Constructs a new instance of the com.paypal.pyplcheckout.home.view.customviews.AutoCloseBottomSheetBehavior$BottomSheetSizeChangeListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									onBottomSheetHeightChanged(param0: number, param1: number): void;
								});
								public constructor();
								public onBottomSheetHeightChanged(param0: number, param1: number): void;
							}
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.AutoCloseBottomSheetBehavior.Companion>;
								public from(param0: globalAndroid.view.View, param1: any, param2: com.paypal.pyplcheckout.home.view.customviews.AutoCloseBottomSheetBehavior.BottomSheetSizeChangeListener): com.google.android.material.bottomsheet.BottomSheetBehavior;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module customviews {
						export abstract class CardUiModel {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.CardUiModel>;
						}
						export module CardUiModel {
							export abstract class AddCardUiModel extends com.paypal.pyplcheckout.home.view.customviews.CardUiModel {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.CardUiModel.AddCardUiModel>;
								public getBackgroundImage(): number;
							}
							export module AddCardUiModel {
								export class Native extends com.paypal.pyplcheckout.home.view.customviews.CardUiModel.AddCardUiModel {
									public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.CardUiModel.AddCardUiModel.Native>;
									public copy(param0: number): com.paypal.pyplcheckout.home.view.customviews.CardUiModel.AddCardUiModel.Native;
									public hashCode(): number;
									public component1(): number;
									public equals(param0: any): boolean;
									public toString(): string;
									public constructor(param0: number);
									public getBackgroundImage(): number;
								}
								export class Web extends com.paypal.pyplcheckout.home.view.customviews.CardUiModel.AddCardUiModel {
									public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.CardUiModel.AddCardUiModel.Web>;
									public hashCode(): number;
									public component1(): number;
									public equals(param0: any): boolean;
									public toString(): string;
									public constructor(param0: number);
									public getBackgroundImage(): number;
									public copy(param0: number): com.paypal.pyplcheckout.home.view.customviews.CardUiModel.AddCardUiModel.Web;
								}
							}
							export class CardDesignModel {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.CardUiModel.CardDesignModel>;
								public toString(): string;
								public component1(): number;
								public copy(param0: number, param1: number): com.paypal.pyplcheckout.home.view.customviews.CardUiModel.CardDesignModel;
								public constructor(param0: number, param1: number);
								public equals(param0: any): boolean;
								public getTextColor(): number;
								public component2(): number;
								public getBackgroundImage(): number;
								public hashCode(): number;
							}
							export class OfferCardUiModel extends com.paypal.pyplcheckout.home.view.customviews.CardUiModel {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.CardUiModel.OfferCardUiModel>;
								public toString(): string;
								public equals(param0: any): boolean;
								public component4(): string;
								public component1(): string;
								public copy(param0: string, param1: number, param2: string, param3: string, param4: string, param5: string): com.paypal.pyplcheckout.home.view.customviews.CardUiModel.OfferCardUiModel;
								public getTermsLink(): string;
								public component6(): string;
								public constructor(param0: string, param1: number, param2: string, param3: string, param4: string, param5: string);
								public getOfferDescription(): string;
								public getCtaText(): string;
								public component2(): number;
								public component5(): string;
								public getBackgroundImage(): number;
								public getId(): string;
								public getTermsText(): string;
								public component3(): string;
								public hashCode(): number;
							}
							export class PaymentSourceUiModel extends com.paypal.pyplcheckout.home.view.customviews.CardUiModel {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.CardUiModel.PaymentSourceUiModel>;
								public static BANK_ACCOUNT: string;
								public static CRYPTOCURRENCY: string;
								public static PAYPAL: string;
								public toString(): string;
								public constructor(param0: com.paypal.pyplcheckout.pojo.Plan, param1: string, param2: string, param3: string, param4: string, param5: string, param6: com.paypal.pyplcheckout.home.view.customviews.CardUiModel.CardDesignModel, param7: boolean, param8: boolean, param9: string, param10: boolean, param11: string, param12: string, param13: com.paypal.pyplcheckout.pojo.Amount);
								public equals(param0: any): boolean;
								public getPlanId(): string;
								public getPaymentCardLabel(): string;
								public component2(): string;
								public copy(param0: com.paypal.pyplcheckout.pojo.Plan, param1: string, param2: string, param3: string, param4: string, param5: string, param6: com.paypal.pyplcheckout.home.view.customviews.CardUiModel.CardDesignModel, param7: boolean, param8: boolean, param9: string, param10: boolean, param11: string, param12: string, param13: com.paypal.pyplcheckout.pojo.Amount): com.paypal.pyplcheckout.home.view.customviews.CardUiModel.PaymentSourceUiModel;
								public component11(): boolean;
								public component10(): string;
								public component5(): string;
								public component14(): com.paypal.pyplcheckout.pojo.Amount;
								public component7(): com.paypal.pyplcheckout.home.view.customviews.CardUiModel.CardDesignModel;
								public component13(): string;
								public getFundingOptionId(): string;
								public getCardFormattedType(): string;
								public component4(): string;
								public constructor();
								public getLastFourDigits(): string;
								public isPreferredFundingOption(): boolean;
								public getPlan(): com.paypal.pyplcheckout.pojo.Plan;
								public getCardDesign(): com.paypal.pyplcheckout.home.view.customviews.CardUiModel.CardDesignModel;
								public getShowFavoriteViewState(): boolean;
								public component6(): string;
								public getCardArtUrl(): string;
								public isSelectedFundingOption(): boolean;
								public getAvailableAmount(): com.paypal.pyplcheckout.pojo.Amount;
								public getOptionalText(): string;
								public component9(): boolean;
								public component12(): string;
								public component3(): string;
								public hashCode(): number;
								public getType(): string;
								public component1(): com.paypal.pyplcheckout.pojo.Plan;
								public component8(): boolean;
							}
							export module PaymentSourceUiModel {
								export class Companion {
									public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.CardUiModel.PaymentSourceUiModel.Companion>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module customviews {
						export class CircleImageView {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.CircleImageView>;
							public getCircleBackgroundColor(): number;
							public getBorderWidth(): number;
							public setBorderColor(param0: number): void;
							public setCircleBackgroundColorResource(param0: number): void;
							public setImageResource(param0: number): void;
							public setImageDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
							public setImageBitmap(param0: globalAndroid.graphics.Bitmap): void;
							public setDisableCircularTransformation(param0: boolean): void;
							public setCircleBackgroundColor(param0: number): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
							public setAdjustViewBounds(param0: boolean): void;
							public setBorderWidth(param0: number): void;
							public isDisableCircularTransformation(): boolean;
							public setPaddingRelative(param0: number, param1: number, param2: number, param3: number): void;
							public getScaleType(): globalAndroid.widget.ImageView.ScaleType;
							public onSizeChanged(param0: number, param1: number, param2: number, param3: number): void;
							public onDraw(param0: globalAndroid.graphics.Canvas): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
							public setScaleType(param0: globalAndroid.widget.ImageView.ScaleType): void;
							public setColorFilter(param0: globalAndroid.graphics.ColorFilter): void;
							public getColorFilter(): globalAndroid.graphics.ColorFilter;
							public getBorderColor(): number;
							public setImageURI(param0: globalAndroid.net.Uri): void;
							public setBorderOverlay(param0: boolean): void;
							public setPadding(param0: number, param1: number, param2: number, param3: number): void;
							public isBorderOverlay(): boolean;
							public constructor(param0: globalAndroid.content.Context);
						}
						export module CircleImageView {
							export class OutlineProvider {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.CircleImageView.OutlineProvider>;
								public getOutline(param0: globalAndroid.view.View, param1: any): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module customviews {
						export class ErrorDialogView {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.ErrorDialogView>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public setTitle(param0: string): void;
							public setButtonAction(param0: globalAndroid.view.View.OnClickListener): void;
							public setErrorCode(param0: string): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
							public _$_clearFindViewByIdCache(): void;
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public setMessage(param0: string): void;
							public constructor(param0: globalAndroid.content.Context);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module customviews {
						export class LinkTextView {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.LinkTextView>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public setActions(param0: androidNative.Array<any): void;
							public setLinkText(param0: string, param1: androidNative.Array<string>): void;
							public clearActions(): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public onFinishInflate(): void;
							public _$_clearFindViewByIdCache(): void;
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public setLinks(param0: androidNative.Array<string>): void;
							public update(): void;
							public addActions(param0: androidNative.Array<any): com.paypal.pyplcheckout.home.view.customviews.LinkTextView;
							public addLinks(param0: androidNative.Array<string>): com.paypal.pyplcheckout.home.view.customviews.LinkTextView;
						}
						export module LinkTextView {
							export class Span {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.LinkTextView.Span>;
								public toString(): string;
								public component1(): number;
								public constructor(param0: number, param1: number);
								public equals(param0: any): boolean;
								public component2(): number;
								public getStart(): number;
								public hashCode(): number;
								public getEnd(): number;
								public copy(param0: number, param1: number): com.paypal.pyplcheckout.home.view.customviews.LinkTextView.Span;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module customviews {
						export class LoadingProgressSpinnerView implements com.paypal.pyplcheckout.navigation.interfaces.ContentView {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.LoadingProgressSpinnerView>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public setLoggingInUserPhase(): void;
							public showCryptoProgress(): void;
							public getContentViewMinHeight(): number;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public setWaitingForFirebasePhase(): void;
							public setCustomMessage(param0: string): void;
							public removeListeners(): void;
							public getIsAnchoredToBottomSheet(): boolean;
							public getViewId(): string;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public _$_clearFindViewByIdCache(): void;
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public setFetchingUserCheckoutResponsePhase(): void;
							public setContentViewVisibility(param0: number): void;
						}
						export module LoadingProgressSpinnerView {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.LoadingProgressSpinnerView.Companion>;
								public getTAG(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module customviews {
						export class PayPalActionButton {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.PayPalActionButton>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public setShape(param0: com.paypal.pyplcheckout.home.view.customviews.ActionButtonShape): void;
							public setColor(param0: com.paypal.pyplcheckout.home.view.customviews.ActionButtonColor): void;
							public getAlignment(): number;
							public onDraw(param0: globalAndroid.graphics.Canvas): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public updateButtonText(param0: string): void;
							public setSize(param0: com.paypal.pyplcheckout.home.view.customviews.ActionButtonSize): void;
							public getSize(): com.paypal.pyplcheckout.home.view.customviews.ActionButtonSize;
							public getShape(): com.paypal.pyplcheckout.home.view.customviews.ActionButtonShape;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
							public _$_clearFindViewByIdCache(): void;
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public setAlignment(param0: number): void;
							public getColor(): com.paypal.pyplcheckout.home.view.customviews.ActionButtonColor;
							public constructor(param0: globalAndroid.content.Context);
						}
						export module PayPalActionButton {
							export class WhenMappings {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.PayPalActionButton.WhenMappings>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module customviews {
						export class PayPalCompoundHeaderView implements com.paypal.pyplcheckout.navigation.interfaces.ContentView, com.paypal.pyplcheckout.navigation.interfaces.ICustomViewsViewModel {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.PayPalCompoundHeaderView>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public static TAG: string;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment, param4: com.paypal.pyplcheckout.home.view.interfaces.PayPalCompoundHeaderViewListener);
							public onLongClick(param0: globalAndroid.view.View): boolean;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment);
							public getContentViewMinHeight(): number;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public initViewModelObservers(): void;
							public removeListeners(): void;
							public getViewId(): string;
							public getIsAnchoredToBottomSheet(): boolean;
							public onClick(param0: globalAndroid.view.View): void;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public getLifecycleOwner(param0: globalAndroid.view.View): androidx.lifecycle.LifecycleOwner;
							public _$_clearFindViewByIdCache(): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public getComponentActivity(param0: globalAndroid.content.Context): androidx.activity.ComponentActivity;
							public setContentViewVisibility(param0: number): void;
							public constructor(param0: globalAndroid.content.Context);
						}
						export module PayPalCompoundHeaderView {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.PayPalCompoundHeaderView.Companion>;
							}
							export class WhenMappings {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.PayPalCompoundHeaderView.WhenMappings>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module customviews {
						export class PayPalContinueButton implements com.paypal.pyplcheckout.navigation.interfaces.ContentView, com.paypal.pyplcheckout.navigation.interfaces.ICustomViewsViewModel {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.PayPalContinueButton>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public static TAG: string;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: string, param4: androidx.fragment.app.Fragment, param5: com.paypal.pyplcheckout.home.view.customviews.ActionButtonShape);
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: string, param4: androidx.fragment.app.Fragment, param5: com.paypal.pyplcheckout.home.view.customviews.ActionButtonShape, param6: com.paypal.pyplcheckout.home.view.interfaces.PayPalCheckoutButtonClickedListener);
							public getContentViewMinHeight(): number;
							public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							public constructor(param0: globalAndroid.content.Context, param1: com.paypal.pyplcheckout.home.view.customviews.ActionButtonShape);
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public initViewModelObservers(): void;
							public removeListeners(): void;
							public getButtonShape(): com.paypal.pyplcheckout.home.view.customviews.ActionButtonShape;
							public getIsAnchoredToBottomSheet(): boolean;
							public getViewId(): string;
							public onClick(param0: globalAndroid.view.View): void;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public setButtonText(param0: string): void;
							public getLifecycleOwner(param0: globalAndroid.view.View): androidx.lifecycle.LifecycleOwner;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: com.paypal.pyplcheckout.home.view.customviews.ActionButtonShape);
							public getPayPalCheckoutButtonClickedListener(): com.paypal.pyplcheckout.home.view.interfaces.PayPalCheckoutButtonClickedListener;
							public _$_clearFindViewByIdCache(): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: string, param4: com.paypal.pyplcheckout.home.view.customviews.ActionButtonShape);
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: com.paypal.pyplcheckout.home.view.customviews.ActionButtonShape);
							public getButtonText(): string;
							public getComponentActivity(param0: globalAndroid.content.Context): androidx.activity.ComponentActivity;
							public setContentViewVisibility(param0: number): void;
						}
						export module PayPalContinueButton {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.PayPalContinueButton.Companion>;
							}
							export class WhenMappings {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.PayPalContinueButton.WhenMappings>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module customviews {
						export class PayPalCurrencyConversionView implements com.paypal.pyplcheckout.navigation.interfaces.ContentView, com.paypal.pyplcheckout.utils.ExpandableView, com.paypal.pyplcheckout.navigation.interfaces.ICustomViewsViewModel {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.PayPalCurrencyConversionView>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public static TAG: string;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment);
							public getContentViewMinHeight(): number;
							public onViewExpansionStateUpdateStarted(param0: globalAndroid.view.View): void;
							public getViewTransitionProperties(param0: globalAndroid.view.View, param1: com.paypal.pyplcheckout.utils.ExpandableViewState): com.paypal.pyplcheckout.utils.ExpandableViewTransitionProperties;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public onViewExpansionStateUpdateCompleted(param0: globalAndroid.view.View): void;
							public initViewModelObservers(): void;
							public removeListeners(): void;
							public getViewId(): string;
							public getIsAnchoredToBottomSheet(): boolean;
							public onClick(param0: globalAndroid.view.View): void;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public getLifecycleOwner(param0: globalAndroid.view.View): androidx.lifecycle.LifecycleOwner;
							public _$_clearFindViewByIdCache(): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment, param4: com.paypal.pyplcheckout.home.view.interfaces.PayPalCurrencyConversionViewListener);
							public getComponentActivity(param0: globalAndroid.content.Context): androidx.activity.ComponentActivity;
							public setContentViewVisibility(param0: number): void;
							public constructor(param0: globalAndroid.content.Context);
						}
						export module PayPalCurrencyConversionView {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.PayPalCurrencyConversionView.Companion>;
							}
							export class WhenMappings {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.PayPalCurrencyConversionView.WhenMappings>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module customviews {
						export class PayPalEnterLoadingSpinner implements com.paypal.pyplcheckout.navigation.interfaces.ContentView, com.paypal.pyplcheckout.navigation.interfaces.ICustomViewsViewModel {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.PayPalEnterLoadingSpinner>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public static TAG: string;
							public getContentViewMinHeight(): number;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: androidx.fragment.app.Fragment);
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public initViewModelObservers(): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: androidx.fragment.app.Fragment, param3: number);
							public removeListeners(): void;
							public getViewId(): string;
							public getIsAnchoredToBottomSheet(): boolean;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public getLifecycleOwner(param0: globalAndroid.view.View): androidx.lifecycle.LifecycleOwner;
							public _$_clearFindViewByIdCache(): void;
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public getComponentActivity(param0: globalAndroid.content.Context): androidx.activity.ComponentActivity;
							public setContentViewVisibility(param0: number): void;
							public constructor(param0: globalAndroid.content.Context);
						}
						export module PayPalEnterLoadingSpinner {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.PayPalEnterLoadingSpinner.Companion>;
							}
							export abstract class LoadingTextPhases {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.PayPalEnterLoadingSpinner.LoadingTextPhases>;
							}
							export module LoadingTextPhases {
								export class CustomMessage extends com.paypal.pyplcheckout.home.view.customviews.PayPalEnterLoadingSpinner.LoadingTextPhases {
									public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.PayPalEnterLoadingSpinner.LoadingTextPhases.CustomMessage>;
									public constructor(param0: string);
									public hashCode(): number;
									public equals(param0: any): boolean;
									public copy(param0: string): com.paypal.pyplcheckout.home.view.customviews.PayPalEnterLoadingSpinner.LoadingTextPhases.CustomMessage;
									public toString(): string;
									public getMessage(): string;
									public component1(): string;
								}
								export class GettingUserCheckoutResponse extends com.paypal.pyplcheckout.home.view.customviews.PayPalEnterLoadingSpinner.LoadingTextPhases {
									public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.PayPalEnterLoadingSpinner.LoadingTextPhases.GettingUserCheckoutResponse>;
									public static INSTANCE: com.paypal.pyplcheckout.home.view.customviews.PayPalEnterLoadingSpinner.LoadingTextPhases.GettingUserCheckoutResponse;
								}
								export class LoggingInUser extends com.paypal.pyplcheckout.home.view.customviews.PayPalEnterLoadingSpinner.LoadingTextPhases {
									public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.PayPalEnterLoadingSpinner.LoadingTextPhases.LoggingInUser>;
									public static INSTANCE: com.paypal.pyplcheckout.home.view.customviews.PayPalEnterLoadingSpinner.LoadingTextPhases.LoggingInUser;
								}
								export class WaitingForFirebase extends com.paypal.pyplcheckout.home.view.customviews.PayPalEnterLoadingSpinner.LoadingTextPhases {
									public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.PayPalEnterLoadingSpinner.LoadingTextPhases.WaitingForFirebase>;
									public static INSTANCE: com.paypal.pyplcheckout.home.view.customviews.PayPalEnterLoadingSpinner.LoadingTextPhases.WaitingForFirebase;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module customviews {
						export class PayPalExitLoadingSpinner implements com.paypal.pyplcheckout.navigation.interfaces.ContentView, com.paypal.pyplcheckout.navigation.interfaces.ICustomViewsViewModel {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.PayPalExitLoadingSpinner>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public static TAG: string;
							public getContentViewMinHeight(): number;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: androidx.fragment.app.Fragment);
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public initViewModelObservers(): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: androidx.fragment.app.Fragment, param3: number);
							public removeListeners(): void;
							public getViewId(): string;
							public getIsAnchoredToBottomSheet(): boolean;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public getLifecycleOwner(param0: globalAndroid.view.View): androidx.lifecycle.LifecycleOwner;
							public _$_clearFindViewByIdCache(): void;
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public getComponentActivity(param0: globalAndroid.content.Context): androidx.activity.ComponentActivity;
							public setContentViewVisibility(param0: number): void;
							public constructor(param0: globalAndroid.content.Context);
						}
						export module PayPalExitLoadingSpinner {
							export class CheckoutAnimationTransition {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.PayPalExitLoadingSpinner.CheckoutAnimationTransition>;
								public static PAY_NOW: com.paypal.pyplcheckout.home.view.customviews.PayPalExitLoadingSpinner.CheckoutAnimationTransition;
								public static CONTINUE: com.paypal.pyplcheckout.home.view.customviews.PayPalExitLoadingSpinner.CheckoutAnimationTransition;
								public static THREE_DS_V1_PROCESSING: com.paypal.pyplcheckout.home.view.customviews.PayPalExitLoadingSpinner.CheckoutAnimationTransition;
								public static valueOf(param0: string): com.paypal.pyplcheckout.home.view.customviews.PayPalExitLoadingSpinner.CheckoutAnimationTransition;
								public static values(): androidNative.Array<com.paypal.pyplcheckout.home.view.customviews.PayPalExitLoadingSpinner.CheckoutAnimationTransition>;
							}
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.PayPalExitLoadingSpinner.Companion>;
							}
							export class WhenMappings {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.PayPalExitLoadingSpinner.WhenMappings>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module customviews {
						export class PayPalExpandedCartDetails implements com.paypal.pyplcheckout.navigation.interfaces.ContentView, com.paypal.pyplcheckout.navigation.interfaces.ICustomViewsViewModel {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.PayPalExpandedCartDetails>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment);
							public getContentViewMinHeight(): number;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public initViewModelObservers(): void;
							public removeListeners(): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment, param4: com.paypal.pyplcheckout.home.view.interfaces.PayPalExpandedCartDetailsViewListener);
							public getViewId(): string;
							public getIsAnchoredToBottomSheet(): boolean;
							public onClick(param0: globalAndroid.view.View): void;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public getLifecycleOwner(param0: globalAndroid.view.View): androidx.lifecycle.LifecycleOwner;
							public getCartArrowTv(): globalAndroid.widget.TextView;
							public hideArrow(): void;
							public _$_clearFindViewByIdCache(): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public getComponentActivity(param0: globalAndroid.content.Context): androidx.activity.ComponentActivity;
							public setContentViewVisibility(param0: number): void;
							public constructor(param0: globalAndroid.content.Context);
						}
						export module PayPalExpandedCartDetails {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.PayPalExpandedCartDetails.Companion>;
								public getTAG(): string;
							}
							export class WhenMappings {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.PayPalExpandedCartDetails.WhenMappings>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module customviews {
						export class PayPalHomeBodyContainer {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.PayPalHomeBodyContainer>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public onAttachedToWindow(): void;
							public _$_clearFindViewByIdCache(): void;
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
						}
						export module PayPalHomeBodyContainer {
							export class HeaderPadding {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.PayPalHomeBodyContainer.HeaderPadding>;
								public static EXPANDED: com.paypal.pyplcheckout.home.view.customviews.PayPalHomeBodyContainer.HeaderPadding;
								public static COLLAPSED: com.paypal.pyplcheckout.home.view.customviews.PayPalHomeBodyContainer.HeaderPadding;
								public static valueOf(param0: string): com.paypal.pyplcheckout.home.view.customviews.PayPalHomeBodyContainer.HeaderPadding;
								public static values(): androidNative.Array<com.paypal.pyplcheckout.home.view.customviews.PayPalHomeBodyContainer.HeaderPadding>;
								public getRes(): number;
							}
							export class WhenMappings {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.PayPalHomeBodyContainer.WhenMappings>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module customviews {
						export class PayPalLogoutSpinner implements com.paypal.pyplcheckout.navigation.interfaces.ContentView, com.paypal.pyplcheckout.navigation.interfaces.ICustomViewsViewModel {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.PayPalLogoutSpinner>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public static TAG: string;
							public getContentViewMinHeight(): number;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: androidx.fragment.app.Fragment);
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public initViewModelObservers(): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: androidx.fragment.app.Fragment, param3: number);
							public removeListeners(): void;
							public getViewId(): string;
							public getIsAnchoredToBottomSheet(): boolean;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public getLifecycleOwner(param0: globalAndroid.view.View): androidx.lifecycle.LifecycleOwner;
							public _$_clearFindViewByIdCache(): void;
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public getComponentActivity(param0: globalAndroid.content.Context): androidx.activity.ComponentActivity;
							public setContentViewVisibility(param0: number): void;
							public constructor(param0: globalAndroid.content.Context);
						}
						export module PayPalLogoutSpinner {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.PayPalLogoutSpinner.Companion>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module customviews {
						export class PayPalPoliciesAndRightsLinkView implements com.paypal.pyplcheckout.navigation.interfaces.ContentView, com.paypal.pyplcheckout.navigation.interfaces.ICustomViewsViewModel {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.PayPalPoliciesAndRightsLinkView>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public static TAG: string;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment);
							public getContentViewMinHeight(): number;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public initViewModelObservers(): void;
							public removeListeners(): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment, param4: com.paypal.pyplcheckout.home.view.interfaces.PayPalPoliciesAndRightsLinkViewListener);
							public getViewId(): string;
							public getIsAnchoredToBottomSheet(): boolean;
							public onClick(param0: globalAndroid.view.View): void;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public getLifecycleOwner(param0: globalAndroid.view.View): androidx.lifecycle.LifecycleOwner;
							public _$_clearFindViewByIdCache(): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public getComponentActivity(param0: globalAndroid.content.Context): androidx.activity.ComponentActivity;
							public setContentViewVisibility(param0: number): void;
							public constructor(param0: globalAndroid.content.Context);
						}
						export module PayPalPoliciesAndRightsLinkView {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.PayPalPoliciesAndRightsLinkView.Companion>;
							}
							export class WhenMappings {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.PayPalPoliciesAndRightsLinkView.WhenMappings>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module customviews {
						export class PayPalSnappingRecyclerView implements com.paypal.pyplcheckout.navigation.interfaces.ContentView, com.paypal.pyplcheckout.navigation.interfaces.ICustomViewsViewModel {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.PayPalSnappingRecyclerView>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public getContentViewMinHeight(): number;
							public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public setUpCarousel(param0: number): void;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): com.paypal.pyplcheckout.home.view.customviews.PayPalSnappingRecyclerView;
							public initViewModelObservers(): void;
							public removeListeners(): void;
							public getViewId(): string;
							public getIsAnchoredToBottomSheet(): boolean;
							public getLifecycleOwner(param0: globalAndroid.view.View): androidx.lifecycle.LifecycleOwner;
							public constructor(param0: globalAndroid.content.Context, param1: androidx.fragment.app.Fragment, param2: com.paypal.pyplcheckout.home.view.interfaces.PayPalSnappingRecyclerViewListener);
							public onAttachedToWindow(): void;
							public _$_clearFindViewByIdCache(): void;
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public getComponentActivity(param0: globalAndroid.content.Context): androidx.activity.ComponentActivity;
							public setContentViewVisibility(param0: number): void;
						}
						export module PayPalSnappingRecyclerView {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.PayPalSnappingRecyclerView.Companion>;
								public getTAG(): string;
							}
							export class WhenMappings {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.PayPalSnappingRecyclerView.WhenMappings>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module customviews {
						export class PayPalTopBannerView implements com.paypal.pyplcheckout.navigation.interfaces.ContentView, com.paypal.pyplcheckout.navigation.interfaces.ICustomViewsViewModel {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.PayPalTopBannerView>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public static TAG: string;
							public static OPT_OUT_DURATION: number;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment, param4: com.paypal.pyplcheckout.home.view.interfaces.PayPalCompoundHeaderViewListener);
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment);
							public getContentViewMinHeight(): number;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public initViewModelObservers(): void;
							public removeListeners(): void;
							public getViewId(): string;
							public getIsAnchoredToBottomSheet(): boolean;
							public onClick(param0: globalAndroid.view.View): void;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public getLifecycleOwner(param0: globalAndroid.view.View): androidx.lifecycle.LifecycleOwner;
							public _$_clearFindViewByIdCache(): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public getComponentActivity(param0: globalAndroid.content.Context): androidx.activity.ComponentActivity;
							public setContentViewVisibility(param0: number): void;
							public constructor(param0: globalAndroid.content.Context);
						}
						export module PayPalTopBannerView {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.PayPalTopBannerView.Companion>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module customviews {
						export module PaymentSourceUiModelKt {
export module  {
							export class WhenMappings {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.PaymentSourceUiModelKt.WhenMappings>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module customviews {
						export class PreferredFIToggleView {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.PreferredFIToggleView>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public isFavorite(): boolean;
							public setFavorite(param0: boolean): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public _$_clearFindViewByIdCache(): void;
							public deselectPaymentStateAsFavorite(): void;
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public updatePaymentViewStateToFavorite(param0: boolean): void;
							public constructor(param0: globalAndroid.content.Context);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module customviews {
						export class ShippingView implements com.paypal.pyplcheckout.navigation.interfaces.ContentView, com.paypal.pyplcheckout.utils.ExpandableView, com.paypal.pyplcheckout.navigation.interfaces.ICustomViewsViewModel {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.ShippingView>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public static TAG: string;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment);
							public getContentViewMinHeight(): number;
							public onViewExpansionStateUpdateStarted(param0: globalAndroid.view.View): void;
							public getViewTransitionProperties(param0: globalAndroid.view.View, param1: com.paypal.pyplcheckout.utils.ExpandableViewState): com.paypal.pyplcheckout.utils.ExpandableViewTransitionProperties;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public onViewExpansionStateUpdateCompleted(param0: globalAndroid.view.View): void;
							public initViewModelObservers(): void;
							public removeListeners(): void;
							public getViewId(): string;
							public getIsAnchoredToBottomSheet(): boolean;
							public onClick(param0: globalAndroid.view.View): void;
							public getFragment(): androidx.fragment.app.Fragment;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public getLifecycleOwner(param0: globalAndroid.view.View): androidx.lifecycle.LifecycleOwner;
							public _$_clearFindViewByIdCache(): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment, param4: com.paypal.pyplcheckout.home.view.interfaces.PayPalShippingViewListener);
							public getComponentActivity(param0: globalAndroid.content.Context): androidx.activity.ComponentActivity;
							public setContentViewVisibility(param0: number): void;
							public constructor(param0: globalAndroid.content.Context);
						}
						export module ShippingView {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.ShippingView.Companion>;
							}
							export class WhenMappings {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.ShippingView.WhenMappings>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module customviews {
						export class SnappingRecyclerView {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.SnappingRecyclerView>;
							public onChildAttachedToWindow(param0: globalAndroid.view.View): void;
							public getSelectedPosition(): number;
							public isCarouselInScrollingState(): boolean;
							public getScrollOffset(): number;
							public onDetachedFromWindow(): void;
							public setOnViewSelectedListener(param0: com.paypal.pyplcheckout.home.view.customviews.SnappingRecyclerView.OnViewSelectedListener): void;
							public scrollBy(param0: number): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public setSelectedPosition(param0: number): void;
							public dispatchTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
							public enableViewScaling(param0: boolean): void;
							public setOnViewDismissedListener(param0: com.paypal.pyplcheckout.home.view.customviews.SnappingRecyclerView.OnViewDismissedListener): void;
							public onInterceptTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
							public scrollToPosition(param0: number): void;
							public smoothScrollBy(param0: number, param1: com.paypal.pyplcheckout.home.view.customviews.SnappingRecyclerView.OnSmoothScrollByListener): void;
							public setScrollEnabled(param0: boolean): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
							public setOrientation(param0: com.paypal.pyplcheckout.home.view.customviews.SnappingRecyclerView.Orientation): void;
							public smoothScrollBy(param0: number): void;
							public constructor(param0: globalAndroid.content.Context);
						}
						export module SnappingRecyclerView {
							export class ChildViewMetrics {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.SnappingRecyclerView.ChildViewMetrics>;
								public constructor(param0: com.paypal.pyplcheckout.home.view.customviews.SnappingRecyclerView.Orientation);
								public center(param0: globalAndroid.view.View): number;
								public size(param0: globalAndroid.view.View): number;
								public location(param0: globalAndroid.view.View): number;
							}
							export class OnSmoothScrollByListener {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.SnappingRecyclerView.OnSmoothScrollByListener>;
								/**
								 * Constructs a new instance of the com.paypal.pyplcheckout.home.view.customviews.SnappingRecyclerView$OnSmoothScrollByListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									onCompleted(): void;
								});
								public constructor();
								public onCompleted(): void;
							}
							export class OnViewDismissedListener {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.SnappingRecyclerView.OnViewDismissedListener>;
								/**
								 * Constructs a new instance of the com.paypal.pyplcheckout.home.view.customviews.SnappingRecyclerView$OnViewDismissedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									onDismissed(param0: globalAndroid.view.View, param1: number): void;
								});
								public constructor();
								public onDismissed(param0: globalAndroid.view.View, param1: number): void;
							}
							export class OnViewSelectedListener {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.SnappingRecyclerView.OnViewSelectedListener>;
								/**
								 * Constructs a new instance of the com.paypal.pyplcheckout.home.view.customviews.SnappingRecyclerView$OnViewSelectedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									onSelected(param0: globalAndroid.view.View, param1: number): void;
								});
								public constructor();
								public onSelected(param0: globalAndroid.view.View, param1: number): void;
							}
							export class Orientation {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.SnappingRecyclerView.Orientation>;
								public static HORIZONTAL: com.paypal.pyplcheckout.home.view.customviews.SnappingRecyclerView.Orientation;
								public static VERTICAL: com.paypal.pyplcheckout.home.view.customviews.SnappingRecyclerView.Orientation;
								public intValue(): number;
								public static values(): androidNative.Array<com.paypal.pyplcheckout.home.view.customviews.SnappingRecyclerView.Orientation>;
								public static valueOf(param0: string): com.paypal.pyplcheckout.home.view.customviews.SnappingRecyclerView.Orientation;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module customviews {
						export class ToggleSwitchView implements com.paypal.pyplcheckout.navigation.interfaces.ContentView {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.ToggleSwitchView>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public static TAG: string;
							public setOnCheckedChangeListener(param0: globalAndroid.widget.CompoundButton.OnCheckedChangeListener): void;
							public getOnCheckedChangeListener(): globalAndroid.widget.CompoundButton.OnCheckedChangeListener;
							public setToggleSwitchOn(param0: boolean): void;
							public getContentViewMinHeight(): number;
							public isToggleSwitchOn(): boolean;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public removeListeners(): void;
							public getViewId(): string;
							public getIsAnchoredToBottomSheet(): boolean;
							public onClick(param0: globalAndroid.view.View): void;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public _$_clearFindViewByIdCache(): void;
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public constructor(param0: globalAndroid.content.Context);
							public setContentViewVisibility(param0: number): void;
						}
						export module ToggleSwitchView {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.ToggleSwitchView.Companion>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module customviews {
						export module alertview {
							export abstract class AlertToast {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.alertview.AlertToast>;
								public getBackgroundColor(): number;
								public getBodyText(): string;
								public getTextColor(): number;
								public getIcon(): java.lang.Integer;
								public getHeaderText(): string;
							}
							export module AlertToast {
								export class Error extends com.paypal.pyplcheckout.home.view.customviews.alertview.AlertToast {
									public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.alertview.AlertToast.Error>;
									public constructor(param0: string, param1: string);
									public component2(): string;
									public getHeaderText(): string;
									public hashCode(): number;
									public getBodyText(): string;
									public copy(param0: string, param1: string): com.paypal.pyplcheckout.home.view.customviews.alertview.AlertToast.Error;
									public equals(param0: any): boolean;
									public toString(): string;
									public component1(): string;
								}
								export class ErrorNoIcon extends com.paypal.pyplcheckout.home.view.customviews.alertview.AlertToast {
									public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.alertview.AlertToast.ErrorNoIcon>;
									public constructor(param0: string, param1: string);
									public component2(): string;
									public getHeaderText(): string;
									public hashCode(): number;
									public getBodyText(): string;
									public equals(param0: any): boolean;
									public copy(param0: string, param1: string): com.paypal.pyplcheckout.home.view.customviews.alertview.AlertToast.ErrorNoIcon;
									public toString(): string;
									public component1(): string;
								}
								export class Success extends com.paypal.pyplcheckout.home.view.customviews.alertview.AlertToast {
									public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.alertview.AlertToast.Success>;
									public constructor(param0: string, param1: string);
									public component2(): string;
									public getHeaderText(): string;
									public hashCode(): number;
									public copy(param0: string, param1: string): com.paypal.pyplcheckout.home.view.customviews.alertview.AlertToast.Success;
									public getBodyText(): string;
									public equals(param0: any): boolean;
									public toString(): string;
									public component1(): string;
								}
								export class SuccessNoIcon extends com.paypal.pyplcheckout.home.view.customviews.alertview.AlertToast {
									public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.alertview.AlertToast.SuccessNoIcon>;
									public constructor(param0: string, param1: string);
									public component2(): string;
									public getHeaderText(): string;
									public hashCode(): number;
									public getBodyText(): string;
									public equals(param0: any): boolean;
									public copy(param0: string, param1: string): com.paypal.pyplcheckout.home.view.customviews.alertview.AlertToast.SuccessNoIcon;
									public toString(): string;
									public component1(): string;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module customviews {
						export module alertview {
							export class PayPalAlertToastView {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.alertview.PayPalAlertToastView>;
								public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
								public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
								public consumeQueue(): void;
								public _$_clearFindViewByIdCache(): void;
								public onAttachedToWindow(): void;
								public showToast(param0: com.paypal.pyplcheckout.home.view.customviews.alertview.AlertToast): void;
								public _$_findCachedViewById(param0: number): globalAndroid.view.View;
								public onDetachedFromWindow(): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module customviews {
						export module availablebalance {
							export abstract class AvailableBalanceState {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.availablebalance.AvailableBalanceState>;
							}
							export module AvailableBalanceState {
								export class DisabledState extends com.paypal.pyplcheckout.home.view.customviews.availablebalance.AvailableBalanceState {
									public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.availablebalance.AvailableBalanceState.DisabledState>;
									public static INSTANCE: com.paypal.pyplcheckout.home.view.customviews.availablebalance.AvailableBalanceState.DisabledState;
								}
								export class EnabledState extends com.paypal.pyplcheckout.home.view.customviews.availablebalance.AvailableBalanceState {
									public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.availablebalance.AvailableBalanceState.EnabledState>;
									public static INSTANCE: com.paypal.pyplcheckout.home.view.customviews.availablebalance.AvailableBalanceState.EnabledState;
								}
								export class NoSplitBalance extends com.paypal.pyplcheckout.home.view.customviews.availablebalance.AvailableBalanceState {
									public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.availablebalance.AvailableBalanceState.NoSplitBalance>;
									public static INSTANCE: com.paypal.pyplcheckout.home.view.customviews.availablebalance.AvailableBalanceState.NoSplitBalance;
								}
								export class ShowSplitBalance extends com.paypal.pyplcheckout.home.view.customviews.availablebalance.AvailableBalanceState {
									public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.availablebalance.AvailableBalanceState.ShowSplitBalance>;
									public hashCode(): number;
									public getSecondSplitBalance(): com.paypal.pyplcheckout.home.view.customviews.availablebalance.SplitBalanceInfo;
									public copy(param0: com.paypal.pyplcheckout.home.view.customviews.availablebalance.SplitBalanceInfo, param1: com.paypal.pyplcheckout.home.view.customviews.availablebalance.SplitBalanceInfo, param2: string, param3: number): com.paypal.pyplcheckout.home.view.customviews.availablebalance.AvailableBalanceState.ShowSplitBalance;
									public equals(param0: any): boolean;
									public getFirstSplitBalance(): com.paypal.pyplcheckout.home.view.customviews.availablebalance.SplitBalanceInfo;
									public component4(): number;
									public toString(): string;
									public constructor(param0: com.paypal.pyplcheckout.home.view.customviews.availablebalance.SplitBalanceInfo, param1: com.paypal.pyplcheckout.home.view.customviews.availablebalance.SplitBalanceInfo, param2: string, param3: number);
									public getSplitBalanceCurrency(): string;
									public getStringResource(): number;
									public component2(): com.paypal.pyplcheckout.home.view.customviews.availablebalance.SplitBalanceInfo;
									public component3(): string;
									public component1(): com.paypal.pyplcheckout.home.view.customviews.availablebalance.SplitBalanceInfo;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module customviews {
						export module availablebalance {
							export class AvailableBalanceViewModel extends com.paypal.pyplcheckout.viewmodels.BaseViewModel {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.availablebalance.AvailableBalanceViewModel>;
								public clearLiveData(): void;
								public onFetchingUserDataCompleted(param0: boolean): void;
								public primarySplitBalanceToggleUpdated(param0: boolean): void;
								public handleContingencyEvent(param0: com.paypal.pyplcheckout.events.model.ContingencyEventsModel): void;
								public constructor(param0: com.paypal.pyplcheckout.services.Repository, param1: com.paypal.pyplcheckout.events.Events, param2: com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsGetTypeUseCase);
								public onLogoutCompleted(): void;
								public removeAllListeners(): void;
								public getViewState(): androidx.lifecycle.LiveData<com.paypal.pyplcheckout.home.view.customviews.availablebalance.AvailableBalanceState>;
								public secondarySplitBalanceToggleUpdated(param0: boolean): void;
								public constructor();
								public initEventListeners(): void;
							}
							export module AvailableBalanceViewModel {
								export class WhenMappings {
									public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.availablebalance.AvailableBalanceViewModel.WhenMappings>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module customviews {
						export module availablebalance {
							export class AvailableBalanceViewModel_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.home.view.customviews.availablebalance.AvailableBalanceViewModel> {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.availablebalance.AvailableBalanceViewModel_Factory>;
								public static newInstance(param0: com.paypal.pyplcheckout.services.Repository, param1: com.paypal.pyplcheckout.events.Events, param2: com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsGetTypeUseCase): com.paypal.pyplcheckout.home.view.customviews.availablebalance.AvailableBalanceViewModel;
								public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param1: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param2: javax.inject.Provider<com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsGetTypeUseCase>): com.paypal.pyplcheckout.home.view.customviews.availablebalance.AvailableBalanceViewModel_Factory;
								public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param1: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param2: javax.inject.Provider<com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsGetTypeUseCase>);
								public get(): com.paypal.pyplcheckout.home.view.customviews.availablebalance.AvailableBalanceViewModel;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module customviews {
						export module availablebalance {
							export class AvailablePpBalanceView implements com.paypal.pyplcheckout.navigation.interfaces.ContentView, com.paypal.pyplcheckout.navigation.interfaces.ICustomViewsViewModel {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.availablebalance.AvailablePpBalanceView>;
								public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
								public static TAG: string;
								public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
								public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
								public getComponentActivity(param0: globalAndroid.content.Context): androidx.activity.ComponentActivity;
								public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
								public onClick(param0: globalAndroid.view.View): void;
								public getViewId(): string;
								public onDetachedFromWindow(): void;
								public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
								public _$_clearFindViewByIdCache(): void;
								public getContentViewMinHeight(): number;
								public getLifecycleOwner(param0: globalAndroid.view.View): androidx.lifecycle.LifecycleOwner;
								public setContentViewVisibility(param0: number): void;
								public initViewModelObservers(): void;
								public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
								public getIsAnchoredToBottomSheet(): boolean;
								public removeListeners(): void;
								public constructor(param0: globalAndroid.content.Context);
								public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							}
							export module AvailablePpBalanceView {
								export class Companion {
									public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.availablebalance.AvailablePpBalanceView.Companion>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module customviews {
						export module availablebalance {
							export class SplitBalanceInfo {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.availablebalance.SplitBalanceInfo>;
								public component1(): string;
								public getErrorStringId(): java.lang.Integer;
								public toString(): string;
								public copy(param0: string, param1: java.lang.Integer, param2: string): com.paypal.pyplcheckout.home.view.customviews.availablebalance.SplitBalanceInfo;
								public equals(param0: any): boolean;
								public component2(): java.lang.Integer;
								public constructor(param0: string, param1: java.lang.Integer, param2: string);
								public getAmount(): string;
								public component3(): string;
								public hashCode(): number;
								public getCurrency(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module customviews {
						export module productviews {
							export class CheckoutButtonBehaviourDescriptor {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.productviews.CheckoutButtonBehaviourDescriptor>;
								public constructor(param0: com.paypal.pyplcheckout.home.view.customviews.productviews.CheckoutButtonBehaviourDescriptor.Type);
								public getCheckoutButtonBehaviour(): com.paypal.pyplcheckout.home.view.customviews.productviews.CheckoutButtonBehaviourDescriptor.Type;
							}
							export module CheckoutButtonBehaviourDescriptor {
								export class Type {
									public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.productviews.CheckoutButtonBehaviourDescriptor.Type>;
									public static PAY_NOW_BEHAVIOUR: com.paypal.pyplcheckout.home.view.customviews.productviews.CheckoutButtonBehaviourDescriptor.Type;
									public static ADD_CARD_BEHAVIOUR: com.paypal.pyplcheckout.home.view.customviews.productviews.CheckoutButtonBehaviourDescriptor.Type;
									public static OTHER: com.paypal.pyplcheckout.home.view.customviews.productviews.CheckoutButtonBehaviourDescriptor.Type;
									public static valueOf(param0: string): com.paypal.pyplcheckout.home.view.customviews.productviews.CheckoutButtonBehaviourDescriptor.Type;
									public static values(): androidNative.Array<com.paypal.pyplcheckout.home.view.customviews.productviews.CheckoutButtonBehaviourDescriptor.Type>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module customviews {
						export module productviews {
							export class ProductDescription {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.productviews.ProductDescription>;
								public component1(): string;
								public toString(): string;
								public copy(param0: string): com.paypal.pyplcheckout.home.view.customviews.productviews.ProductDescription;
								public getDescription(): string;
								public equals(param0: any): boolean;
								public constructor(param0: string);
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module customviews {
						export module productviews {
							export class ShippingCallbackBlockingBehaviour {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.productviews.ShippingCallbackBlockingBehaviour>;
								public constructor(param0: com.paypal.pyplcheckout.home.view.customviews.productviews.ShippingCallbackBlockingBehaviour.Type);
								public getShippingBlockingBehaviour(): com.paypal.pyplcheckout.home.view.customviews.productviews.ShippingCallbackBlockingBehaviour.Type;
							}
							export module ShippingCallbackBlockingBehaviour {
								export class Type {
									public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.customviews.productviews.ShippingCallbackBlockingBehaviour.Type>;
									public static NEW_SHIPPING_ADDRESS_SELECTED: com.paypal.pyplcheckout.home.view.customviews.productviews.ShippingCallbackBlockingBehaviour.Type;
									public static INVALID_SHIPPING_ADDRESS: com.paypal.pyplcheckout.home.view.customviews.productviews.ShippingCallbackBlockingBehaviour.Type;
									public static REFRESH_IS_PENDING: com.paypal.pyplcheckout.home.view.customviews.productviews.ShippingCallbackBlockingBehaviour.Type;
									public static REFRESH_IS_COMPLETED: com.paypal.pyplcheckout.home.view.customviews.productviews.ShippingCallbackBlockingBehaviour.Type;
									public static INVALID_SHIPPING_METHOD: com.paypal.pyplcheckout.home.view.customviews.productviews.ShippingCallbackBlockingBehaviour.Type;
									public static valueOf(param0: string): com.paypal.pyplcheckout.home.view.customviews.productviews.ShippingCallbackBlockingBehaviour.Type;
									public static values(): androidNative.Array<com.paypal.pyplcheckout.home.view.customviews.productviews.ShippingCallbackBlockingBehaviour.Type>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module fragments {
						export class HomeFragment extends com.paypal.pyplcheckout.home.view.BaseFragment {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.fragments.HomeFragment>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public factory: androidx.lifecycle.ViewModelProvider.Factory;
							public shippingCallbackHandler: com.paypal.pyplcheckout.shippingcallbacks.ShippingCallbackHandler;
							public static TAG: string;
							public constructor();
							public getShippingCallbackHandler(): com.paypal.pyplcheckout.shippingcallbacks.ShippingCallbackHandler;
							public onActivityCreated(param0: globalAndroid.os.Bundle): void;
							public getFactory(): androidx.lifecycle.ViewModelProvider.Factory;
							public onCreateView(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: globalAndroid.os.Bundle): globalAndroid.view.View;
							public setFactory(param0: androidx.lifecycle.ViewModelProvider.Factory): void;
							public onAttach(param0: globalAndroid.content.Context): void;
							public getViewId(): string;
							public onCreate(param0: globalAndroid.os.Bundle): void;
							public static newInstance(): com.paypal.pyplcheckout.home.view.fragments.HomeFragment;
							public onDetach(): void;
							public _$_clearFindViewByIdCache(): void;
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public setShippingCallbackHandler(param0: com.paypal.pyplcheckout.shippingcallbacks.ShippingCallbackHandler): void;
						}
						export module HomeFragment {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.fragments.HomeFragment.Companion>;
								public newInstance(): com.paypal.pyplcheckout.home.view.fragments.HomeFragment;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module fragments {
						export class HomeFragment_MembersInjector extends dagger.MembersInjector<com.paypal.pyplcheckout.home.view.fragments.HomeFragment> {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.fragments.HomeFragment_MembersInjector>;
							public static injectFactory(param0: com.paypal.pyplcheckout.home.view.fragments.HomeFragment, param1: androidx.lifecycle.ViewModelProvider.Factory): void;
							public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param1: javax.inject.Provider<androidx.lifecycle.ViewModelProvider.Factory>, param2: javax.inject.Provider<com.paypal.pyplcheckout.shippingcallbacks.ShippingCallbackHandler>);
							public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param1: javax.inject.Provider<androidx.lifecycle.ViewModelProvider.Factory>, param2: javax.inject.Provider<com.paypal.pyplcheckout.shippingcallbacks.ShippingCallbackHandler>): dagger.MembersInjector<com.paypal.pyplcheckout.home.view.fragments.HomeFragment>;
							public injectMembers(param0: com.paypal.pyplcheckout.home.view.fragments.HomeFragment): void;
							public static injectShippingCallbackHandler(param0: com.paypal.pyplcheckout.home.view.fragments.HomeFragment, param1: com.paypal.pyplcheckout.shippingcallbacks.ShippingCallbackHandler): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module interfaces {
						export class HomeViewListener implements com.paypal.pyplcheckout.home.view.interfaces.PayPalCompoundHeaderViewListener, com.paypal.pyplcheckout.home.view.interfaces.PayPalShippingViewListener, com.paypal.pyplcheckout.home.view.interfaces.PayPalCurrencyConversionViewListener, com.paypal.pyplcheckout.home.view.interfaces.PayPalExpandedCartDetailsViewListener, com.paypal.pyplcheckout.home.view.interfaces.PayPalSnappingRecyclerViewListener, com.paypal.pyplcheckout.home.view.interfaces.PayPalPoliciesAndRightsLinkViewListener, com.paypal.pyplcheckout.home.view.interfaces.PayPalCheckoutButtonClickedListener {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.interfaces.HomeViewListener>;
							/**
							 * Constructs a new instance of the com.paypal.pyplcheckout.home.view.interfaces.HomeViewListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onProfileImageHeaderClick(): void;
								onProfileInitialsHeaderClick(): void;
								onPayPalLogoClicked(): void;
								onShippingNameUpdated(): void;
								onShippingViewClickListener(): void;
								onShippingMethodClickListener(): void;
								setCurrencyPaddingViewVisible(param0: boolean): void;
								onCurrencyConversionViewClickListener(): void;
								onSeeMore72HourClicked(): void;
								onCryptoRatesAndFeesClickListener(): void;
								setUpInvoiceSummaryTotal(param0: string, param1: boolean): void;
								onEmptyCartDetailsReceived(): void;
								onCartDetailsArrowClick(param0: globalAndroid.view.View, param1: number, param2: number): void;
								onFundingInstrumentSelected(param0: number, param1: number, param2: boolean, param3: boolean, param4: boolean, param5: boolean, param6: java.util.List<any>): void;
								onUpdateAddCardViewState(param0: number, param1: java.util.List<any>): void;
								initFundingOptionSelection(param0: number): void;
								onPolicyAndRightsLinkClick(): void;
								onCheckoutViewClicked(): void;
							});
							public constructor();
							public setUpInvoiceSummaryTotal(param0: string, param1: boolean): void;
							public initFundingOptionSelection(param0: number): void;
							public onProfileInitialsHeaderClick(): void;
							public onUpdateAddCardViewState(param0: number, param1: java.util.List<any>): void;
							public onFundingInstrumentSelected(param0: number, param1: number, param2: boolean, param3: boolean, param4: boolean, param5: boolean, param6: java.util.List<any>): void;
							public onShippingMethodClickListener(): void;
							public setCurrencyPaddingViewVisible(param0: boolean): void;
							public onCheckoutViewClicked(): void;
							public onShippingViewClickListener(): void;
							public onShippingNameUpdated(): void;
							public onCartDetailsArrowClick(param0: globalAndroid.view.View, param1: number, param2: number): void;
							public onCurrencyConversionViewClickListener(): void;
							public onProfileImageHeaderClick(): void;
							public onSeeMore72HourClicked(): void;
							public onEmptyCartDetailsReceived(): void;
							public onPayPalLogoClicked(): void;
							public onCryptoRatesAndFeesClickListener(): void;
							public onPolicyAndRightsLinkClick(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module interfaces {
						export class PayPalAddNewShippingAddressButtonClickedListener {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.interfaces.PayPalAddNewShippingAddressButtonClickedListener>;
							/**
							 * Constructs a new instance of the com.paypal.pyplcheckout.home.view.interfaces.PayPalAddNewShippingAddressButtonClickedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module interfaces {
						export class PayPalCheckoutButtonClickedListener {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.interfaces.PayPalCheckoutButtonClickedListener>;
							/**
							 * Constructs a new instance of the com.paypal.pyplcheckout.home.view.interfaces.PayPalCheckoutButtonClickedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onCheckoutViewClicked(): void;
							});
							public constructor();
							public onCheckoutViewClicked(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module interfaces {
						export class PayPalCompoundHeaderViewListener {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.interfaces.PayPalCompoundHeaderViewListener>;
							/**
							 * Constructs a new instance of the com.paypal.pyplcheckout.home.view.interfaces.PayPalCompoundHeaderViewListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onProfileImageHeaderClick(): void;
								onProfileInitialsHeaderClick(): void;
								onPayPalLogoClicked(): void;
							});
							public constructor();
							public onProfileImageHeaderClick(): void;
							public onProfileInitialsHeaderClick(): void;
							public onPayPalLogoClicked(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module interfaces {
						export class PayPalCurrencyConversionViewListener {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.interfaces.PayPalCurrencyConversionViewListener>;
							/**
							 * Constructs a new instance of the com.paypal.pyplcheckout.home.view.interfaces.PayPalCurrencyConversionViewListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								setCurrencyPaddingViewVisible(param0: boolean): void;
								onCurrencyConversionViewClickListener(): void;
								onSeeMore72HourClicked(): void;
								onCryptoRatesAndFeesClickListener(): void;
							});
							public constructor();
							public onCurrencyConversionViewClickListener(): void;
							public onSeeMore72HourClicked(): void;
							public onCryptoRatesAndFeesClickListener(): void;
							public setCurrencyPaddingViewVisible(param0: boolean): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module interfaces {
						export class PayPalExpandedCartDetailsViewListener {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.interfaces.PayPalExpandedCartDetailsViewListener>;
							/**
							 * Constructs a new instance of the com.paypal.pyplcheckout.home.view.interfaces.PayPalExpandedCartDetailsViewListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								setUpInvoiceSummaryTotal(param0: string, param1: boolean): void;
								onEmptyCartDetailsReceived(): void;
								onCartDetailsArrowClick(param0: globalAndroid.view.View, param1: number, param2: number): void;
							});
							public constructor();
							public setUpInvoiceSummaryTotal(param0: string, param1: boolean): void;
							public onCartDetailsArrowClick(param0: globalAndroid.view.View, param1: number, param2: number): void;
							public onEmptyCartDetailsReceived(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module interfaces {
						export class PayPalPoliciesAndRightsLinkViewListener {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.interfaces.PayPalPoliciesAndRightsLinkViewListener>;
							/**
							 * Constructs a new instance of the com.paypal.pyplcheckout.home.view.interfaces.PayPalPoliciesAndRightsLinkViewListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onPolicyAndRightsLinkClick(): void;
							});
							public constructor();
							public onPolicyAndRightsLinkClick(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module interfaces {
						export class PayPalShippingViewListener {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.interfaces.PayPalShippingViewListener>;
							/**
							 * Constructs a new instance of the com.paypal.pyplcheckout.home.view.interfaces.PayPalShippingViewListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onShippingNameUpdated(): void;
								onShippingViewClickListener(): void;
								onShippingMethodClickListener(): void;
							});
							public constructor();
							public onShippingMethodClickListener(): void;
							public onShippingViewClickListener(): void;
							public onShippingNameUpdated(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module interfaces {
						export class PayPalSnappingRecyclerViewListener {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.interfaces.PayPalSnappingRecyclerViewListener>;
							/**
							 * Constructs a new instance of the com.paypal.pyplcheckout.home.view.interfaces.PayPalSnappingRecyclerViewListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onFundingInstrumentSelected(param0: number, param1: number, param2: boolean, param3: boolean, param4: boolean, param5: boolean, param6: java.util.List<any>): void;
								onUpdateAddCardViewState(param0: number, param1: java.util.List<any>): void;
								initFundingOptionSelection(param0: number): void;
							});
							public constructor();
							public initFundingOptionSelection(param0: number): void;
							public onUpdateAddCardViewState(param0: number, param1: java.util.List<any>): void;
							public onFundingInstrumentSelected(param0: number, param1: number, param2: boolean, param3: boolean, param4: boolean, param5: boolean, param6: java.util.List<any>): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module view {
					export module interfaces {
						export class UpdateClientConfigListener {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.view.interfaces.UpdateClientConfigListener>;
							/**
							 * Constructs a new instance of the com.paypal.pyplcheckout.home.view.interfaces.UpdateClientConfigListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onUpdateClientConfig(): void;
							});
							public constructor();
							public onUpdateClientConfig(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module viewmodel {
					export class CartViewModel extends com.paypal.pyplcheckout.viewmodels.BaseViewModel {
						public static class: java.lang.Class<com.paypal.pyplcheckout.home.viewmodel.CartViewModel>;
						public constructor();
						public isCartTotalVisible(): boolean;
						public getItemQuantityList(): java.util.List<string>;
						public isContinueCartExperiment(): boolean;
						public getItemDescriptions(): java.util.List<java.util.List<com.paypal.pyplcheckout.home.view.customviews.productviews.ProductDescription>>;
						public getTax(): string;
						public getInsurance(): string;
						public getListOfCartItems(): java.util.List<com.paypal.pyplcheckout.pojo.Item>;
						public getItemCostList(): java.util.List<string>;
						public getAbManager(): com.paypal.pyplcheckout.ab.AbManager;
						public shouldShowShortOverCaptureText(): boolean;
						public getSubTotal(): string;
						public constructor(param0: com.paypal.pyplcheckout.services.Repository, param1: com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsGetTypeUseCase, param2: com.paypal.pyplcheckout.ab.AbManager, param3: com.paypal.pyplcheckout.model.DebugConfigManager);
						public getTotalOverCaptureAmount(): string;
						public getCartCurrencyCode(): string;
						public getItemNamesList(): java.util.List<string>;
						public shouldShowOverCaptureAmount(): boolean;
						public getShippingDiscount(): string;
						public getGrandTotal(): string;
						public getShippingAndHandling(): string;
					}
					export module CartViewModel {
						export class Companion {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.viewmodel.CartViewModel.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module viewmodel {
					export class CartViewModel_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.home.viewmodel.CartViewModel> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.home.viewmodel.CartViewModel_Factory>;
						public get(): com.paypal.pyplcheckout.home.viewmodel.CartViewModel;
						public static newInstance(param0: com.paypal.pyplcheckout.services.Repository, param1: com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsGetTypeUseCase, param2: com.paypal.pyplcheckout.ab.AbManager, param3: com.paypal.pyplcheckout.model.DebugConfigManager): com.paypal.pyplcheckout.home.viewmodel.CartViewModel;
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param1: javax.inject.Provider<com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsGetTypeUseCase>, param2: javax.inject.Provider<com.paypal.pyplcheckout.ab.AbManager>, param3: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>): com.paypal.pyplcheckout.home.viewmodel.CartViewModel_Factory;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param1: javax.inject.Provider<com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsGetTypeUseCase>, param2: javax.inject.Provider<com.paypal.pyplcheckout.ab.AbManager>, param3: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module viewmodel {
					export class InitiateCheckoutViewModel extends com.paypal.pyplcheckout.viewmodels.BaseViewModel {
						public static class: java.lang.Class<com.paypal.pyplcheckout.home.viewmodel.InitiateCheckoutViewModel>;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module viewmodel {
					export class MainPaysheetViewModel extends com.paypal.pyplcheckout.viewmodels.BaseViewModel {
						public static class: java.lang.Class<com.paypal.pyplcheckout.home.viewmodel.MainPaysheetViewModel>;
						public isFirstTimeLoggedIn: boolean;
						public preReviewSDKInterceptFinishListener: com.paypal.pyplcheckout.interfaces.SDKInterceptFinishListener;
						public postReviewSDKInterceptFinishListener: com.paypal.pyplcheckout.interfaces.SDKInterceptFinishListener;
						public postApproveSDKInterceptFinishListener: com.paypal.pyplcheckout.interfaces.SDKInterceptFinishListener;
						public scaUiListener: com.paypal.pyplcheckout.sca.ScaUiListener;
						public setFetchingUserDataCompletedFlag(param0: boolean): void;
						public getButtonSessionId(): androidx.lifecycle.MutableLiveData<string>;
						public getListOfShippingAddresses(): androidx.lifecycle.MutableLiveData<java.util.List<com.paypal.pyplcheckout.pojo.ShippingAddress>>;
						public getPaymentSourceCardViewClickedFlag(): androidx.lifecycle.LiveData<java.lang.Boolean>;
						public getCallToActionState(): com.paypal.pyplcheckout.services.Repository.CTAState;
						public createPlanningCallEventListener(): void;
						public getFromConversionFormat(): androidx.lifecycle.MutableLiveData<string>;
						public createUserCheckoutEventListener(): void;
						public deleteSelectedFundingOptionFromCheckoutSession(): void;
						public getThreeDSPaymentAuthenticationRequest(): string;
						public setConversionType(param0: com.paypal.pyplcheckout.utils.CurrencyConversionType): void;
						public threeDSAuthenticateAndComplete(): void;
						public isPayPalConversionShownFromRepo(): boolean;
						public constructor();
						public handleCardinalResponse(param0: com.paypal.pyplcheckout.threeds.ValidateResponseAlias): void;
						public approvePayment(): void;
						public getLoadingTextPhases(): androidx.lifecycle.LiveData<com.paypal.pyplcheckout.home.view.customviews.PayPalEnterLoadingSpinner.LoadingTextPhases>;
						public isNotVenice(): boolean;
						public check3pElmoEligibility(): void;
						public getStartupParamsSet(): androidx.lifecycle.MutableLiveData<java.lang.Boolean>;
						public setShouldWaitForStartupAnimation(param0: boolean): void;
						public fetchScaContextId(): string;
						public getToConversionFormat(): androidx.lifecycle.MutableLiveData<string>;
						public getFullName(): string;
						public updateSelectedShippingMethod(param0: number, param1: com.paypal.pyplcheckout.pojo.ShippingMethodType): void;
						public setAddCardMode(param0: boolean): void;
						public setThreeDSV1JWT(param0: string): void;
						public shouldPaymentButtonBeVisible(): boolean;
						public fetchCreditOfferText(): string;
						public isPickUpOnlyAvailableWithOptions(): boolean;
						public fetchCreditPPCOffers(): java.util.List<com.paypal.pyplcheckout.pojo.CreditPPCOffer>;
						public isPayNowMode(): boolean;
						public getSelectedShippingAddress(): androidx.lifecycle.MutableLiveData<com.paypal.pyplcheckout.pojo.ShippingAddress>;
						public finalizeCheckout(): void;
						public isVenice(): boolean;
						public getConversionType(): androidx.lifecycle.MutableLiveData<com.paypal.pyplcheckout.utils.CurrencyConversionType>;
						public createContingencyEventListener(): void;
						public getFormattedConvertedAmount(): androidx.lifecycle.MutableLiveData<string>;
						public scaStepUp(param0: com.paypal.pyplcheckout.sca.ScaUiListener): void;
						public clearShippingData(): void;
						public userProfileLogout(param0: com.paypal.pyplcheckout.interfaces.VmLogoutListener): void;
						public wasLsatTokenUpgraded(): boolean;
						public setThreeDSErrorBanner(param0: com.paypal.pyplcheckout.threeds.model.ThreeDSTopBanner): void;
						public getPaymentContingencies(): com.paypal.pyplcheckout.pojo.PaymentContingencies;
						public isPayPalConversionOptionShown(): boolean;
						public getContingencyEventsModel(): androidx.lifecycle.MutableLiveData<com.paypal.pyplcheckout.events.model.ContingencyEventsModel>;
						public shouldShowCloseButton(): boolean;
						public startThreeDsFlow(param0: globalAndroid.app.Activity): void;
						public getFormattedConversionToAmount(): androidx.lifecycle.MutableLiveData<string>;
						public isBackBtnBlocked(): androidx.lifecycle.MutableLiveData<java.lang.Boolean>;
						public shouldShowShipping(): boolean;
						public fetchCreditOfferTermsLink(): string;
						public getLine1(): string;
						public constructor(param0: com.paypal.pyplcheckout.services.Repository, param1: com.paypal.pyplcheckout.ab.AbManager, param2: com.paypal.pyplcheckout.threeds.ThreeDSDecisionFlow, param3: com.paypal.pyplcheckout.events.Events, param4: com.paypal.pyplcheckout.utils.PYPLCheckoutUtils, param5: com.paypal.pyplcheckout.eligibility.EligibilityManager, param6: com.paypal.pyplcheckout.shippingcallbacks.ShippingCallbackHandler, param7: com.paypal.pyplcheckout.home.viewmodel.PostAuthSuccessHandler, param8: com.paypal.pyplcheckout.eligibility.Native3pEligibilityCheck, param9: com.paypal.pyplcheckout.crypto.NativePayWithCryptoCheck, param10: com.paypal.pyplcheckout.threeds.usecase.ThreeDSUseCase, param11: com.paypal.pyplcheckout.state.usecase.SetCheckoutStateUseCase, param12: com.paypal.pyplcheckout.data.repositories.AuthRepository, param13: com.paypal.pyplcheckout.addressvalidation.AddressRepository, param14: com.paypal.pyplcheckout.auth.AuthHandlerProvider);
						public logoutUser(param0: com.paypal.pyplcheckout.interfaces.VmLogoutListener): void;
						public setThreeDSV1Url(param0: string): void;
						public finishFragment(param0: string, param1: androidx.fragment.app.Fragment): void;
						public allowShippingAddressChange(): boolean;
						public constructor(param0: com.paypal.pyplcheckout.services.Repository, param1: com.paypal.pyplcheckout.ab.AbManager, param2: com.paypal.pyplcheckout.model.DebugConfigManager, param3: com.paypal.pyplcheckout.threeds.ThreeDSDecisionFlow, param4: com.paypal.pyplcheckout.events.Events, param5: com.paypal.pyplcheckout.utils.PYPLCheckoutUtils, param6: com.paypal.pyplcheckout.eligibility.EligibilityManager, param7: com.paypal.pyplcheckout.shippingcallbacks.ShippingCallbackHandler, param8: com.paypal.pyplcheckout.home.viewmodel.PostAuthSuccessHandler, param9: com.paypal.pyplcheckout.eligibility.Native3pEligibilityCheck, param10: com.paypal.pyplcheckout.crypto.NativePayWithCryptoCheck, param11: com.paypal.pyplcheckout.threeds.usecase.ThreeDSUseCase, param12: com.paypal.pyplcheckout.state.usecase.SetCheckoutStateUseCase, param13: com.paypal.pyplcheckout.data.repositories.AuthRepository, param14: com.paypal.pyplcheckout.addressvalidation.AddressRepository, param15: com.paypal.pyplcheckout.auth.AuthHandlerProvider);
						public getReturnUrl(): string;
						public getConversionRate(): androidx.lifecycle.MutableLiveData<string>;
						public addNewShippingAddressViaCustomTab(param0: globalAndroid.app.Activity): void;
						public addNewAddress(param0: com.paypal.pyplcheckout.pojo.NewShippingAddressRequest): void;
						public getFetchingUserDataCompletedFlag(): androidx.lifecycle.MutableLiveData<java.lang.Boolean>;
						public getSelectedShippingMethod(): androidx.lifecycle.MutableLiveData<com.paypal.pyplcheckout.pojo.ShippingMethods>;
						public getBackupFundingOption(): com.paypal.pyplcheckout.pojo.FundingInstrument;
						public isShippingAddressChangeEnabled(): boolean;
						public getThreeDSTransactionId(): string;
						public setLoadingTextPhases(param0: com.paypal.pyplcheckout.home.view.customviews.PayPalEnterLoadingSpinner.LoadingTextPhases): void;
						public setPaymentSourceCardViewClickedFlag(param0: boolean): void;
						public updateShippingAddressList(param0: java.util.List<com.paypal.pyplcheckout.pojo.ShippingAddress>): void;
						public getThreeDSV1JWT(): string;
						public start3DSV1Flow(param0: string, param1: string): void;
						public fallbackWithoutErrors(): void;
						public getGrandTotal(): androidx.lifecycle.MutableLiveData<string>;
						public updateSelectedAddress(param0: number): void;
						public fetchShippingAddresses(): void;
						public getThreeDSErrorBanner(): androidx.lifecycle.LiveData<com.paypal.pyplcheckout.threeds.model.ThreeDSTopBanner>;
						public getSupportedShippingMethodType(): androidx.lifecycle.MutableLiveData<com.paypal.pyplcheckout.pojo.ShippingMethodType>;
						public getCheckoutCompletedFlag(): androidx.lifecycle.MutableLiveData<java.lang.Boolean>;
						public setFirstTimeLoggedIn(param0: boolean): void;
						public prepareFinalUi(): void;
						public isSmartPaymentCheckout(): boolean;
						public parseUserAndCheckoutResponse(param0: com.paypal.pyplcheckout.pojo.UserCheckoutResponse): void;
						public getAb(): com.paypal.pyplcheckout.ab.AbManager;
						public getIsCurrencyConverted(): boolean;
						public getVmLogoutListener(): com.paypal.pyplcheckout.interfaces.VmLogoutListener;
						public setContingencyEventsModel(param0: com.paypal.pyplcheckout.events.model.ContingencyEventsModel): void;
						public getPayNowFlag(): androidx.lifecycle.MutableLiveData<java.lang.Boolean>;
						public getFirebaseConnected(): androidx.lifecycle.MutableLiveData<java.lang.Boolean>;
						public getListOfPickUpMethods(): androidx.lifecycle.MutableLiveData<java.util.List<com.paypal.pyplcheckout.pojo.ShippingMethods>>;
						public changeTitle(param0: string): void;
						public getTotalFormat(): androidx.lifecycle.MutableLiveData<string>;
						public setShouldPaymentButtonBeVisible(param0: boolean): void;
						public setApproveResponseOnRepo(param0: com.paypal.pyplcheckout.pojo.ApprovePaymentResponse): void;
						public getSelectingFILabel(): string;
						public getSearchScreenTitle(): androidx.lifecycle.MutableLiveData<string>;
						public resetLiveDataFlags(): void;
						public getBufNameText(): string;
						public getLogoutCompletedFlag(): androidx.lifecycle.MutableLiveData<java.lang.Boolean>;
						public isExitLoadingSpinnerWithoutLogoExperiment(): boolean;
						public startFragment(param0: globalAndroid.content.Context, param1: string): void;
						public getShouldWaitForStartupAnimation(): boolean;
						public setIsCurrencyConverted(param0: boolean): void;
						public setActionButtonClickEnabled(param0: boolean): void;
						public getPayToken(): androidx.lifecycle.MutableLiveData<string>;
						public getCancelUrl(): string;
						public getConversionRateStrFromRepo(): string;
						public getCurrentPayMode(): com.paypal.pyplcheckout.services.Repository.PayModeEnum;
						public toggleAddNewShippingAddressTitle(): void;
						public updateClientConfigBefore(param0: com.paypal.pyplcheckout.home.view.interfaces.UpdateClientConfigListener): void;
						public checkPayWithCryptoEligibility(): void;
						public getFormattedToConversionAmount(): string;
						public fallbackWithErrors(param0: string): void;
						public setThreeDSPaymentAuthenticationRequest(param0: string): void;
						public getListOfShippingMethods(): androidx.lifecycle.MutableLiveData<java.util.List<com.paypal.pyplcheckout.pojo.ShippingMethods>>;
						public fireContingencyErrorEvent(param0: com.paypal.pyplcheckout.pojo.UserCheckoutResponse): void;
						public setCallToActionState(param0: com.paypal.pyplcheckout.services.Repository.CTAState): void;
						public isAddressChangeAllowed(): boolean;
						public getThreeDSV1Url(): string;
						public shouldShow72Hour(): boolean;
						public fetchCreditOfferTerms(): string;
						public setThreeDSTransactionId(param0: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module viewmodel {
					export class MainPaysheetViewModel_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.home.viewmodel.MainPaysheetViewModel> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.home.viewmodel.MainPaysheetViewModel_Factory>;
						public get(): com.paypal.pyplcheckout.home.viewmodel.MainPaysheetViewModel;
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param1: javax.inject.Provider<com.paypal.pyplcheckout.ab.AbManager>, param2: javax.inject.Provider<com.paypal.pyplcheckout.threeds.ThreeDSDecisionFlow>, param3: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param4: javax.inject.Provider<com.paypal.pyplcheckout.utils.PYPLCheckoutUtils>, param5: javax.inject.Provider<com.paypal.pyplcheckout.eligibility.EligibilityManager>, param6: javax.inject.Provider<com.paypal.pyplcheckout.shippingcallbacks.ShippingCallbackHandler>, param7: javax.inject.Provider<com.paypal.pyplcheckout.home.viewmodel.PostAuthSuccessHandler>, param8: javax.inject.Provider<com.paypal.pyplcheckout.eligibility.Native3pEligibilityCheck>, param9: javax.inject.Provider<com.paypal.pyplcheckout.crypto.NativePayWithCryptoCheck>, param10: javax.inject.Provider<com.paypal.pyplcheckout.threeds.usecase.ThreeDSUseCase>, param11: javax.inject.Provider<com.paypal.pyplcheckout.state.usecase.SetCheckoutStateUseCase>, param12: javax.inject.Provider<com.paypal.pyplcheckout.data.repositories.AuthRepository>, param13: javax.inject.Provider<com.paypal.pyplcheckout.addressvalidation.AddressRepository>, param14: javax.inject.Provider<com.paypal.pyplcheckout.auth.AuthHandlerProvider>): com.paypal.pyplcheckout.home.viewmodel.MainPaysheetViewModel_Factory;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param1: javax.inject.Provider<com.paypal.pyplcheckout.ab.AbManager>, param2: javax.inject.Provider<com.paypal.pyplcheckout.threeds.ThreeDSDecisionFlow>, param3: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param4: javax.inject.Provider<com.paypal.pyplcheckout.utils.PYPLCheckoutUtils>, param5: javax.inject.Provider<com.paypal.pyplcheckout.eligibility.EligibilityManager>, param6: javax.inject.Provider<com.paypal.pyplcheckout.shippingcallbacks.ShippingCallbackHandler>, param7: javax.inject.Provider<com.paypal.pyplcheckout.home.viewmodel.PostAuthSuccessHandler>, param8: javax.inject.Provider<com.paypal.pyplcheckout.eligibility.Native3pEligibilityCheck>, param9: javax.inject.Provider<com.paypal.pyplcheckout.crypto.NativePayWithCryptoCheck>, param10: javax.inject.Provider<com.paypal.pyplcheckout.threeds.usecase.ThreeDSUseCase>, param11: javax.inject.Provider<com.paypal.pyplcheckout.state.usecase.SetCheckoutStateUseCase>, param12: javax.inject.Provider<com.paypal.pyplcheckout.data.repositories.AuthRepository>, param13: javax.inject.Provider<com.paypal.pyplcheckout.addressvalidation.AddressRepository>, param14: javax.inject.Provider<com.paypal.pyplcheckout.auth.AuthHandlerProvider>);
						public static newInstance(param0: com.paypal.pyplcheckout.services.Repository, param1: com.paypal.pyplcheckout.ab.AbManager, param2: com.paypal.pyplcheckout.threeds.ThreeDSDecisionFlow, param3: com.paypal.pyplcheckout.events.Events, param4: com.paypal.pyplcheckout.utils.PYPLCheckoutUtils, param5: com.paypal.pyplcheckout.eligibility.EligibilityManager, param6: com.paypal.pyplcheckout.shippingcallbacks.ShippingCallbackHandler, param7: com.paypal.pyplcheckout.home.viewmodel.PostAuthSuccessHandler, param8: com.paypal.pyplcheckout.eligibility.Native3pEligibilityCheck, param9: com.paypal.pyplcheckout.crypto.NativePayWithCryptoCheck, param10: com.paypal.pyplcheckout.threeds.usecase.ThreeDSUseCase, param11: com.paypal.pyplcheckout.state.usecase.SetCheckoutStateUseCase, param12: com.paypal.pyplcheckout.data.repositories.AuthRepository, param13: com.paypal.pyplcheckout.addressvalidation.AddressRepository, param14: com.paypal.pyplcheckout.auth.AuthHandlerProvider): com.paypal.pyplcheckout.home.viewmodel.MainPaysheetViewModel;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module viewmodel {
					export class PostAuthSuccessHandler {
						public static class: java.lang.Class<com.paypal.pyplcheckout.home.viewmodel.PostAuthSuccessHandler>;
						public flows: kotlinx.coroutines.flow.Flow<string>;
						public constructor(param0: com.paypal.pyplcheckout.model.DebugConfigManager, param1: com.paypal.pyplcheckout.services.Repository, param2: com.paypal.pyplcheckout.utils.PYPLCheckoutUtils, param3: com.paypal.pyplcheckout.events.Events);
						public getPyplCheckoutUtils(): com.paypal.pyplcheckout.utils.PYPLCheckoutUtils;
						public getFlows(): kotlinx.coroutines.flow.Flow<string>;
						public getRepository(): com.paypal.pyplcheckout.services.Repository;
						public doAfterAuth(param0: com.paypal.pyplcheckout.auth.AuthenticationSuccess): void;
						public getEvents(): com.paypal.pyplcheckout.events.Events;
						public setFlows(param0: kotlinx.coroutines.flow.Flow<string>): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module viewmodel {
					export class PostAuthSuccessHandler_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.home.viewmodel.PostAuthSuccessHandler> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.home.viewmodel.PostAuthSuccessHandler_Factory>;
						public get(): com.paypal.pyplcheckout.home.viewmodel.PostAuthSuccessHandler;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>, param1: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param2: javax.inject.Provider<com.paypal.pyplcheckout.utils.PYPLCheckoutUtils>, param3: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>);
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>, param1: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param2: javax.inject.Provider<com.paypal.pyplcheckout.utils.PYPLCheckoutUtils>, param3: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>): com.paypal.pyplcheckout.home.viewmodel.PostAuthSuccessHandler_Factory;
						public static newInstance(param0: com.paypal.pyplcheckout.model.DebugConfigManager, param1: com.paypal.pyplcheckout.services.Repository, param2: com.paypal.pyplcheckout.utils.PYPLCheckoutUtils, param3: com.paypal.pyplcheckout.events.Events): com.paypal.pyplcheckout.home.viewmodel.PostAuthSuccessHandler;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module viewmodel {
					export abstract class SpinnerState {
						public static class: java.lang.Class<com.paypal.pyplcheckout.home.viewmodel.SpinnerState>;
					}
					export module SpinnerState {
						export class Hide extends com.paypal.pyplcheckout.home.viewmodel.SpinnerState {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.viewmodel.SpinnerState.Hide>;
							public static INSTANCE: com.paypal.pyplcheckout.home.viewmodel.SpinnerState.Hide;
						}
						export class Show extends com.paypal.pyplcheckout.home.viewmodel.SpinnerState {
							public static class: java.lang.Class<com.paypal.pyplcheckout.home.viewmodel.SpinnerState.Show>;
							public component1(): number;
							public hashCode(): number;
							public copy(param0: number): com.paypal.pyplcheckout.home.viewmodel.SpinnerState.Show;
							public toString(): string;
							public equals(param0: any): boolean;
							public getStringId(): number;
							public constructor(param0: number);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module viewmodel {
					export class SpinnerViewModel extends com.paypal.pyplcheckout.viewmodels.BaseViewModel {
						public static class: java.lang.Class<com.paypal.pyplcheckout.home.viewmodel.SpinnerViewModel>;
						public constructor();
						public getSpinnerState(): androidx.lifecycle.LiveData<com.paypal.pyplcheckout.home.viewmodel.SpinnerState>;
						public constructor(param0: com.paypal.pyplcheckout.threeds.usecase.ThreeDSUseCase);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module home {
				export module viewmodel {
					export class SpinnerViewModel_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.home.viewmodel.SpinnerViewModel> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.home.viewmodel.SpinnerViewModel_Factory>;
						public get(): com.paypal.pyplcheckout.home.viewmodel.SpinnerViewModel;
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.threeds.usecase.ThreeDSUseCase>): com.paypal.pyplcheckout.home.viewmodel.SpinnerViewModel_Factory;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.threeds.usecase.ThreeDSUseCase>);
						public static newInstance(param0: com.paypal.pyplcheckout.threeds.usecase.ThreeDSUseCase): com.paypal.pyplcheckout.home.viewmodel.SpinnerViewModel;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module info {
				export module model {
					export class PayPalTransactionHeaderViewListenerImpl extends com.paypal.pyplcheckout.interfaces.PayPalTransactionDetailsHeaderViewListener {
						public static class: java.lang.Class<com.paypal.pyplcheckout.info.model.PayPalTransactionHeaderViewListenerImpl>;
						public onPayPalBackArrowClick(): void;
						public constructor();
						public constructor(param0: com.paypal.pyplcheckout.interfaces.PayPalTransactionDetailsHeaderViewListener);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module info {
				export module model {
					export class TransactionDetailsContentPageConfig extends com.paypal.pyplcheckout.navigation.ContentPage {
						public static class: java.lang.Class<com.paypal.pyplcheckout.info.model.TransactionDetailsContentPageConfig>;
						public setFooterContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
						public constructor();
						public getBodyContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public setHeaderContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
						public getHeaderContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
						public constructor(param0: globalAndroid.content.Context, param1: androidx.fragment.app.Fragment, param2: com.paypal.pyplcheckout.info.model.PayPalTransactionHeaderViewListenerImpl, param3: com.paypal.pyplcheckout.navigation.ContentPage);
						public setBodyContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
						public getHeaderContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public getTopBannerContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public getBodyContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
						public addViewsToContainer(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param1: globalAndroid.view.ViewGroup): void;
						public removeViewsFromContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup): void;
						public getFooterContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public addViewsToContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup): void;
						public getFooterContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
						public removeViewsFromContainer(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param1: globalAndroid.view.ViewGroup): void;
						public constructor(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param1: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param2: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param3: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>);
						public addViewsToContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup, param2: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module info {
				export module view {
					export class PYPLTransactionDetailsFragment extends com.paypal.pyplcheckout.home.view.BaseFragment {
						public static class: java.lang.Class<com.paypal.pyplcheckout.info.view.PYPLTransactionDetailsFragment>;
						public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
						public static TAG: string;
						public constructor();
						public init(): void;
						public onActivityCreated(param0: globalAndroid.os.Bundle): void;
						public onCreateView(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: globalAndroid.os.Bundle): globalAndroid.view.View;
						public _$_clearFindViewByIdCache(): void;
						public _$_findCachedViewById(param0: number): globalAndroid.view.View;
						public static newInstance(): com.paypal.pyplcheckout.info.view.PYPLTransactionDetailsFragment;
						public getViewId(): string;
					}
					export module PYPLTransactionDetailsFragment {
						export class Companion {
							public static class: java.lang.Class<com.paypal.pyplcheckout.info.view.PYPLTransactionDetailsFragment.Companion>;
							public newInstance(): com.paypal.pyplcheckout.info.view.PYPLTransactionDetailsFragment;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module info {
				export module view {
					export module customviews {
						export class PYPLTransactionDetailsHeaderView implements com.paypal.pyplcheckout.navigation.interfaces.ContentView, com.paypal.pyplcheckout.navigation.interfaces.ICustomViewsViewModel {
							public static class: java.lang.Class<com.paypal.pyplcheckout.info.view.customviews.PYPLTransactionDetailsHeaderView>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public static TAG: string;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment);
							public getContentViewMinHeight(): number;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public initViewModelObservers(): void;
							public removeListeners(): void;
							public getViewId(): string;
							public getIsAnchoredToBottomSheet(): boolean;
							public onClick(param0: globalAndroid.view.View): void;
							public getFragment(): androidx.fragment.app.Fragment;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public getLifecycleOwner(param0: globalAndroid.view.View): androidx.lifecycle.LifecycleOwner;
							public _$_clearFindViewByIdCache(): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment, param4: com.paypal.pyplcheckout.interfaces.PayPalTransactionDetailsHeaderViewListener);
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public getComponentActivity(param0: globalAndroid.content.Context): androidx.activity.ComponentActivity;
							public constructor(param0: globalAndroid.content.Context);
							public setContentViewVisibility(param0: number): void;
						}
						export module PYPLTransactionDetailsHeaderView {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.info.view.customviews.PYPLTransactionDetailsHeaderView.Companion>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module info {
				export module view {
					export module customviews {
						export class PYPLTransactionDetailsView implements com.paypal.pyplcheckout.navigation.interfaces.ContentView, com.paypal.pyplcheckout.navigation.interfaces.ICustomViewsViewModel {
							public static class: java.lang.Class<com.paypal.pyplcheckout.info.view.customviews.PYPLTransactionDetailsView>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public static TAG: string;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment);
							public getContentViewMinHeight(): number;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public initViewModelObservers(): void;
							public removeListeners(): void;
							public getIsAnchoredToBottomSheet(): boolean;
							public getViewId(): string;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public getLifecycleOwner(param0: globalAndroid.view.View): androidx.lifecycle.LifecycleOwner;
							public _$_clearFindViewByIdCache(): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public getComponentActivity(param0: globalAndroid.content.Context): androidx.activity.ComponentActivity;
							public constructor(param0: globalAndroid.content.Context);
							public setContentViewVisibility(param0: number): void;
						}
						export module PYPLTransactionDetailsView {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.info.view.customviews.PYPLTransactionDetailsView.Companion>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module instrumentation {
				export class ViewNames {
					public static class: java.lang.Class<com.paypal.pyplcheckout.instrumentation.ViewNames>;
					public static PAY_SHEET_ACTIVITY: string;
					public static ADDRESS_BOOK_ACTIVITY: string;
					public static CURRENCY_CONVERSION_ACTIVITY: string;
					public static USER_PROFILE_ACTIVITY: string;
					public static SHIPPING_VIEW: string;
					public static CAROUSEL_VIEW: string;
					public static BALANCE_VIEW: string;
					public static BALANCE_TOGGLE: string;
					public static CTA_BUTTON_VIEW: string;
					public static PROFILE_CIRCLE: string;
					public static CURRENCY_CONVERSION_VIEW: string;
					public static PREFERRED_STAR_VIEW: string;
					public static FUNDING_INSTRUMENT_VIEW: string;
					public static ADD_CARD_BUTTON_VIEW: string;
					public static CART_DETAILS_ARROW: string;
					public static PRODUCT_DETAILS_VIEW: string;
					public static CART_DETAILS_VIEW: string;
					public static POLICY_RIGHTS_LINK: string;
					public static SHIPPING_ADDRESS_VIEW: string;
					public static SHIPPING_ADDRESS_ADD: string;
					public static OUTSIDE_CLICK: string;
					public static LOADING_SPINNER: string;
					public static PRIVACY_LINK: string;
					public static TERMS_LINK: string;
					public static LOGOUT_VIEW: string;
					public static PAYPAL_CREDIT_VIEW: string;
					public static GLOBAL_PAY_LATER_VIEW: string;
					public static EXIT_BUTTON: string;
					public static SHIPPING_METHOD_VIEW: string;
					public static SELECTED_FI_TOAST: string;
					public static SET_PREFERRED_TOAST: string;
					public constructor();
				}
				export module ViewNames {
					export class Companion {
						public static class: java.lang.Class<com.paypal.pyplcheckout.instrumentation.ViewNames.Companion>;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module interfaces {
				export class Environment {
					public static class: java.lang.Class<com.paypal.pyplcheckout.interfaces.Environment>;
					/**
					 * Constructs a new instance of the com.paypal.pyplcheckout.interfaces.Environment interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
					});
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module interfaces {
				export class FinishListener {
					public static class: java.lang.Class<com.paypal.pyplcheckout.interfaces.FinishListener>;
					/**
					 * Constructs a new instance of the com.paypal.pyplcheckout.interfaces.FinishListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onTaskCompleted(param0: any): void;
					});
					public constructor();
					public onTaskCompleted(param0: any): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module interfaces {
				export class HeartListener {
					public static class: java.lang.Class<com.paypal.pyplcheckout.interfaces.HeartListener>;
					/**
					 * Constructs a new instance of the com.paypal.pyplcheckout.interfaces.HeartListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onTaskCompleted(): void;
					});
					public constructor();
					public onTaskCompleted(): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module interfaces {
				export class PageId<E>  extends java.lang.Object {
					public static class: java.lang.Class<com.paypal.pyplcheckout.interfaces.PageId<any>>;
					/**
					 * Constructs a new instance of the com.paypal.pyplcheckout.interfaces.PageId<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
					});
					public constructor();
				}
				export module PageId {
					export class PageIdType extends com.paypal.pyplcheckout.interfaces.PageId<any> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.interfaces.PageId.PageIdType>;
						public static MAIN_PAYSHEET_PAGE: com.paypal.pyplcheckout.interfaces.PageId.PageIdType;
						public static CUSTOM_PAGE: com.paypal.pyplcheckout.interfaces.PageId.PageIdType;
						public static values(): androidNative.Array<com.paypal.pyplcheckout.interfaces.PageId.PageIdType>;
						public static valueOf(param0: string): com.paypal.pyplcheckout.interfaces.PageId.PageIdType;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module interfaces {
				export class PayPalCheckoutCompleteListener {
					public static class: java.lang.Class<com.paypal.pyplcheckout.interfaces.PayPalCheckoutCompleteListener>;
					/**
					 * Constructs a new instance of the com.paypal.pyplcheckout.interfaces.PayPalCheckoutCompleteListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onCheckoutComplete(param0: java.util.HashMap<string,string>): void;
						onCheckoutCancelled(param0: com.paypal.pyplcheckout.exception.CheckoutCancelReason, param1: string): void;
					});
					public constructor();
					public onCheckoutComplete(param0: java.util.HashMap<string,string>): void;
					public onCheckoutCancelled(param0: com.paypal.pyplcheckout.exception.CheckoutCancelReason, param1: string): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module interfaces {
				export class PayPalTransactionDetailsHeaderViewListener {
					public static class: java.lang.Class<com.paypal.pyplcheckout.interfaces.PayPalTransactionDetailsHeaderViewListener>;
					/**
					 * Constructs a new instance of the com.paypal.pyplcheckout.interfaces.PayPalTransactionDetailsHeaderViewListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onPayPalBackArrowClick(): void;
					});
					public constructor();
					public onPayPalBackArrowClick(): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module interfaces {
				export class Progression {
					public static class: java.lang.Class<com.paypal.pyplcheckout.interfaces.Progression>;
					public static PRE_REVIEW: com.paypal.pyplcheckout.interfaces.Progression;
					public static POST_REVIEW: com.paypal.pyplcheckout.interfaces.Progression;
					public static POST_APPROVE: com.paypal.pyplcheckout.interfaces.Progression;
					public static valueOf(param0: string): com.paypal.pyplcheckout.interfaces.Progression;
					public static values(): androidNative.Array<com.paypal.pyplcheckout.interfaces.Progression>;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module interfaces {
				export class SDKInterceptFinishListener {
					public static class: java.lang.Class<com.paypal.pyplcheckout.interfaces.SDKInterceptFinishListener>;
					/**
					 * Constructs a new instance of the com.paypal.pyplcheckout.interfaces.SDKInterceptFinishListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onSDKInterceptComplete(param0: com.paypal.pyplcheckout.interfaces.Status): void;
					});
					public constructor();
					public onSDKInterceptComplete(param0: com.paypal.pyplcheckout.interfaces.Status): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module interfaces {
				export class SDKInterceptor {
					public static class: java.lang.Class<com.paypal.pyplcheckout.interfaces.SDKInterceptor>;
					/**
					 * Constructs a new instance of the com.paypal.pyplcheckout.interfaces.SDKInterceptor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						intercept(param0: com.paypal.pyplcheckout.interfaces.Progression, param1: com.paypal.pyplcheckout.interfaces.SDKInterceptFinishListener): void;
					});
					public constructor();
					public intercept(param0: com.paypal.pyplcheckout.interfaces.Progression, param1: com.paypal.pyplcheckout.interfaces.SDKInterceptFinishListener): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module interfaces {
				export class SelectedListener {
					public static class: java.lang.Class<com.paypal.pyplcheckout.interfaces.SelectedListener>;
					/**
					 * Constructs a new instance of the com.paypal.pyplcheckout.interfaces.SelectedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onTaskCompleted(param0: com.paypal.pyplcheckout.home.view.customviews.CardUiModel): void;
					});
					public constructor();
					public onTaskCompleted(param0: com.paypal.pyplcheckout.home.view.customviews.CardUiModel): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module interfaces {
				export class ShippingCallbackListener {
					public static class: java.lang.Class<com.paypal.pyplcheckout.interfaces.ShippingCallbackListener>;
					/**
					 * Constructs a new instance of the com.paypal.pyplcheckout.interfaces.ShippingCallbackListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onSuccess(param0: boolean): void;
						onSuccess(param0: boolean, param1: string, param2: java.util.List<com.paypal.checkout.order.PurchaseUnit>): void;
						onFailure(param0: string, param1: com.paypal.pyplcheckout.pojo.ShippingCallbackRequestType): void;
					});
					public constructor();
					public onSuccess(param0: boolean, param1: string, param2: java.util.List<com.paypal.checkout.order.PurchaseUnit>): void;
					public onFailure(param0: string, param1: com.paypal.pyplcheckout.pojo.ShippingCallbackRequestType): void;
					public onSuccess(param0: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module interfaces {
				export class Status {
					public static class: java.lang.Class<com.paypal.pyplcheckout.interfaces.Status>;
					public static SUCCESS: com.paypal.pyplcheckout.interfaces.Status;
					public static FAILURE: com.paypal.pyplcheckout.interfaces.Status;
					public static valueOf(param0: string): com.paypal.pyplcheckout.interfaces.Status;
					public static values(): androidNative.Array<com.paypal.pyplcheckout.interfaces.Status>;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module interfaces {
				export class UpdateOrderFinishListener {
					public static class: java.lang.Class<com.paypal.pyplcheckout.interfaces.UpdateOrderFinishListener>;
					/**
					 * Constructs a new instance of the com.paypal.pyplcheckout.interfaces.UpdateOrderFinishListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onSuccess(param0: string): void;
						onFailure(param0: com.paypal.pyplcheckout.exception.PYPLException): void;
					});
					public constructor();
					public onFailure(param0: com.paypal.pyplcheckout.exception.PYPLException): void;
					public onSuccess(param0: string): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module interfaces {
				export class VmFinishedLogginInListener {
					public static class: java.lang.Class<com.paypal.pyplcheckout.interfaces.VmFinishedLogginInListener>;
					/**
					 * Constructs a new instance of the com.paypal.pyplcheckout.interfaces.VmFinishedLogginInListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onTaskCompleted(): void;
					});
					public constructor();
					public onTaskCompleted(): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module interfaces {
				export class VmListensToRepoAuthCallListener {
					public static class: java.lang.Class<com.paypal.pyplcheckout.interfaces.VmListensToRepoAuthCallListener>;
					/**
					 * Constructs a new instance of the com.paypal.pyplcheckout.interfaces.VmListensToRepoAuthCallListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onTaskCompleted(): void;
					});
					public constructor();
					public onTaskCompleted(): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module interfaces {
				export class VmListensToRepoForUserAndCheckoutPayload {
					public static class: java.lang.Class<com.paypal.pyplcheckout.interfaces.VmListensToRepoForUserAndCheckoutPayload>;
					/**
					 * Constructs a new instance of the com.paypal.pyplcheckout.interfaces.VmListensToRepoForUserAndCheckoutPayload interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onTaskCompleted(): void;
					});
					public constructor();
					public onTaskCompleted(): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module interfaces {
				export class VmLogoutListener {
					public static class: java.lang.Class<com.paypal.pyplcheckout.interfaces.VmLogoutListener>;
					/**
					 * Constructs a new instance of the com.paypal.pyplcheckout.interfaces.VmLogoutListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onTaskCompleted(): void;
					});
					public constructor();
					public onTaskCompleted(): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module merchant {
				export class CorrelationIds {
					public static class: java.lang.Class<com.paypal.pyplcheckout.merchant.CorrelationIds>;
					public equals(param0: any): boolean;
					public toString(): string;
					public copy(param0: com.paypal.pyplcheckout.merchant.RiskCorrelationId): com.paypal.pyplcheckout.merchant.CorrelationIds;
					public getRiskCorrelationId(): com.paypal.pyplcheckout.merchant.RiskCorrelationId;
					public constructor(param0: com.paypal.pyplcheckout.merchant.RiskCorrelationId);
					public hashCode(): number;
					public component1(): com.paypal.pyplcheckout.merchant.RiskCorrelationId;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module merchant {
				export class MagnusCorrelationIdUseCase {
					public static class: java.lang.Class<com.paypal.pyplcheckout.merchant.MagnusCorrelationIdUseCase>;
					public invoke(): string;
					public constructor(param0: dagger.Lazy<com.paypal.pyplcheckout.flavorauth.FoundationRiskConfig>);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module merchant {
				export class MagnusCorrelationIdUseCase_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.merchant.MagnusCorrelationIdUseCase> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.merchant.MagnusCorrelationIdUseCase_Factory>;
					public get(): com.paypal.pyplcheckout.merchant.MagnusCorrelationIdUseCase;
					public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.flavorauth.FoundationRiskConfig>);
					public static newInstance(param0: dagger.Lazy<com.paypal.pyplcheckout.flavorauth.FoundationRiskConfig>): com.paypal.pyplcheckout.merchant.MagnusCorrelationIdUseCase;
					public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.flavorauth.FoundationRiskConfig>): com.paypal.pyplcheckout.merchant.MagnusCorrelationIdUseCase_Factory;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module merchant {
				export class RiskCorrelationId {
					public static class: java.lang.Class<com.paypal.pyplcheckout.merchant.RiskCorrelationId>;
					public equals(param0: any): boolean;
					public toString(): string;
					public getId(): string;
					public component1(): string;
					public constructor(param0: string);
					public copy(param0: string): com.paypal.pyplcheckout.merchant.RiskCorrelationId;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module merchantIntegration {
				export class RunTimeEnvironment extends com.paypal.pyplcheckout.interfaces.Environment {
					public static class: java.lang.Class<com.paypal.pyplcheckout.merchantIntegration.RunTimeEnvironment>;
					public static LIVE: com.paypal.pyplcheckout.merchantIntegration.RunTimeEnvironment;
					public static SANDBOX: com.paypal.pyplcheckout.merchantIntegration.RunTimeEnvironment;
					public static STAGE: com.paypal.pyplcheckout.merchantIntegration.RunTimeEnvironment;
					public static LOCAL: com.paypal.pyplcheckout.merchantIntegration.RunTimeEnvironment;
					public static valueOf(param0: string): com.paypal.pyplcheckout.merchantIntegration.RunTimeEnvironment;
					public toString(): string;
					public static values(): androidNative.Array<com.paypal.pyplcheckout.merchantIntegration.RunTimeEnvironment>;
				}
				export module RunTimeEnvironment {
					export class Companion {
						public static class: java.lang.Class<com.paypal.pyplcheckout.merchantIntegration.RunTimeEnvironment.Companion>;
						public fromString(param0: string): com.paypal.pyplcheckout.merchantIntegration.RunTimeEnvironment;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module merchantIntegration {
				export class ShippingCallbacks {
					public static class: java.lang.Class<com.paypal.pyplcheckout.merchantIntegration.ShippingCallbacks>;
					/**
					 * Constructs a new instance of the com.paypal.pyplcheckout.merchantIntegration.ShippingCallbacks interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onShippingChange(param0: com.paypal.pyplcheckout.pojo.ShippingData, param1: com.paypal.pyplcheckout.interfaces.ShippingCallbackListener): void;
					});
					public constructor();
					public onShippingChange(param0: com.paypal.pyplcheckout.pojo.ShippingData, param1: com.paypal.pyplcheckout.interfaces.ShippingCallbackListener): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module model {
				export class CheckoutEnvironment {
					public static class: java.lang.Class<com.paypal.pyplcheckout.model.CheckoutEnvironment>;
					public setPort(param0: string): void;
					public getCurrentMerchantPayPalEnvironment(): com.paypal.pyplcheckout.interfaces.Environment;
					public getGraphQlEndpoint(): string;
					public getELMOUrl(): string;
					public getLoggerUrl(): string;
					public getHost(): string;
					public getPort(): string;
					public setStagingUrl(param0: string): void;
					public setCurrentMerchantPayPalEnvironment(param0: com.paypal.pyplcheckout.interfaces.Environment): void;
					public constructor();
					public getRestUrl(): string;
					public getStagingUrl(): string;
					public getEnvironment(): string;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module model {
				export class DebugConfigManager {
					public static class: java.lang.Class<com.paypal.pyplcheckout.model.DebugConfigManager>;
					public getDidCustomTabOpen(): boolean;
					public setButtonSessionId(param0: string): void;
					public setShouldTurnOnFallbackExperiment(param0: boolean): void;
					public getCurrencyConversionContentPage(): com.paypal.pyplcheckout.navigation.ContentPage;
					public getBuyerLanguage(): string;
					public setConfig(param0: com.paypal.checkout.config.CheckoutConfig): void;
					public setStrongCustomerAuthStepUp(param0: com.paypal.pyplcheckout.sca.StrongCustomerAuthStepUp): void;
					public getPostApproveSDKIntercept(): com.paypal.pyplcheckout.interfaces.SDKInterceptor;
					public isOnboardingComplete(): boolean;
					/** @deprecated */
					public setUpgradeAccessToken(param0: com.paypal.pyplcheckout.addcard.UpgradeAccessToken): void;
					public setIsFallback(param0: boolean): void;
					public getBillingAgreementsTermsContentPage(): com.paypal.pyplcheckout.navigation.ContentPage;
					public setSkipEligibility(param0: boolean): void;
					public getFundingEligibilityResponse(): com.paypal.checkout.fundingeligibility.FundingEligibilityResponse;
					public getButtonSessionId(): string;
					public getNewShippingAddressReviewContentPage(): com.paypal.pyplcheckout.navigation.ContentPage;
					public getSDKLaunchTime(): number;
					public NewShippingAddressViewListenerImpl(param0: com.paypal.pyplcheckout.addressbook.model.NewShippingAddressViewListenerImpl): void;
					public getCheckoutSession(): com.paypal.pyplcheckout.pojo.CheckoutSession;
					public resetLsatToken(): void;
					public setButtonVersion(param0: string): void;
					public setCheckoutBaseActivity(param0: com.paypal.pyplcheckout.home.view.BaseActivity): void;
					public setCurrencyCode(param0: com.paypal.checkout.createorder.CurrencyCode): void;
					public getContentRouter(): com.paypal.pyplcheckout.flavornavigation.ContentRouter;
					public getPostReviewSDKIntercept(): com.paypal.pyplcheckout.interfaces.SDKInterceptor;
					public getNewShippingAddressViewListenerImpl(): com.paypal.pyplcheckout.addressbook.model.NewShippingAddressViewListenerImpl;
					public getNewShippingAddressContentPage(): com.paypal.pyplcheckout.navigation.ContentPage;
					public setBillingAddress(param0: com.paypal.pyplcheckout.pojo.BillingAddressRequest): void;
					public checkCheckoutJSSession(): boolean;
					public getUserAction(): com.paypal.checkout.createorder.UserAction;
					public getOnApprove(): com.paypal.checkout.approve.OnApprove;
					public setShippingAddress(param0: com.paypal.pyplcheckout.pojo.ShippingAddress): void;
					public getCurrencyCode(): com.paypal.checkout.createorder.CurrencyCode;
					public setFacilitatorClientId(param0: string): void;
					public setButtonStickinessId(param0: string): void;
					public setAddressBookContentPage(param0: com.paypal.pyplcheckout.navigation.ContentPage): void;
					public setOrderAuthorizeUrl(param0: string): void;
					public getPaypalCheckoutCompleteListener(): com.paypal.pyplcheckout.interfaces.PayPalCheckoutCompleteListener;
					public setCheckoutEnvironment(param0: com.paypal.pyplcheckout.model.CheckoutEnvironment): void;
					public setThreeDSContentPage(param0: com.paypal.pyplcheckout.navigation.ContentPage): void;
					public getFacilitatorClientId(): string;
					public getClientId(): string;
					public setClientId(param0: string): void;
					public reset(): void;
					public setPaymentButtonFundingType(param0: com.paypal.checkout.paymentbutton.PaymentButtonFundingType): void;
					public isDebug(): boolean;
					public setLsatToken(param0: string): void;
					public getNewShippingAddressReviewViewListenerImpl(): com.paypal.pyplcheckout.addressbook.model.NewShippingAddressReviewViewListenerImpl;
					public getMerchantOrderInfo(): com.paypal.checkout.order.Order;
					public setSDKLaunchTime(param0: number): void;
					public shouldTurnOnFallbackExperiment(): boolean;
					public getPaymentButtonFundingType(): com.paypal.checkout.paymentbutton.PaymentButtonFundingType;
					public invokeOnErrorCallback(param0: java.lang.Exception, param1: com.paypal.checkout.error.ErrorReason, param2: globalAndroid.os.Handler): void;
					public setCorrelationIds(param0: com.paypal.pyplcheckout.services.InternalCorrelationIds): void;
					public setShippingMethodContentPage(param0: com.paypal.pyplcheckout.navigation.ContentPage): void;
					public isSmartPaymentCheckout(): boolean;
					public getNativeCheckoutWebSSO(): com.paypal.pyplcheckout.auth.NativeCheckoutWebSSO;
					public setOnCancel(param0: com.paypal.checkout.cancel.OnCancel): void;
					public getHomeContentPage(): com.paypal.pyplcheckout.navigation.ContentPage;
					public getOrderAuthorizeUrl(): string;
					public setMerchantCartUrl(param0: string): void;
					public getThreeDSContentPageListener(): com.paypal.pyplcheckout.threeds.model.PayPalThreeDSV1ViewListenerImpl;
					public setRateProtectionContentPage(param0: com.paypal.pyplcheckout.navigation.ContentPage): void;
					public setCheckoutToken(param0: string): void;
					public getEnabledElmoAbExperiment(): java.util.List<string>;
					public setCryptoConsentViewContentPage(param0: com.paypal.pyplcheckout.navigation.ContentPage): void;
					public setSmartPaymentCheckout(param0: boolean): void;
					public setProviderContext(param0: globalAndroid.content.Context): void;
					public getInitParams(): java.util.Map<string,string>;
					public getEnableFundingOptions(): java.util.List<string>;
					public setMerchantURLQueryParams(param0: androidNative.Array<string>): void;
					public setDcvv(param0: string): void;
					public setInitParams(param0: java.util.Map<string,string>): void;
					public invokeOnErrorCallback(param0: java.lang.Exception, param1: com.paypal.checkout.error.ErrorReason): void;
					public getUserProfileContentPageListener(): com.paypal.pyplcheckout.userprofile.model.UserProfileViewListenerImpl;
					public isNativeAddCardEnabled(): boolean;
					public getOnCancel(): com.paypal.checkout.cancel.OnCancel;
					public setShippingMethodContentPageListener(param0: com.paypal.pyplcheckout.shippingmethods.model.ShippingMethodsViewListenerImpl): void;
					public setEnableFundingOptions(param0: java.util.List<string>): void;
					public shouldShowCloseButton(): boolean;
					public getReferrerPackage(): globalAndroid.net.Uri;
					public getShippingMethodContentPage(): com.paypal.pyplcheckout.navigation.ContentPage;
					public getDBInstanceId(): string;
					public getDidReturnFromWeb(): boolean;
					public setABConfigurationRequested(param0: boolean): void;
					public setCryptoConsentViewListener(param0: com.paypal.pyplcheckout.crypto.model.CryptoConsentViewListenerImpl): void;
					public setBuyerIPCountry(param0: string): void;
					public static getInstance(): com.paypal.pyplcheckout.model.DebugConfigManager;
					public getMerchantWebView(): globalAndroid.webkit.WebView;
					public getDidPYPLActivityPause(): boolean;
					public isABConfigurationRequested(): boolean;
					public getMerchantRedirectURL(): string;
					public setDBInstanceId(param0: string): void;
					public getShippingCallbacks(): com.paypal.pyplcheckout.merchantIntegration.ShippingCallbacks;
					public isShippingCallbackEnabled(): boolean;
					public shouldFailEligibilityCall(): boolean;
					public isSkipEligibility(): boolean;
					public setFundingEligibilityResponse(param0: com.paypal.checkout.fundingeligibility.FundingEligibilityResponse): void;
					public setShouldShowCloseButton(param0: boolean): void;
					public getOnShippingChange(): com.paypal.checkout.shipping.OnShippingChange;
					public getPayPalChannelInfo(): com.paypal.pyplcheckout.common.instrumentation.PEnums.PayPalChannelInfo;
					public getShippingMethodContentPageListener(): com.paypal.pyplcheckout.shippingmethods.model.ShippingMethodsViewListenerImpl;
					public shouldFallBackToWeb(): boolean;
					public getPreReviewSDKIntercept(): com.paypal.pyplcheckout.interfaces.SDKInterceptor;
					public setLoadingText(param0: string): void;
					public getSelectedFundingOption(): com.paypal.pyplcheckout.pojo.FundingOption;
					public getMerchantURLQueryParams(): java.util.HashMap<string,string>;
					public setDidCustomTabOpen(param0: boolean): void;
					public getApplicationContext(): globalAndroid.content.Context;
					public setShouldFallBackToWeb(param0: boolean): void;
					public setUserAction(param0: com.paypal.checkout.createorder.UserAction): void;
					public setCurrencyConversionContentPageListener(param0: com.paypal.pyplcheckout.conversionrate.model.ConversionRateViewListenerImpl): void;
					public setTransactionDetailsContentPage(param0: com.paypal.pyplcheckout.navigation.ContentPage): void;
					public setAddressBookContentPageListener(param0: com.paypal.pyplcheckout.addressbook.model.AddressBookViewListenerImpl): void;
					public getMerchantURLScheme(): string;
					public getUserId(): string;
					public getFirebaseSessionId(): string;
					public getHostHandlesBlockingContingencies(): boolean;
					public isShouldUseBodyContainerPadding(): boolean;
					public setStickinessId(param0: string): void;
					public setPostReviewSDKIntercept(param0: com.paypal.pyplcheckout.interfaces.SDKInterceptor): void;
					public getUserProfileContentPage(): com.paypal.pyplcheckout.navigation.ContentPage;
					public setEnabledElmoAbExperiment(param0: java.util.List<com.paypal.pyplcheckout.ab.elmo.ElmoAbExperiment>): void;
					public getThreeDSContentPage(): com.paypal.pyplcheckout.navigation.ContentPage;
					public setShouldFailEligibilityCall(param0: boolean): void;
					public isCCTReturn(): boolean;
					public getAddressBookContentPageListener(): com.paypal.pyplcheckout.addressbook.model.AddressBookViewListenerImpl;
					public setPropsSet(param0: boolean): void;
					public setMerchantOrderInfo(param0: com.paypal.checkout.order.Order): void;
					public setFirebaseSessionId(param0: string): void;
					public setConfig(param0: com.paypal.pyplcheckout.providerIntegration.ExtendedCheckoutConfig): void;
					public setUserProfileContentPageListener(param0: com.paypal.pyplcheckout.userprofile.model.UserProfileViewListenerImpl): void;
					public getOrderCaptureUrl(): string;
					public isPropsSet(): boolean;
					public getPayMode(): com.paypal.pyplcheckout.services.Repository.PayModeEnum;
					public getApprovePaymentResponse(): com.paypal.pyplcheckout.pojo.ApprovePaymentResponse;
					public shouldShowExitDialogWithRadioButtons(): boolean;
					public getCheckoutToken(): string;
					public setCurrencyConversionContentPage(param0: com.paypal.pyplcheckout.navigation.ContentPage): void;
					public setBillingAgreementsTermsContentPage(param0: com.paypal.pyplcheckout.navigation.ContentPage): void;
					public setHomeContentPageListener(param0: com.paypal.pyplcheckout.home.model.HomeViewListenerImpl): void;
					public setShouldUseBodyContainerPadding(param0: boolean): void;
					public getCryptoConsentViewContentPage(): com.paypal.pyplcheckout.navigation.ContentPage;
					public getFundingOptions(): java.util.List<com.paypal.pyplcheckout.pojo.FundingOption>;
					public shouldDisableScrimBackground(): boolean;
					public getStickinessId(): string;
					public getFundingSource(): string;
					public setNativeAddCardEnabled(param0: boolean): void;
					public getCryptoConsentViewListener(): com.paypal.pyplcheckout.crypto.model.CryptoConsentViewListenerImpl;
					public getLoadingText(): string;
					public setShouldEnableBillingAgreements(param0: boolean): void;
					public getHostVersionName(): string;
					public setPayPalTransactionDetailsHeaderViewListener(param0: com.paypal.pyplcheckout.info.model.PayPalTransactionHeaderViewListenerImpl): void;
					public getRateProtectionContentPageListener(): com.paypal.pyplcheckout.conversionrateprotection.model.RateProtectionViewListenerImpl;
					public setCCTReturn(param0: boolean): void;
					public setBuyerLanguage(param0: string): void;
					public setDidPYPLActivityPause(param0: boolean): void;
					public setShouldShowExitDialogWithRadioButtons(param0: boolean): void;
					public setThreeDSContentPageListener(param0: com.paypal.pyplcheckout.threeds.model.PayPalThreeDSV1ViewListenerImpl): void;
					public checkIsFallback(): boolean;
					public getPayPalTransactionDetailsHeaderViewListener(): com.paypal.pyplcheckout.info.model.PayPalTransactionHeaderViewListenerImpl;
					public getCorrelationIds(): com.paypal.pyplcheckout.services.InternalCorrelationIds;
					public setHostHandlesBlockingContingencies(param0: boolean): void;
					public setProductName(param0: string): void;
					public getProductName(): string;
					public getProviderContext(): globalAndroid.content.Context;
					public setContentRouter(param0: com.paypal.pyplcheckout.flavornavigation.ContentRouter): void;
					public shouldEnableBillingAgreements(): boolean;
					public getButtonVersion(): string;
					public setHomeContentPage(param0: com.paypal.pyplcheckout.navigation.ContentPage): void;
					public getRateProtectionContentPage(): com.paypal.pyplcheckout.navigation.ContentPage;
					public getBuyerIPCountry(): string;
					public setFundingSource(param0: string): void;
					public getLsatToken(): string;
					public setPayPalChannelInfo(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.PayPalChannelInfo): void;
					public getHomeContentPageListener(): com.paypal.pyplcheckout.home.model.HomeViewListenerImpl;
					public setOnboardingComplete(param0: boolean): void;
					public setMerchantWebView(param0: globalAndroid.webkit.WebView): void;
					public getCurrencyConversionContentPageListener(): com.paypal.pyplcheckout.conversionrate.model.ConversionRateViewListenerImpl;
					public setOnError(param0: com.paypal.checkout.error.OnError): void;
					public getAddressBookContentPage(): com.paypal.pyplcheckout.navigation.ContentPage;
					public setSmartPaymentPopupCheckout(param0: boolean): void;
					public resetChecks(): void;
					public getCheckoutEnvironment(): com.paypal.pyplcheckout.model.CheckoutEnvironment;
					public isSmartPaymentPopupCheckout(): boolean;
					public setOnShippingChange(param0: com.paypal.checkout.shipping.OnShippingChange): void;
					public setDomain(param0: string): void;
					public getCustomTabsIntentBuilder(): androidx.browser.customtabs.CustomTabsIntent.Builder;
					public setReturnUrl(param0: string): void;
					public setCheckoutJSSession(param0: boolean): void;
					public setPayMode(param0: com.paypal.pyplcheckout.services.Repository.PayModeEnum): void;
					public getStrongCustomerAuthStepUp(): com.paypal.pyplcheckout.sca.StrongCustomerAuthStepUp;
					public setUserProfileContentPage(param0: com.paypal.pyplcheckout.navigation.ContentPage): void;
					public getUser(): com.paypal.pyplcheckout.pojo.User;
					public getMerchantCartUrl(): string;
					public setShippingCallbackEnabled(param0: boolean): void;
					public setOnApprove(param0: com.paypal.checkout.approve.OnApprove): void;
					public setOrderCaptureUrl(param0: string): void;
					public setShouldDisableScrimBackground(param0: boolean): void;
					public getTransactionDetailsContentPage(): com.paypal.pyplcheckout.navigation.ContentPage;
					public getDomain(): string;
					public setDidReturnFromWeb(param0: boolean): void;
					public setRateProtectionContentPageListener(param0: com.paypal.pyplcheckout.conversionrateprotection.model.RateProtectionViewListenerImpl): void;
					public getCheckoutBaseActivity(): com.paypal.pyplcheckout.home.view.BaseActivity;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module model {
				export class GenericViewData<T>  extends java.lang.Object {
					public static class: java.lang.Class<com.paypal.pyplcheckout.model.GenericViewData<any>>;
					public getViewData(): T;
					public constructor(param0: T);
					public setViewData(param0: T): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module model {
				export class MapItem {
					public static class: java.lang.Class<com.paypal.pyplcheckout.model.MapItem>;
					public component2(): string;
					public getMapItemPlans(): java.util.List<com.paypal.pyplcheckout.pojo.Plan>;
					public component3(): string;
					public getMapItemType(): string;
					public component5(): boolean;
					public component6(): boolean;
					public component7(): java.util.List<com.paypal.pyplcheckout.pojo.Plan>;
					public getMapItemFourDigits(): string;
					public equals(param0: any): boolean;
					public toString(): string;
					public getMapItemPlanId(): string;
					public component1(): string;
					public constructor(param0: string, param1: string, param2: string, param3: string, param4: boolean, param5: boolean, param6: java.util.List<com.paypal.pyplcheckout.pojo.Plan>);
					public copy(param0: string, param1: string, param2: string, param3: string, param4: boolean, param5: boolean, param6: java.util.List<com.paypal.pyplcheckout.pojo.Plan>): com.paypal.pyplcheckout.model.MapItem;
					public getMapItemLabel(): string;
					public component4(): string;
					public getMapItemIsPreferredFundingOption(): boolean;
					public hashCode(): number;
					public getMapItemIsSelectedFundingOption(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module model {
				export class PaymentProcessors {
					public static class: java.lang.Class<com.paypal.pyplcheckout.model.PaymentProcessors>;
					public static VISA: com.paypal.pyplcheckout.model.PaymentProcessors;
					public static MASTERCARD: com.paypal.pyplcheckout.model.PaymentProcessors;
					public static AMEX: com.paypal.pyplcheckout.model.PaymentProcessors;
					public static DISCOVER: com.paypal.pyplcheckout.model.PaymentProcessors;
					public static DINERSCLUB: com.paypal.pyplcheckout.model.PaymentProcessors;
					public static CHINAUNIONPAY: com.paypal.pyplcheckout.model.PaymentProcessors;
					public static NOTFOUND: com.paypal.pyplcheckout.model.PaymentProcessors;
					public getCscMaxLength(): number;
					public static values(): androidNative.Array<com.paypal.pyplcheckout.model.PaymentProcessors>;
					public getAutoAdvanceLength(): number;
					public static valueOf(param0: string): com.paypal.pyplcheckout.model.PaymentProcessors;
					public getMaxLength(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module model {
				export module PaymentProcessorsKt {
export module  {
					export class WhenMappings {
						public static class: java.lang.Class<com.paypal.pyplcheckout.model.PaymentProcessorsKt.WhenMappings>;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module model {
				export class PrincipalFundingOptionMapMaker {
					public static class: java.lang.Class<com.paypal.pyplcheckout.model.PrincipalFundingOptionMapMaker>;
					public constructor(param0: java.util.List<com.paypal.pyplcheckout.pojo.FundingOption>, param1: java.util.Map<string,com.paypal.pyplcheckout.model.MapItem>);
					public getPrincipalMap(): java.util.Map<string,com.paypal.pyplcheckout.model.MapItem>;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module model {
				export class RoundedCornersTransformation {
					public static class: java.lang.Class<com.paypal.pyplcheckout.model.RoundedCornersTransformation>;
					public transform(param0: globalAndroid.graphics.Bitmap): globalAndroid.graphics.Bitmap;
					public constructor(param0: number, param1: number, param2: com.paypal.pyplcheckout.model.RoundedCornersTransformation.CornerType);
					public key(): string;
				}
				export module RoundedCornersTransformation {
					export class CornerType {
						public static class: java.lang.Class<com.paypal.pyplcheckout.model.RoundedCornersTransformation.CornerType>;
						public static ALL: com.paypal.pyplcheckout.model.RoundedCornersTransformation.CornerType;
						public static TOP_LEFT: com.paypal.pyplcheckout.model.RoundedCornersTransformation.CornerType;
						public static TOP_RIGHT: com.paypal.pyplcheckout.model.RoundedCornersTransformation.CornerType;
						public static BOTTOM_LEFT: com.paypal.pyplcheckout.model.RoundedCornersTransformation.CornerType;
						public static BOTTOM_RIGHT: com.paypal.pyplcheckout.model.RoundedCornersTransformation.CornerType;
						public static TOP: com.paypal.pyplcheckout.model.RoundedCornersTransformation.CornerType;
						public static BOTTOM: com.paypal.pyplcheckout.model.RoundedCornersTransformation.CornerType;
						public static LEFT: com.paypal.pyplcheckout.model.RoundedCornersTransformation.CornerType;
						public static RIGHT: com.paypal.pyplcheckout.model.RoundedCornersTransformation.CornerType;
						public static OTHER_TOP_LEFT: com.paypal.pyplcheckout.model.RoundedCornersTransformation.CornerType;
						public static OTHER_TOP_RIGHT: com.paypal.pyplcheckout.model.RoundedCornersTransformation.CornerType;
						public static OTHER_BOTTOM_LEFT: com.paypal.pyplcheckout.model.RoundedCornersTransformation.CornerType;
						public static OTHER_BOTTOM_RIGHT: com.paypal.pyplcheckout.model.RoundedCornersTransformation.CornerType;
						public static DIAGONAL_FROM_TOP_LEFT: com.paypal.pyplcheckout.model.RoundedCornersTransformation.CornerType;
						public static DIAGONAL_FROM_TOP_RIGHT: com.paypal.pyplcheckout.model.RoundedCornersTransformation.CornerType;
						public static values(): androidNative.Array<com.paypal.pyplcheckout.model.RoundedCornersTransformation.CornerType>;
						public static valueOf(param0: string): com.paypal.pyplcheckout.model.RoundedCornersTransformation.CornerType;
					}
					export class WhenMappings {
						public static class: java.lang.Class<com.paypal.pyplcheckout.model.RoundedCornersTransformation.WhenMappings>;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module model {
				export class ViewStatePageHeightManager {
					public static class: java.lang.Class<com.paypal.pyplcheckout.model.ViewStatePageHeightManager>;
					public constructor(param0: boolean, param1: boolean, param2: boolean, param3: boolean);
					public getMinPageHeight(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module navigation {
				export class ContainerViewTypeDescriptor {
					public static class: java.lang.Class<com.paypal.pyplcheckout.navigation.ContainerViewTypeDescriptor>;
					public constructor(param0: com.paypal.pyplcheckout.navigation.ContainerViewTypeDescriptor.ViewType);
					public getContainerViewType(): com.paypal.pyplcheckout.navigation.ContainerViewTypeDescriptor.ViewType;
				}
				export module ContainerViewTypeDescriptor {
					export class ViewType {
						public static class: java.lang.Class<com.paypal.pyplcheckout.navigation.ContainerViewTypeDescriptor.ViewType>;
						public static HEADER: com.paypal.pyplcheckout.navigation.ContainerViewTypeDescriptor.ViewType;
						public static BODY: com.paypal.pyplcheckout.navigation.ContainerViewTypeDescriptor.ViewType;
						public static FOOTER: com.paypal.pyplcheckout.navigation.ContainerViewTypeDescriptor.ViewType;
						public static values(): androidNative.Array<com.paypal.pyplcheckout.navigation.ContainerViewTypeDescriptor.ViewType>;
						public static valueOf(param0: string): com.paypal.pyplcheckout.navigation.ContainerViewTypeDescriptor.ViewType;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module navigation {
				export class ContentPage extends com.paypal.pyplcheckout.navigation.interfaces.IContentPage {
					public static class: java.lang.Class<com.paypal.pyplcheckout.navigation.ContentPage>;
					public static TAG: string;
					public topBannerContentViewList: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
					public headerContentViewsList: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
					public bodyContentViewsList: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
					public footerContentViewsList: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
					public getFooterContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
					public setBodyContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
					public addViewsToContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup, param2: number): void;
					public getHeaderContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
					public addViewsToContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup): void;
					public getTopBannerContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
					public getBodyContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
					public getHeaderContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
					public removeViewsFromContainer(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param1: globalAndroid.view.ViewGroup): void;
					public getViewId(): string;
					public constructor(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param1: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param2: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param3: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>);
					public getFooterContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
					public setFooterContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
					public constructor();
					public addViewsToContainer(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param1: globalAndroid.view.ViewGroup): void;
					public removeViewsFromContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup): void;
					public setHeaderContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
					public getBodyContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module navigation {
				export class NavigationUtils {
					public static class: java.lang.Class<com.paypal.pyplcheckout.navigation.NavigationUtils>;
					public static INSTANCE: com.paypal.pyplcheckout.navigation.NavigationUtils;
					public static createContentViewNewInstance(param0: java.util.List<any>, param1: globalAndroid.content.Context, param2: androidx.fragment.app.Fragment, param3: com.paypal.pyplcheckout.userprofile.model.UserProfileViewListenerImpl, param4: com.paypal.pyplcheckout.addressbook.model.AddressBookViewListenerImpl, param5: com.paypal.pyplcheckout.conversionrate.model.ConversionRateViewListenerImpl, param6: com.paypal.pyplcheckout.conversionrateprotection.model.RateProtectionViewListenerImpl, param7: com.paypal.pyplcheckout.home.model.HomeViewListenerImpl, param8: com.paypal.pyplcheckout.shippingmethods.model.ShippingMethodsViewListenerImpl, param9: com.paypal.pyplcheckout.threeds.model.PayPalThreeDSV1ViewListenerImpl, param10: com.paypal.pyplcheckout.addressbook.model.NewShippingAddressViewListenerImpl, param11: com.paypal.pyplcheckout.addressbook.model.NewShippingAddressReviewViewListenerImpl, param12: com.paypal.pyplcheckout.crypto.model.CryptoConsentViewListenerImpl): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
					public static getContentViewById(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.content.Context, param2: androidx.fragment.app.Fragment, param3: com.paypal.pyplcheckout.userprofile.model.UserProfileViewListenerImpl, param4: com.paypal.pyplcheckout.addressbook.model.AddressBookViewListenerImpl, param5: com.paypal.pyplcheckout.conversionrate.model.ConversionRateViewListenerImpl, param6: com.paypal.pyplcheckout.conversionrateprotection.model.RateProtectionViewListenerImpl, param7: com.paypal.pyplcheckout.home.model.HomeViewListenerImpl, param8: com.paypal.pyplcheckout.shippingmethods.model.ShippingMethodsViewListenerImpl, param9: com.paypal.pyplcheckout.threeds.model.PayPalThreeDSV1ViewListenerImpl, param10: com.paypal.pyplcheckout.addressbook.model.NewShippingAddressViewListenerImpl, param11: com.paypal.pyplcheckout.addressbook.model.NewShippingAddressReviewViewListenerImpl, param12: com.paypal.pyplcheckout.crypto.model.CryptoConsentViewListenerImpl): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module navigation {
				export module interfaces {
					export class ContentView extends com.paypal.pyplcheckout.navigation.interfaces.Identifiable {
						public static class: java.lang.Class<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						/**
						 * Constructs a new instance of the com.paypal.pyplcheckout.navigation.interfaces.ContentView interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							setContentViewVisibility(param0: number): void;
							removeListeners(): void;
							getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							getIsAnchoredToBottomSheet(): boolean;
							getContentViewMinHeight(): number;
							getViewId(): string;
						});
						public constructor();
						public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
						public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
						public getIsAnchoredToBottomSheet(): boolean;
						public setContentViewVisibility(param0: number): void;
						public removeListeners(): void;
						public getContentViewMinHeight(): number;
						public getViewId(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module navigation {
				export module interfaces {
					export class IContentPage extends com.paypal.pyplcheckout.navigation.interfaces.Identifiable {
						public static class: java.lang.Class<com.paypal.pyplcheckout.navigation.interfaces.IContentPage>;
						/**
						 * Constructs a new instance of the com.paypal.pyplcheckout.navigation.interfaces.IContentPage interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							addViewsToContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup): void;
							addViewsToContainer(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param1: globalAndroid.view.ViewGroup): void;
							addViewsToContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup, param2: number): void;
							removeViewsFromContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup): void;
							removeViewsFromContainer(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param1: globalAndroid.view.ViewGroup): void;
							setHeaderContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
							setBodyContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
							setFooterContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
							getTopBannerContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
							getHeaderContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
							getBodyContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
							getFooterContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
							getHeaderContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
							getBodyContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
							getFooterContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
							getViewId(): string;
						});
						public constructor();
						public setFooterContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
						public getBodyContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public setHeaderContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
						public getHeaderContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
						public setBodyContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
						public getHeaderContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public getTopBannerContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public getBodyContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
						public getViewId(): string;
						public addViewsToContainer(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param1: globalAndroid.view.ViewGroup): void;
						public removeViewsFromContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup): void;
						public getFooterContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public addViewsToContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup): void;
						public getFooterContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
						public removeViewsFromContainer(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param1: globalAndroid.view.ViewGroup): void;
						public addViewsToContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup, param2: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module navigation {
				export module interfaces {
					export class IContentRouter {
						public static class: java.lang.Class<com.paypal.pyplcheckout.navigation.interfaces.IContentRouter>;
						/**
						 * Constructs a new instance of the com.paypal.pyplcheckout.navigation.interfaces.IContentRouter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getCheckoutActivity(): java.lang.ref.WeakReference<androidx.appcompat.app.AppCompatActivity>;
							setCheckoutActivity(param0: java.lang.ref.WeakReference<androidx.appcompat.app.AppCompatActivity>): void;
							reset(): void;
							clear(): void;
							doesFragmentExistOrNull(param0: string, param1: androidx.fragment.app.Fragment): boolean;
							doesFragmentNotExistOrNull(param0: string, param1: androidx.fragment.app.Fragment): boolean;
							addFragment(param0: string, param1: androidx.fragment.app.Fragment): void;
							updateFragment(param0: string, param1: androidx.fragment.app.Fragment): void;
							removeFragment(param0: string): void;
							getFragment(param0: string): androidx.fragment.app.Fragment;
							gotoFragment(param0: globalAndroid.content.Context, param1: string): void;
							finishFragment(param0: string, param1: androidx.fragment.app.Fragment): void;
							startActivityAndHidePaySheet(param0: androidx.appcompat.app.AppCompatActivity, param1: globalAndroid.content.Intent): void;
							finishActivityAndShowPaySheet(param0: androidx.appcompat.app.AppCompatActivity): void;
							showCurrentFragment(param0: androidx.appcompat.app.AppCompatActivity): void;
							startFragment(param0: androidx.appcompat.app.AppCompatActivity, param1: number, param2: androidx.fragment.app.Fragment, param3: string): void;
							setUpFragmentAnimation(param0: com.paypal.pyplcheckout.animation.base.FragmentAnimation): void;
							onBackPressed(param0: androidx.appcompat.app.AppCompatActivity): boolean;
						});
						public constructor();
						public finishFragment(param0: string, param1: androidx.fragment.app.Fragment): void;
						public doesFragmentExistOrNull(param0: string, param1: androidx.fragment.app.Fragment): boolean;
						public doesFragmentNotExistOrNull(param0: string, param1: androidx.fragment.app.Fragment): boolean;
						public finishActivityAndShowPaySheet(param0: androidx.appcompat.app.AppCompatActivity): void;
						public startActivityAndHidePaySheet(param0: androidx.appcompat.app.AppCompatActivity, param1: globalAndroid.content.Intent): void;
						public showCurrentFragment(param0: androidx.appcompat.app.AppCompatActivity): void;
						public setCheckoutActivity(param0: java.lang.ref.WeakReference<androidx.appcompat.app.AppCompatActivity>): void;
						public removeFragment(param0: string): void;
						public addFragment(param0: string, param1: androidx.fragment.app.Fragment): void;
						public setUpFragmentAnimation(param0: com.paypal.pyplcheckout.animation.base.FragmentAnimation): void;
						public gotoFragment(param0: globalAndroid.content.Context, param1: string): void;
						public getCheckoutActivity(): java.lang.ref.WeakReference<androidx.appcompat.app.AppCompatActivity>;
						public startFragment(param0: androidx.appcompat.app.AppCompatActivity, param1: number, param2: androidx.fragment.app.Fragment, param3: string): void;
						public clear(): void;
						public getFragment(param0: string): androidx.fragment.app.Fragment;
						public updateFragment(param0: string, param1: androidx.fragment.app.Fragment): void;
						public reset(): void;
						public onBackPressed(param0: androidx.appcompat.app.AppCompatActivity): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module navigation {
				export module interfaces {
					export class ICustomViewsViewModel {
						public static class: java.lang.Class<com.paypal.pyplcheckout.navigation.interfaces.ICustomViewsViewModel>;
						/**
						 * Constructs a new instance of the com.paypal.pyplcheckout.navigation.interfaces.ICustomViewsViewModel interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							initViewModelObservers(): void;
							getComponentActivity(param0: globalAndroid.content.Context): androidx.activity.ComponentActivity;
							getLifecycleOwner(param0: globalAndroid.view.View): androidx.lifecycle.LifecycleOwner;
						});
						public constructor();
						public getComponentActivity(param0: globalAndroid.content.Context): androidx.activity.ComponentActivity;
						public initViewModelObservers(): void;
						public getLifecycleOwner(param0: globalAndroid.view.View): androidx.lifecycle.LifecycleOwner;
					}
					export module ICustomViewsViewModel {
						export class DefaultImpls {
							public static class: java.lang.Class<com.paypal.pyplcheckout.navigation.interfaces.ICustomViewsViewModel.DefaultImpls>;
							public static getLifecycleOwner(param0: com.paypal.pyplcheckout.navigation.interfaces.ICustomViewsViewModel, param1: globalAndroid.view.View): androidx.lifecycle.LifecycleOwner;
							public static getComponentActivity(param0: com.paypal.pyplcheckout.navigation.interfaces.ICustomViewsViewModel, param1: globalAndroid.content.Context): androidx.activity.ComponentActivity;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module navigation {
				export module interfaces {
					export class Identifiable {
						public static class: java.lang.Class<com.paypal.pyplcheckout.navigation.interfaces.Identifiable>;
						/**
						 * Constructs a new instance of the com.paypal.pyplcheckout.navigation.interfaces.Identifiable interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getViewId(): string;
						});
						public constructor();
						public getViewId(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module network {
				export class ConnectivityHandler {
					public static class: java.lang.Class<com.paypal.pyplcheckout.network.ConnectivityHandler>;
					public isNetworkAvailable(): boolean;
					public getContext(): globalAndroid.content.Context;
					public setContext(param0: globalAndroid.content.Context): void;
					public constructor(param0: globalAndroid.content.Context, param1: com.paypal.pyplcheckout.events.Events, param2: com.paypal.pyplcheckout.di.AndroidSDKVersionProvider);
					public getEvents(): com.paypal.pyplcheckout.events.Events;
					public setEvents(param0: com.paypal.pyplcheckout.events.Events): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module network {
				export class ConnectivityHandler_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.network.ConnectivityHandler> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.network.ConnectivityHandler_Factory>;
					public static create(param0: javax.inject.Provider<globalAndroid.content.Context>, param1: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param2: javax.inject.Provider<com.paypal.pyplcheckout.di.AndroidSDKVersionProvider>): com.paypal.pyplcheckout.network.ConnectivityHandler_Factory;
					public constructor(param0: javax.inject.Provider<globalAndroid.content.Context>, param1: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param2: javax.inject.Provider<com.paypal.pyplcheckout.di.AndroidSDKVersionProvider>);
					public get(): com.paypal.pyplcheckout.network.ConnectivityHandler;
					public static newInstance(param0: globalAndroid.content.Context, param1: com.paypal.pyplcheckout.events.Events, param2: com.paypal.pyplcheckout.di.AndroidSDKVersionProvider): com.paypal.pyplcheckout.network.ConnectivityHandler;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class AddCardAnalytics {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.AddCardAnalytics>;
					public equals(param0: any): boolean;
					public toString(): string;
					public getId(): string;
					public component1(): string;
					public component2(): string;
					public getName(): string;
					public component3(): string;
					public getType(): string;
					public hashCode(): number;
					public constructor(param0: string, param1: string, param2: string);
					public copy(param0: string, param1: string, param2: string): com.paypal.pyplcheckout.pojo.AddCardAnalytics;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class AddCardError {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.AddCardError>;
					public getStatusCode(): java.lang.Integer;
					public getErrorData(): com.paypal.pyplcheckout.pojo.AddCardErrorData;
					public copy(param0: string, param1: java.util.List<string>, param2: java.lang.Integer, param3: java.lang.Boolean, param4: java.util.List<com.paypal.pyplcheckout.pojo.AddCardErrorField>, param5: com.paypal.pyplcheckout.pojo.AddCardErrorData): com.paypal.pyplcheckout.pojo.AddCardError;
					public constructor(param0: string, param1: java.util.List<string>, param2: java.lang.Integer, param3: java.lang.Boolean, param4: java.util.List<com.paypal.pyplcheckout.pojo.AddCardErrorField>, param5: com.paypal.pyplcheckout.pojo.AddCardErrorData);
					public getContingency(): java.lang.Boolean;
					public component2(): java.util.List<string>;
					public component3(): java.lang.Integer;
					public getData(): java.util.List<com.paypal.pyplcheckout.pojo.AddCardErrorField>;
					public equals(param0: any): boolean;
					public component4(): java.lang.Boolean;
					public toString(): string;
					public component1(): string;
					public component5(): java.util.List<com.paypal.pyplcheckout.pojo.AddCardErrorField>;
					public getMessage(): string;
					public getPath(): java.util.List<string>;
					public component6(): com.paypal.pyplcheckout.pojo.AddCardErrorData;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class AddCardErrorData {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.AddCardErrorData>;
					public equals(param0: any): boolean;
					public toString(): string;
					public component1(): string;
					public constructor(param0: string);
					public getFundingInstrumentId(): string;
					public hashCode(): number;
					public copy(param0: string): com.paypal.pyplcheckout.pojo.AddCardErrorData;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class AddCardErrorField {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.AddCardErrorField>;
					public constructor(param0: string, param1: string);
					public equals(param0: any): boolean;
					public toString(): string;
					public getCode(): string;
					public component1(): string;
					public copy(param0: string, param1: string): com.paypal.pyplcheckout.pojo.AddCardErrorField;
					public component2(): string;
					public getField(): string;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class AddCardQueryParams {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.AddCardQueryParams>;
					public getUser(): com.paypal.pyplcheckout.pojo.AddCardUser;
					public isPartialBillingAddress(): boolean;
					public component3(): com.paypal.pyplcheckout.pojo.AddCardUser;
					public component5(): string;
					public getPaypalRequestId(): string;
					public getAddress(): com.paypal.pyplcheckout.pojo.BillingAddress;
					public getCard(): com.paypal.pyplcheckout.pojo.Card;
					public copy(param0: com.paypal.pyplcheckout.pojo.FundingOptionType, param1: com.paypal.pyplcheckout.pojo.Card, param2: com.paypal.pyplcheckout.pojo.AddCardUser, param3: com.paypal.pyplcheckout.pojo.BillingAddress, param4: string, param5: boolean): com.paypal.pyplcheckout.pojo.AddCardQueryParams;
					public component6(): boolean;
					public getCardType(): com.paypal.pyplcheckout.pojo.FundingOptionType;
					public equals(param0: any): boolean;
					public toString(): string;
					public constructor(param0: com.paypal.pyplcheckout.pojo.FundingOptionType, param1: com.paypal.pyplcheckout.pojo.Card, param2: com.paypal.pyplcheckout.pojo.AddCardUser, param3: com.paypal.pyplcheckout.pojo.BillingAddress, param4: string, param5: boolean);
					public component2(): com.paypal.pyplcheckout.pojo.Card;
					public component1(): com.paypal.pyplcheckout.pojo.FundingOptionType;
					public component4(): com.paypal.pyplcheckout.pojo.BillingAddress;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class AddCardResponse {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.AddCardResponse>;
					public equals(param0: any): boolean;
					public toString(): string;
					public component3(): java.util.List<com.paypal.pyplcheckout.pojo.AddCardError>;
					public copy(param0: com.paypal.pyplcheckout.pojo.AddCardResponseData, param1: com.paypal.pyplcheckout.pojo.Extensions, param2: java.util.List<com.paypal.pyplcheckout.pojo.AddCardError>): com.paypal.pyplcheckout.pojo.AddCardResponse;
					public getErrors(): java.util.List<com.paypal.pyplcheckout.pojo.AddCardError>;
					public getExtensions(): com.paypal.pyplcheckout.pojo.Extensions;
					public component1(): com.paypal.pyplcheckout.pojo.AddCardResponseData;
					public constructor(param0: com.paypal.pyplcheckout.pojo.AddCardResponseData, param1: com.paypal.pyplcheckout.pojo.Extensions, param2: java.util.List<com.paypal.pyplcheckout.pojo.AddCardError>);
					public getData(): com.paypal.pyplcheckout.pojo.AddCardResponseData;
					public hashCode(): number;
					public component2(): com.paypal.pyplcheckout.pojo.Extensions;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class AddCardResponseData {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.AddCardResponseData>;
					public equals(param0: any): boolean;
					public component1(): com.paypal.pyplcheckout.pojo.CheckoutSession;
					public toString(): string;
					public copy(param0: com.paypal.pyplcheckout.pojo.CheckoutSession): com.paypal.pyplcheckout.pojo.AddCardResponseData;
					public getAddCard(): com.paypal.pyplcheckout.pojo.CheckoutSession;
					public constructor(param0: com.paypal.pyplcheckout.pojo.CheckoutSession);
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class AddCardUpdateFundingOptions {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.AddCardUpdateFundingOptions>;
					public equals(param0: any): boolean;
					public constructor(param0: com.paypal.pyplcheckout.pojo.PaymentContingencies, param1: java.util.List<com.paypal.pyplcheckout.pojo.CreditPPCOffer>, param2: java.util.List<com.paypal.pyplcheckout.pojo.FundingOption>);
					public toString(): string;
					public getPaymentContingencies(): com.paypal.pyplcheckout.pojo.PaymentContingencies;
					public getFundingOptions(): java.util.List<com.paypal.pyplcheckout.pojo.FundingOption>;
					public component2(): java.util.List<com.paypal.pyplcheckout.pojo.CreditPPCOffer>;
					public component3(): java.util.List<com.paypal.pyplcheckout.pojo.FundingOption>;
					public constructor();
					public getCreditPPCOffers(): java.util.List<com.paypal.pyplcheckout.pojo.CreditPPCOffer>;
					public hashCode(): number;
					public component1(): com.paypal.pyplcheckout.pojo.PaymentContingencies;
					public copy(param0: com.paypal.pyplcheckout.pojo.PaymentContingencies, param1: java.util.List<com.paypal.pyplcheckout.pojo.CreditPPCOffer>, param2: java.util.List<com.paypal.pyplcheckout.pojo.FundingOption>): com.paypal.pyplcheckout.pojo.AddCardUpdateFundingOptions;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class AddCardUpdateFundingOptionsData {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.AddCardUpdateFundingOptionsData>;
					public equals(param0: any): boolean;
					public getUpdateCheckoutSessionFundingOptions(): com.paypal.pyplcheckout.pojo.AddCardUpdateFundingOptions;
					public toString(): string;
					public constructor(param0: com.paypal.pyplcheckout.pojo.AddCardUpdateFundingOptions);
					public copy(param0: com.paypal.pyplcheckout.pojo.AddCardUpdateFundingOptions): com.paypal.pyplcheckout.pojo.AddCardUpdateFundingOptionsData;
					public component1(): com.paypal.pyplcheckout.pojo.AddCardUpdateFundingOptions;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class AddCardUpdateFundingOptionsResponse {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.AddCardUpdateFundingOptionsResponse>;
					public equals(param0: any): boolean;
					public constructor(param0: com.paypal.pyplcheckout.pojo.AddCardUpdateFundingOptionsData, param1: com.paypal.pyplcheckout.pojo.Extensions, param2: java.util.List<com.paypal.pyplcheckout.pojo.Error>);
					public getData(): com.paypal.pyplcheckout.pojo.AddCardUpdateFundingOptionsData;
					public toString(): string;
					public component1(): com.paypal.pyplcheckout.pojo.AddCardUpdateFundingOptionsData;
					public component3(): java.util.List<com.paypal.pyplcheckout.pojo.Error>;
					public getExtensions(): com.paypal.pyplcheckout.pojo.Extensions;
					public hashCode(): number;
					public component2(): com.paypal.pyplcheckout.pojo.Extensions;
					public getErrors(): java.util.List<com.paypal.pyplcheckout.pojo.Error>;
					public copy(param0: com.paypal.pyplcheckout.pojo.AddCardUpdateFundingOptionsData, param1: com.paypal.pyplcheckout.pojo.Extensions, param2: java.util.List<com.paypal.pyplcheckout.pojo.Error>): com.paypal.pyplcheckout.pojo.AddCardUpdateFundingOptionsResponse;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class AddCardUser {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.AddCardUser>;
					public getDobMonth(): string;
					public component2(): string;
					public component5(): string;
					public getDobYear(): string;
					public component3(): string;
					public getCountry(): string;
					public getLastName(): string;
					public equals(param0: any): boolean;
					public toString(): string;
					public component1(): string;
					public getFirstName(): string;
					public copy(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string): com.paypal.pyplcheckout.pojo.AddCardUser;
					public component6(): string;
					public component4(): string;
					public hashCode(): number;
					public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string);
					public getDobDay(): string;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class AddShippingAddressResponse {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.AddShippingAddressResponse>;
					public component2(): java.util.List<com.paypal.pyplcheckout.pojo.Error>;
					public equals(param0: any): boolean;
					public component1(): com.paypal.pyplcheckout.pojo.EmbeddedCheckoutSession;
					public toString(): string;
					public constructor(param0: com.paypal.pyplcheckout.pojo.EmbeddedCheckoutSession, param1: java.util.List<com.paypal.pyplcheckout.pojo.Error>);
					public getData(): com.paypal.pyplcheckout.pojo.EmbeddedCheckoutSession;
					public hashCode(): number;
					public copy(param0: com.paypal.pyplcheckout.pojo.EmbeddedCheckoutSession, param1: java.util.List<com.paypal.pyplcheckout.pojo.Error>): com.paypal.pyplcheckout.pojo.AddShippingAddressResponse;
					public getErrors(): java.util.List<com.paypal.pyplcheckout.pojo.Error>;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class Address {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.Address>;
					public component2(): string;
					public component5(): string;
					public copy(param0: java.lang.Boolean, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string, param7: string, param8: string, param9: java.lang.Boolean): com.paypal.pyplcheckout.pojo.Address;
					public isPrimary(): java.lang.Boolean;
					public component10(): java.lang.Boolean;
					public toString(): string;
					public component8(): string;
					public component4(): string;
					public getPostalCode(): string;
					public hashCode(): number;
					public component1(): java.lang.Boolean;
					public constructor(param0: java.lang.Boolean, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string, param7: string, param8: string, param9: java.lang.Boolean);
					public getFullAddress(): string;
					public isSelected(): java.lang.Boolean;
					public component7(): string;
					public getLine1(): string;
					public component3(): string;
					public getCountry(): string;
					public getState(): string;
					public getCity(): string;
					public equals(param0: any): boolean;
					public getLine2(): string;
					public component6(): string;
					public component9(): string;
					public getAddressId(): string;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class AddressValidation {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.AddressValidation>;
					public component16(): string;
					public isValidAddress(): java.lang.Boolean;
					public getCountryCode(): string;
					public component13(): string;
					public constructor(param0: java.lang.Boolean, param1: java.lang.Boolean, param2: com.paypal.pyplcheckout.pojo.Address, param3: string, param4: java.util.List<string>, param5: string, param6: string, param7: string, param8: string, param9: string, param10: string, param11: string, param12: string, param13: string, param14: string, param15: string);
					public toString(): string;
					public component8(): string;
					public getAddressLine2(): string;
					public getAdminArea1(): string;
					public getFormattedAddress(): java.util.List<string>;
					public component4(): string;
					public component12(): string;
					public getPostalCode(): string;
					public hashCode(): number;
					public component1(): java.lang.Boolean;
					public component11(): string;
					public getAddressLine1(): string;
					public component5(): java.util.List<string>;
					public getAdminArea2(): string;
					public isReformatted(): java.lang.Boolean;
					public component7(): string;
					public copy(param0: java.lang.Boolean, param1: java.lang.Boolean, param2: com.paypal.pyplcheckout.pojo.Address, param3: string, param4: java.util.List<string>, param5: string, param6: string, param7: string, param8: string, param9: string, param10: string, param11: string, param12: string, param13: string, param14: string, param15: string): com.paypal.pyplcheckout.pojo.AddressValidation;
					public getMailability(): string;
					public getLine1(): string;
					public component3(): com.paypal.pyplcheckout.pojo.Address;
					public getCountry(): string;
					public getBadFields(): com.paypal.pyplcheckout.pojo.Address;
					public getState(): string;
					public getCity(): string;
					public component2(): java.lang.Boolean;
					public component15(): string;
					public component10(): string;
					public equals(param0: any): boolean;
					public getLine2(): string;
					public component6(): string;
					public component9(): string;
					public component14(): string;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class AddressValidationData {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.AddressValidationData>;
					public equals(param0: any): boolean;
					public toString(): string;
					public copy(param0: com.paypal.pyplcheckout.pojo.AddressValidation): com.paypal.pyplcheckout.pojo.AddressValidationData;
					public constructor(param0: com.paypal.pyplcheckout.pojo.AddressValidation);
					public getAddressValidation(): com.paypal.pyplcheckout.pojo.AddressValidation;
					public component1(): com.paypal.pyplcheckout.pojo.AddressValidation;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class AddressValidationResponse {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.AddressValidationResponse>;
					public equals(param0: any): boolean;
					public copy(param0: com.paypal.pyplcheckout.pojo.AddressValidationData, param1: com.paypal.pyplcheckout.pojo.Extensions, param2: java.util.List<com.paypal.pyplcheckout.pojo.Error>): com.paypal.pyplcheckout.pojo.AddressValidationResponse;
					public toString(): string;
					public component3(): java.util.List<com.paypal.pyplcheckout.pojo.Error>;
					public getData(): com.paypal.pyplcheckout.pojo.AddressValidationData;
					public getExtensions(): com.paypal.pyplcheckout.pojo.Extensions;
					public component1(): com.paypal.pyplcheckout.pojo.AddressValidationData;
					public hashCode(): number;
					public component2(): com.paypal.pyplcheckout.pojo.Extensions;
					public constructor(param0: com.paypal.pyplcheckout.pojo.AddressValidationData, param1: com.paypal.pyplcheckout.pojo.Extensions, param2: java.util.List<com.paypal.pyplcheckout.pojo.Error>);
					public getErrors(): java.util.List<com.paypal.pyplcheckout.pojo.Error>;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class Amount {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.Amount>;
					public getCurrencyFormat(): string;
					public getCurrencyFormatSymbolISOCurrency(): string;
					public getCurrencySymbol(): string;
					public constructor();
					public getAdditionalProperties(): java.util.Map<string,any>;
					public getCurrencyValue(): string;
					public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: java.util.Map<string,any>);
					public getCurrencyCode(): string;
					public setAdditionalProperty(param0: string, param1: any): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class AmountInput {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.AmountInput>;
					public constructor(param0: string, param1: string);
					public equals(param0: any): boolean;
					public toString(): string;
					public component1(): string;
					public component2(): string;
					public getCurrencyValue(): string;
					public copy(param0: string, param1: string): com.paypal.pyplcheckout.pojo.AmountInput;
					public hashCode(): number;
					public getCurrencyCode(): string;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class ApplicationIdentifier {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ApplicationIdentifier>;
					public static GOOGLE_SEARCH_APP: com.paypal.pyplcheckout.pojo.ApplicationIdentifier;
					public static CHROME_APP: com.paypal.pyplcheckout.pojo.ApplicationIdentifier;
					public static NOT_DEFINED_DUE_TO_VERSION_COMPATIBILITY: com.paypal.pyplcheckout.pojo.ApplicationIdentifier;
					public static NOT_DEFINED_DUE_TO_EMPTY_PROCESSES: com.paypal.pyplcheckout.pojo.ApplicationIdentifier;
					public static values(): androidNative.Array<com.paypal.pyplcheckout.pojo.ApplicationIdentifier>;
					public static valueOf(param0: string): com.paypal.pyplcheckout.pojo.ApplicationIdentifier;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class ApprovePayment {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ApprovePayment>;
					public copy(param0: com.paypal.pyplcheckout.pojo.PaymentContingencies, param1: com.paypal.pyplcheckout.pojo.Cart, param2: com.paypal.pyplcheckout.pojo.Buyer, param3: java.util.List<com.paypal.pyplcheckout.pojo.Address>): com.paypal.pyplcheckout.pojo.ApprovePayment;
					public getShippingAddresses(): java.util.List<com.paypal.pyplcheckout.pojo.Address>;
					public getPaymentContingencies(): com.paypal.pyplcheckout.pojo.PaymentContingencies;
					public component2(): com.paypal.pyplcheckout.pojo.Cart;
					public component1(): com.paypal.pyplcheckout.pojo.PaymentContingencies;
					public equals(param0: any): boolean;
					public toString(): string;
					public getBuyer(): com.paypal.pyplcheckout.pojo.Buyer;
					public component3(): com.paypal.pyplcheckout.pojo.Buyer;
					public component4(): java.util.List<com.paypal.pyplcheckout.pojo.Address>;
					public constructor(param0: com.paypal.pyplcheckout.pojo.PaymentContingencies, param1: com.paypal.pyplcheckout.pojo.Cart, param2: com.paypal.pyplcheckout.pojo.Buyer, param3: java.util.List<com.paypal.pyplcheckout.pojo.Address>);
					public hashCode(): number;
					public getCart(): com.paypal.pyplcheckout.pojo.Cart;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class ApprovePaymentData {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ApprovePaymentData>;
					public copy(param0: com.paypal.pyplcheckout.pojo.ApprovePayment): com.paypal.pyplcheckout.pojo.ApprovePaymentData;
					public equals(param0: any): boolean;
					public toString(): string;
					public component1(): com.paypal.pyplcheckout.pojo.ApprovePayment;
					public getApprovePayment(): com.paypal.pyplcheckout.pojo.ApprovePayment;
					public constructor(param0: com.paypal.pyplcheckout.pojo.ApprovePayment);
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class ApprovePaymentResponse {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ApprovePaymentResponse>;
					public component2(): java.util.List<com.paypal.pyplcheckout.pojo.Error>;
					public equals(param0: any): boolean;
					public copy(param0: com.paypal.pyplcheckout.pojo.ApprovePaymentData, param1: java.util.List<com.paypal.pyplcheckout.pojo.Error>): com.paypal.pyplcheckout.pojo.ApprovePaymentResponse;
					public toString(): string;
					public constructor(param0: com.paypal.pyplcheckout.pojo.ApprovePaymentData, param1: java.util.List<com.paypal.pyplcheckout.pojo.Error>);
					public component1(): com.paypal.pyplcheckout.pojo.ApprovePaymentData;
					public getHref(): string;
					public getData(): com.paypal.pyplcheckout.pojo.ApprovePaymentData;
					public hashCode(): number;
					public getFirstErrorDetails(): string;
					public getErrors(): java.util.List<com.paypal.pyplcheckout.pojo.Error>;
					public createFinalResponseObject(param0: com.paypal.pyplcheckout.pojo.firebase.FirebaseMessageData, param1: com.paypal.pyplcheckout.utils.ReturnToProviderOperationType): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class BeaverLoggerRequest {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.BeaverLoggerRequest>;
					public equals(param0: any): boolean;
					public getHeaders(): java.util.Map<string,string>;
					public component2(): java.util.Map<string,string>;
					public toString(): string;
					public constructor(param0: string, param1: java.util.Map<string,string>, param2: org.json.JSONObject);
					public component1(): string;
					public getUrl(): string;
					public getData(): org.json.JSONObject;
					public component3(): org.json.JSONObject;
					public copy(param0: string, param1: java.util.Map<string,string>, param2: org.json.JSONObject): com.paypal.pyplcheckout.pojo.BeaverLoggerRequest;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class BillingAddress {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.BillingAddress>;
					public component9(): java.lang.Boolean;
					public component2(): string;
					public component5(): string;
					public getFullAddress(): string;
					public isSelected(): java.lang.Boolean;
					public component7(): string;
					public getLine1(): string;
					public component3(): string;
					public getCountry(): string;
					public getState(): string;
					public getCity(): string;
					public equals(param0: any): boolean;
					public toString(): string;
					public component1(): string;
					public component8(): string;
					public getLine2(): string;
					public constructor();
					public component6(): string;
					public component4(): string;
					public getAddressId(): string;
					public getPostalCode(): string;
					public hashCode(): number;
					public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string, param7: string, param8: java.lang.Boolean);
					public copy(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string, param7: string, param8: java.lang.Boolean): com.paypal.pyplcheckout.pojo.BillingAddress;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class BillingAddressLookupRequest {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.BillingAddressLookupRequest>;
					public component2(): string;
					public component5(): string;
					public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string, param7: string);
					public component7(): string;
					public copy(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string, param7: string): com.paypal.pyplcheckout.pojo.BillingAddressLookupRequest;
					public getFamilyName(): string;
					public getLine1(): string;
					public component3(): string;
					public getCountry(): string;
					public getState(): string;
					public getCity(): string;
					public equals(param0: any): boolean;
					public toString(): string;
					public component1(): string;
					public component8(): string;
					public getLine2(): string;
					public component6(): string;
					public component4(): string;
					public getGivenName(): string;
					public getPostalCode(): string;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class BillingAddressRequest {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.BillingAddressRequest>;
					public component2(): string;
					public component5(): string;
					public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string, param7: string);
					public getCountryCode(): string;
					public getFullAddress(): string;
					public component7(): string;
					public getLine1(): string;
					public component3(): string;
					public getCountry(): string;
					public getState(): string;
					public setFullAddress(param0: string): void;
					public getCity(): string;
					public equals(param0: any): boolean;
					public toString(): string;
					public component1(): string;
					public setCountry(param0: string): void;
					public component8(): string;
					public getLine2(): string;
					public component6(): string;
					public setCountryCode(param0: string): void;
					public component4(): string;
					public copy(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string, param7: string): com.paypal.pyplcheckout.pojo.BillingAddressRequest;
					public getPostalCode(): string;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class BillingType {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.BillingType>;
					public static CHANNEL_INITIATED_BILLING: com.paypal.pyplcheckout.pojo.BillingType;
					public static MERCHANT_INITIATED_BILLING: com.paypal.pyplcheckout.pojo.BillingType;
					public static MERCHANT_INITIATED_SINGLE_BILLING: com.paypal.pyplcheckout.pojo.BillingType;
					public static CHANNEL_INITIATED_BILLING_SINGLE_AGREEMENT: com.paypal.pyplcheckout.pojo.BillingType;
					public static values(): androidNative.Array<com.paypal.pyplcheckout.pojo.BillingType>;
					public static valueOf(param0: string): com.paypal.pyplcheckout.pojo.BillingType;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class Buyer {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.Buyer>;
					public component2(): com.paypal.pyplcheckout.pojo.Email;
					public getName(): com.paypal.pyplcheckout.pojo.Name;
					public equals(param0: any): boolean;
					public copy(param0: string, param1: com.paypal.pyplcheckout.pojo.Email, param2: com.paypal.pyplcheckout.pojo.Name, param3: java.util.List<com.paypal.pyplcheckout.pojo.Address>, param4: java.util.List<com.paypal.pyplcheckout.pojo.Phone>): com.paypal.pyplcheckout.pojo.Buyer;
					public toString(): string;
					public component1(): string;
					public constructor(param0: string, param1: com.paypal.pyplcheckout.pojo.Email, param2: com.paypal.pyplcheckout.pojo.Name, param3: java.util.List<com.paypal.pyplcheckout.pojo.Address>, param4: java.util.List<com.paypal.pyplcheckout.pojo.Phone>);
					public getEmail(): com.paypal.pyplcheckout.pojo.Email;
					public component3(): com.paypal.pyplcheckout.pojo.Name;
					public component5(): java.util.List<com.paypal.pyplcheckout.pojo.Phone>;
					public getPhones(): java.util.List<com.paypal.pyplcheckout.pojo.Phone>;
					public component4(): java.util.List<com.paypal.pyplcheckout.pojo.Address>;
					public getUserId(): string;
					public hashCode(): number;
					public getAddresses(): java.util.List<com.paypal.pyplcheckout.pojo.Address>;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class BuyerDetails {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.BuyerDetails>;
					public getEligibleToHoldBalance(): boolean;
					public equals(param0: any): boolean;
					public toString(): string;
					public constructor(param0: boolean);
					public component1(): boolean;
					public copy(param0: boolean): com.paypal.pyplcheckout.pojo.BuyerDetails;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class CancelUrlResponse {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.CancelUrlResponse>;
					public equals(param0: any): boolean;
					public constructor(param0: com.paypal.pyplcheckout.pojo.CheckoutSessionData, param1: com.paypal.pyplcheckout.pojo.Extensions);
					public toString(): string;
					public component1(): com.paypal.pyplcheckout.pojo.CheckoutSessionData;
					public getData(): com.paypal.pyplcheckout.pojo.CheckoutSessionData;
					public copy(param0: com.paypal.pyplcheckout.pojo.CheckoutSessionData, param1: com.paypal.pyplcheckout.pojo.Extensions): com.paypal.pyplcheckout.pojo.CancelUrlResponse;
					public getExtensions(): com.paypal.pyplcheckout.pojo.Extensions;
					public hashCode(): number;
					public component2(): com.paypal.pyplcheckout.pojo.Extensions;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class Card {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.Card>;
					public getNumber(): string;
					public component2(): string;
					public component5(): string;
					public getType(): com.paypal.pyplcheckout.pojo.CardIssuerType;
					public component7(): string;
					public component3(): string;
					public getSecurityCode(): string;
					public getIssueNumber(): string;
					public equals(param0: any): boolean;
					public constructor(param0: com.paypal.pyplcheckout.pojo.CardIssuerType, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string, param7: string);
					public toString(): string;
					public component8(): string;
					public getStartYear(): string;
					public getExpiryMonth(): string;
					public component6(): string;
					public getStartMonth(): string;
					public component4(): string;
					public getExpiryYear(): string;
					public hashCode(): number;
					public copy(param0: com.paypal.pyplcheckout.pojo.CardIssuerType, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string, param7: string): com.paypal.pyplcheckout.pojo.Card;
					public component1(): com.paypal.pyplcheckout.pojo.CardIssuerType;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class CardIssuerType {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.CardIssuerType>;
					public static AMEX: com.paypal.pyplcheckout.pojo.CardIssuerType;
					public static VISA: com.paypal.pyplcheckout.pojo.CardIssuerType;
					public static MASTER_CARD: com.paypal.pyplcheckout.pojo.CardIssuerType;
					public static DINERS: com.paypal.pyplcheckout.pojo.CardIssuerType;
					public static DISCOVER: com.paypal.pyplcheckout.pojo.CardIssuerType;
					public static MAESTRO: com.paypal.pyplcheckout.pojo.CardIssuerType;
					public static JCB: com.paypal.pyplcheckout.pojo.CardIssuerType;
					public static CB_NATIONALE: com.paypal.pyplcheckout.pojo.CardIssuerType;
					public static COFINOGA: com.paypal.pyplcheckout.pojo.CardIssuerType;
					public static CETELEM: com.paypal.pyplcheckout.pojo.CardIssuerType;
					public static COFIDIS: com.paypal.pyplcheckout.pojo.CardIssuerType;
					public static ELO: com.paypal.pyplcheckout.pojo.CardIssuerType;
					public static HIPER: com.paypal.pyplcheckout.pojo.CardIssuerType;
					public static HIPERCARD: com.paypal.pyplcheckout.pojo.CardIssuerType;
					public static CHINA_UNION_PAY: com.paypal.pyplcheckout.pojo.CardIssuerType;
					public static RUPAY: com.paypal.pyplcheckout.pojo.CardIssuerType;
					public static UNSUPPORTED: com.paypal.pyplcheckout.pojo.CardIssuerType;
					public static values(): androidNative.Array<com.paypal.pyplcheckout.pojo.CardIssuerType>;
					public static valueOf(param0: string): com.paypal.pyplcheckout.pojo.CardIssuerType;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class CardTransactionType {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.CardTransactionType>;
					public static PRE_AUTH: com.paypal.pyplcheckout.pojo.CardTransactionType;
					public static FINAL_AUTH: com.paypal.pyplcheckout.pojo.CardTransactionType;
					public static RECURRING_PAYMENT: com.paypal.pyplcheckout.pojo.CardTransactionType;
					public static UNKNOWN: com.paypal.pyplcheckout.pojo.CardTransactionType;
					public static valueOf(param0: string): com.paypal.pyplcheckout.pojo.CardTransactionType;
					public static values(): androidNative.Array<com.paypal.pyplcheckout.pojo.CardTransactionType>;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class Cart {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.Cart>;
					public getCancelUrl(): com.paypal.pyplcheckout.pojo.Url;
					public getTotalAllowedOverCaptureAmount(): com.paypal.pyplcheckout.pojo.Amount;
					public component14(): com.paypal.pyplcheckout.pojo.CartAddress;
					public component2(): string;
					public component5(): string;
					public component10(): com.paypal.pyplcheckout.pojo.ReturnUrl;
					public getBillingType(): com.paypal.pyplcheckout.pojo.BillingType;
					public getShippingAddress(): com.paypal.pyplcheckout.pojo.CartAddress;
					public toString(): string;
					public getBillingAddress(): com.paypal.pyplcheckout.pojo.CartAddress;
					public getPaymentId(): string;
					public getBillingToken(): string;
					public component8(): string;
					public constructor();
					public getCartId(): string;
					public getShippingMethods(): java.util.List<com.paypal.pyplcheckout.pojo.ShippingMethods>;
					public component4(): string;
					public component6(): java.util.List<com.paypal.pyplcheckout.pojo.Item>;
					public hashCode(): number;
					public component7(): com.paypal.pyplcheckout.pojo.CartAmounts;
					public component12(): java.util.List<com.paypal.pyplcheckout.pojo.ShippingMethods>;
					public getReturnUrl(): com.paypal.pyplcheckout.pojo.ReturnUrl;
					public getIntent(): string;
					public component3(): com.paypal.pyplcheckout.pojo.BillingType;
					public getTotal(): com.paypal.pyplcheckout.pojo.Amount;
					public constructor(param0: string, param1: string, param2: com.paypal.pyplcheckout.pojo.BillingType, param3: string, param4: string, param5: java.util.List<com.paypal.pyplcheckout.pojo.Item>, param6: com.paypal.pyplcheckout.pojo.CartAmounts, param7: string, param8: com.paypal.pyplcheckout.pojo.Url, param9: com.paypal.pyplcheckout.pojo.ReturnUrl, param10: com.paypal.pyplcheckout.pojo.Amount, param11: java.util.List<com.paypal.pyplcheckout.pojo.ShippingMethods>, param12: com.paypal.pyplcheckout.pojo.CartAddress, param13: com.paypal.pyplcheckout.pojo.CartAddress, param14: com.paypal.pyplcheckout.pojo.Amount);
					public component13(): com.paypal.pyplcheckout.pojo.CartAddress;
					public equals(param0: any): boolean;
					public component1(): string;
					public component11(): com.paypal.pyplcheckout.pojo.Amount;
					public component9(): com.paypal.pyplcheckout.pojo.Url;
					public copy(param0: string, param1: string, param2: com.paypal.pyplcheckout.pojo.BillingType, param3: string, param4: string, param5: java.util.List<com.paypal.pyplcheckout.pojo.Item>, param6: com.paypal.pyplcheckout.pojo.CartAmounts, param7: string, param8: com.paypal.pyplcheckout.pojo.Url, param9: com.paypal.pyplcheckout.pojo.ReturnUrl, param10: com.paypal.pyplcheckout.pojo.Amount, param11: java.util.List<com.paypal.pyplcheckout.pojo.ShippingMethods>, param12: com.paypal.pyplcheckout.pojo.CartAddress, param13: com.paypal.pyplcheckout.pojo.CartAddress, param14: com.paypal.pyplcheckout.pojo.Amount): com.paypal.pyplcheckout.pojo.Cart;
					public getAmounts(): com.paypal.pyplcheckout.pojo.CartAmounts;
					public component15(): com.paypal.pyplcheckout.pojo.Amount;
					public getDescription(): string;
					public getItems(): java.util.List<com.paypal.pyplcheckout.pojo.Item>;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class CartAddress {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.CartAddress>;
					public component2(): string;
					public component5(): string;
					public component10(): boolean;
					public toString(): string;
					public getFirstName(): string;
					public component8(): string;
					public component4(): string;
					public getPostalCode(): string;
					public component9(): boolean;
					public hashCode(): number;
					public isFullAddress(): boolean;
					public component7(): string;
					public getLine1(): string;
					public component3(): string;
					public getCountry(): string;
					public getState(): string;
					public getLastName(): string;
					public getCity(): string;
					public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string, param7: string, param8: boolean, param9: boolean);
					public isStoreAddress(): boolean;
					public equals(param0: any): boolean;
					public component1(): string;
					public copy(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string, param7: string, param8: boolean, param9: boolean): com.paypal.pyplcheckout.pojo.CartAddress;
					public getLine2(): string;
					public component6(): string;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class CartAmounts {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.CartAmounts>;
					public component1(): com.paypal.pyplcheckout.pojo.Amount;
					public getTax(): com.paypal.pyplcheckout.pojo.Amount;
					public component4(): com.paypal.pyplcheckout.pojo.Amount;
					public component5(): com.paypal.pyplcheckout.pojo.Amount;
					public getShippingAndHandling(): com.paypal.pyplcheckout.pojo.Amount;
					public getSubtotal(): com.paypal.pyplcheckout.pojo.Amount;
					public component2(): com.paypal.pyplcheckout.pojo.Amount;
					public component3(): com.paypal.pyplcheckout.pojo.Amount;
					public getInsurance(): com.paypal.pyplcheckout.pojo.Amount;
					public getTotal(): com.paypal.pyplcheckout.pojo.Amount;
					public component8(): java.util.Map<string,any>;
					public copy(param0: com.paypal.pyplcheckout.pojo.Amount, param1: com.paypal.pyplcheckout.pojo.Amount, param2: com.paypal.pyplcheckout.pojo.Amount, param3: com.paypal.pyplcheckout.pojo.Amount, param4: com.paypal.pyplcheckout.pojo.Amount, param5: com.paypal.pyplcheckout.pojo.Amount, param6: com.paypal.pyplcheckout.pojo.Amount, param7: java.util.Map<string,any>): com.paypal.pyplcheckout.pojo.CartAmounts;
					public component7(): com.paypal.pyplcheckout.pojo.Amount;
					public component6(): com.paypal.pyplcheckout.pojo.Amount;
					public equals(param0: any): boolean;
					public toString(): string;
					public constructor();
					public getAdditionalProperties(): java.util.Map<string,any>;
					public constructor(param0: com.paypal.pyplcheckout.pojo.Amount, param1: com.paypal.pyplcheckout.pojo.Amount, param2: com.paypal.pyplcheckout.pojo.Amount, param3: com.paypal.pyplcheckout.pojo.Amount, param4: com.paypal.pyplcheckout.pojo.Amount, param5: com.paypal.pyplcheckout.pojo.Amount, param6: com.paypal.pyplcheckout.pojo.Amount, param7: java.util.Map<string,any>);
					public getHandlingFee(): com.paypal.pyplcheckout.pojo.Amount;
					public getShippingDiscount(): com.paypal.pyplcheckout.pojo.Amount;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class Checkout {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.Checkout>;
					public getCheckoutSession(): com.paypal.pyplcheckout.pojo.CheckoutSession;
					public equals(param0: any): boolean;
					public getUser(): com.paypal.pyplcheckout.pojo.User;
					public toString(): string;
					public constructor();
					public getAdditionalProperties(): java.util.Map<string,any>;
					public copy(param0: com.paypal.pyplcheckout.pojo.User, param1: com.paypal.pyplcheckout.pojo.CheckoutSession, param2: java.util.Map<string,any>): com.paypal.pyplcheckout.pojo.Checkout;
					public component2(): com.paypal.pyplcheckout.pojo.CheckoutSession;
					public constructor(param0: com.paypal.pyplcheckout.pojo.User, param1: com.paypal.pyplcheckout.pojo.CheckoutSession, param2: java.util.Map<string,any>);
					public hashCode(): number;
					public component1(): com.paypal.pyplcheckout.pojo.User;
					public component3(): java.util.Map<string,any>;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class CheckoutMerchant {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.CheckoutMerchant>;
					public equals(param0: any): boolean;
					public copy(param0: string, param1: string, param2: string): com.paypal.pyplcheckout.pojo.CheckoutMerchant;
					public toString(): string;
					public component1(): string;
					public component2(): string;
					public getName(): string;
					public constructor();
					public component3(): string;
					public getCountry(): string;
					public getMerchantId(): string;
					public hashCode(): number;
					public constructor(param0: string, param1: string, param2: string);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class CheckoutSession {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.CheckoutSession>;
					public constructor(param0: java.util.List<com.paypal.pyplcheckout.pojo.ShippingAddress>, param1: com.paypal.pyplcheckout.pojo.Flags, param2: com.paypal.pyplcheckout.pojo.Cart, param3: com.paypal.pyplcheckout.pojo.BuyerDetails, param4: java.util.List<com.paypal.pyplcheckout.pojo.CreditPPCOffer>, param5: java.util.List<com.paypal.pyplcheckout.pojo.FundingOption>, param6: com.paypal.pyplcheckout.pojo.PaymentContingencies, param7: string, param8: com.paypal.pyplcheckout.pojo.CheckoutMerchant, param9: java.util.List<com.paypal.pyplcheckout.pojo.BillingAddress>, param10: java.util.List<com.paypal.pyplcheckout.pojo.SupportedFundingSources>, param11: java.util.List<any>, param12: com.paypal.pyplcheckout.pojo.CheckoutSessionType, param13: java.util.Map<string,any>);
					public getSupportedFundingSources(): java.util.List<com.paypal.pyplcheckout.pojo.SupportedFundingSources>;
					public getPaymentContingencies(): com.paypal.pyplcheckout.pojo.PaymentContingencies;
					public getMerchant(): com.paypal.pyplcheckout.pojo.CheckoutMerchant;
					public component11(): java.util.List<com.paypal.pyplcheckout.pojo.SupportedFundingSources>;
					public component3(): com.paypal.pyplcheckout.pojo.Cart;
					public getFlags(): com.paypal.pyplcheckout.pojo.Flags;
					public component5(): java.util.List<com.paypal.pyplcheckout.pojo.CreditPPCOffer>;
					public toString(): string;
					public component8(): string;
					public constructor();
					public component4(): com.paypal.pyplcheckout.pojo.BuyerDetails;
					public component6(): java.util.List<com.paypal.pyplcheckout.pojo.FundingOption>;
					public hashCode(): number;
					public copy(param0: java.util.List<com.paypal.pyplcheckout.pojo.ShippingAddress>, param1: com.paypal.pyplcheckout.pojo.Flags, param2: com.paypal.pyplcheckout.pojo.Cart, param3: com.paypal.pyplcheckout.pojo.BuyerDetails, param4: java.util.List<com.paypal.pyplcheckout.pojo.CreditPPCOffer>, param5: java.util.List<com.paypal.pyplcheckout.pojo.FundingOption>, param6: com.paypal.pyplcheckout.pojo.PaymentContingencies, param7: string, param8: com.paypal.pyplcheckout.pojo.CheckoutMerchant, param9: java.util.List<com.paypal.pyplcheckout.pojo.BillingAddress>, param10: java.util.List<com.paypal.pyplcheckout.pojo.SupportedFundingSources>, param11: java.util.List<any>, param12: com.paypal.pyplcheckout.pojo.CheckoutSessionType, param13: java.util.Map<string,any>): com.paypal.pyplcheckout.pojo.CheckoutSession;
					public component13(): com.paypal.pyplcheckout.pojo.CheckoutSessionType;
					public getFundingOptions(): java.util.List<com.paypal.pyplcheckout.pojo.FundingOption>;
					public getUserAction(): string;
					public getBillingAddresses(): java.util.List<com.paypal.pyplcheckout.pojo.BillingAddress>;
					public getAllowedCardIssuers(): java.util.List<com.paypal.pyplcheckout.pojo.CardIssuerType>;
					public getCreditPPCOffers(): java.util.List<com.paypal.pyplcheckout.pojo.CreditPPCOffer>;
					public component2(): com.paypal.pyplcheckout.pojo.Flags;
					public component7(): com.paypal.pyplcheckout.pojo.PaymentContingencies;
					public component10(): java.util.List<com.paypal.pyplcheckout.pojo.BillingAddress>;
					public equals(param0: any): boolean;
					public getShippingAddresses(): java.util.List<com.paypal.pyplcheckout.pojo.ShippingAddress>;
					public component1(): java.util.List<com.paypal.pyplcheckout.pojo.ShippingAddress>;
					public component14(): java.util.Map<string,any>;
					public getAdditionalProperties(): java.util.Map<string,any>;
					public component9(): com.paypal.pyplcheckout.pojo.CheckoutMerchant;
					public component12(): java.util.List<com.paypal.pyplcheckout.pojo.CardIssuerType>;
					public getCheckoutSessionType(): com.paypal.pyplcheckout.pojo.CheckoutSessionType;
					public getCart(): com.paypal.pyplcheckout.pojo.Cart;
					public getBuyer(): com.paypal.pyplcheckout.pojo.BuyerDetails;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class CheckoutSessionData {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.CheckoutSessionData>;
					public getCheckoutSession(): com.paypal.pyplcheckout.pojo.CheckoutSession;
					public equals(param0: any): boolean;
					public component1(): com.paypal.pyplcheckout.pojo.CheckoutSession;
					public copy(param0: com.paypal.pyplcheckout.pojo.CheckoutSession): com.paypal.pyplcheckout.pojo.CheckoutSessionData;
					public toString(): string;
					public constructor(param0: com.paypal.pyplcheckout.pojo.CheckoutSession);
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class CheckoutSessionType {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.CheckoutSessionType>;
					public static PURCHASE: com.paypal.pyplcheckout.pojo.CheckoutSessionType;
					public static BILLING_WITH_PURCHASE: com.paypal.pyplcheckout.pojo.CheckoutSessionType;
					public static BILLING_WITHOUT_PURCHASE: com.paypal.pyplcheckout.pojo.CheckoutSessionType;
					public static values(): androidNative.Array<com.paypal.pyplcheckout.pojo.CheckoutSessionType>;
					public static valueOf(param0: string): com.paypal.pyplcheckout.pojo.CheckoutSessionType;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class ClientConfigUpdateResponse {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ClientConfigUpdateResponse>;
					public equals(param0: any): boolean;
					public toString(): string;
					public getExtensions(): com.paypal.pyplcheckout.pojo.Extensions;
					public component1(): com.paypal.pyplcheckout.pojo.Extensions;
					public copy(param0: com.paypal.pyplcheckout.pojo.Extensions): com.paypal.pyplcheckout.pojo.ClientConfigUpdateResponse;
					public hashCode(): number;
					public constructor(param0: com.paypal.pyplcheckout.pojo.Extensions);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class ConfirmCreditCardCvvData {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ConfirmCreditCardCvvData>;
					public equals(param0: any): boolean;
					public toString(): string;
					public component1(): string;
					public constructor(param0: string);
					public getLastFourDigits(): string;
					public copy(param0: string): com.paypal.pyplcheckout.pojo.ConfirmCreditCardCvvData;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class Content {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.Content>;
					public component2(): string;
					public component5(): string;
					public component25(): string;
					public getCtaText(): string;
					public getCrossCurrencyTransaction(): string;
					public component8(): string;
					public getOfferCategory(): string;
					public getPresentmentStyle(): string;
					public getIncentiveOfferCurrencyCode(): string;
					public component22(): string;
					public getIncentiveOfferProgramId(): string;
					public getBackgroundType(): string;
					public component12(): string;
					public getCartAmount(): string;
					public component3(): string;
					public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string, param7: string, param8: string, param9: string, param10: string, param11: string, param12: string, param13: string, param14: string, param15: string, param16: string, param17: string, param18: string, param19: string, param20: string, param21: string, param22: string, param23: string, param24: string, param25: string, param26: string, param27: string, param28: string, param29: java.util.Map<string,any>);
					public component15(): string;
					public getTermsLinkText(): string;
					public component1(): string;
					public component30(): java.util.Map<string,any>;
					public getMessageDescription(): string;
					public getCartAmountCurrencyCode(): string;
					public component9(): string;
					public getLearnMoreLink(): string;
					public getIncentiveOfferProgramCode(): string;
					public getProduct(): string;
					public component14(): string;
					public component24(): string;
					public component16(): string;
					public getTermsLink(): string;
					public component26(): string;
					public getIncentiveOfferValue(): string;
					public getOfferCheckoutButtonText(): string;
					public component13(): string;
					public component19(): string;
					public copy(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string, param7: string, param8: string, param9: string, param10: string, param11: string, param12: string, param13: string, param14: string, param15: string, param16: string, param17: string, param18: string, param19: string, param20: string, param21: string, param22: string, param23: string, param24: string, param25: string, param26: string, param27: string, param28: string, param29: java.util.Map<string,any>): com.paypal.pyplcheckout.pojo.Content;
					public component29(): string;
					public getPresentmentType(): string;
					public getOfferTextTemplate(): string;
					public component23(): string;
					public toString(): string;
					public component4(): string;
					public getHeadlineText(): string;
					public hashCode(): number;
					public getLogo(): string;
					public component11(): string;
					public getLearnMoreText(): string;
					public getCurrencyConversionRate(): string;
					public component7(): string;
					public getOfferText2(): string;
					public getVisaActive(): string;
					public component27(): string;
					public component17(): string;
					public component21(): string;
					public component10(): string;
					public equals(param0: any): boolean;
					public getAdditionalProperties(): java.util.Map<string,any>;
					public getBackgroundParams(): string;
					public component6(): string;
					public component28(): string;
					public getOfferText1(): string;
					public getTermsText(): string;
					public getOfferType(): string;
					public component18(): string;
					public component20(): string;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class CreateOrderErrorDetails {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.CreateOrderErrorDetails>;
					public equals(param0: any): boolean;
					public toString(): string;
					public component1(): string;
					public copy(param0: string, param1: string, param2: string): com.paypal.pyplcheckout.pojo.CreateOrderErrorDetails;
					public component2(): string;
					public getField(): string;
					public component3(): string;
					public getIssue(): string;
					public getDescription(): string;
					public hashCode(): number;
					public constructor(param0: string, param1: string, param2: string);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class CreateOrderErrorResponse {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.CreateOrderErrorResponse>;
					public equals(param0: any): boolean;
					public component1(): java.util.List<com.paypal.pyplcheckout.pojo.CreateOrderErrorDetails>;
					public toString(): string;
					public getLinks(): java.util.List<com.paypal.pyplcheckout.pojo.CreateOrderLinks>;
					public getDetails(): java.util.List<com.paypal.pyplcheckout.pojo.CreateOrderErrorDetails>;
					public component2(): string;
					public getMessage(): string;
					public component3(): java.util.List<com.paypal.pyplcheckout.pojo.CreateOrderLinks>;
					public copy(param0: java.util.List<com.paypal.pyplcheckout.pojo.CreateOrderErrorDetails>, param1: string, param2: java.util.List<com.paypal.pyplcheckout.pojo.CreateOrderLinks>): com.paypal.pyplcheckout.pojo.CreateOrderErrorResponse;
					public hashCode(): number;
					public constructor(param0: java.util.List<com.paypal.pyplcheckout.pojo.CreateOrderErrorDetails>, param1: string, param2: java.util.List<com.paypal.pyplcheckout.pojo.CreateOrderLinks>);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class CreateOrderLinks {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.CreateOrderLinks>;
					public equals(param0: any): boolean;
					public toString(): string;
					public component1(): string;
					public getHref(): string;
					public component2(): string;
					public getRel(): string;
					public component3(): string;
					public hashCode(): number;
					public constructor(param0: string, param1: string, param2: string);
					public getMethod(): string;
					public copy(param0: string, param1: string, param2: string): com.paypal.pyplcheckout.pojo.CreateOrderLinks;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class CreateOrderResponse {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.CreateOrderResponse>;
					public equals(param0: any): boolean;
					public toString(): string;
					public getId(): string;
					public getLinks(): java.util.List<com.paypal.pyplcheckout.pojo.CreateOrderLinks>;
					public component1(): string;
					public component2(): string;
					public getStatus(): string;
					public constructor(param0: string, param1: string, param2: java.util.List<com.paypal.pyplcheckout.pojo.CreateOrderLinks>);
					public component3(): java.util.List<com.paypal.pyplcheckout.pojo.CreateOrderLinks>;
					public hashCode(): number;
					public copy(param0: string, param1: string, param2: java.util.List<com.paypal.pyplcheckout.pojo.CreateOrderLinks>): com.paypal.pyplcheckout.pojo.CreateOrderResponse;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class CreditPPCOffer {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.CreditPPCOffer>;
					public constructor(param0: string, param1: com.paypal.pyplcheckout.pojo.Content, param2: com.paypal.pyplcheckout.pojo.TrackingDetails, param3: java.util.Map<string,any>);
					public component2(): com.paypal.pyplcheckout.pojo.Content;
					public component3(): com.paypal.pyplcheckout.pojo.TrackingDetails;
					public getReferenceId(): string;
					public getTrackingDetails(): com.paypal.pyplcheckout.pojo.TrackingDetails;
					public equals(param0: any): boolean;
					public copy(param0: string, param1: com.paypal.pyplcheckout.pojo.Content, param2: com.paypal.pyplcheckout.pojo.TrackingDetails, param3: java.util.Map<string,any>): com.paypal.pyplcheckout.pojo.CreditPPCOffer;
					public toString(): string;
					public component1(): string;
					public component4(): java.util.Map<string,any>;
					public constructor();
					public getAdditionalProperties(): java.util.Map<string,any>;
					public hashCode(): number;
					public getContent(): com.paypal.pyplcheckout.pojo.Content;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class CryptoCheckoutSession {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.CryptoCheckoutSession>;
					public equals(param0: any): boolean;
					public toString(): string;
					public getCryptocurrencyQuotes(): java.util.List<com.paypal.pyplcheckout.pojo.CryptoCurrencyQuote>;
					public component2(): java.util.Map<string,any>;
					public constructor();
					public getAdditionalProperties(): java.util.Map<string,any>;
					public constructor(param0: java.util.List<com.paypal.pyplcheckout.pojo.CryptoCurrencyQuote>, param1: java.util.Map<string,any>);
					public component1(): java.util.List<com.paypal.pyplcheckout.pojo.CryptoCurrencyQuote>;
					public copy(param0: java.util.List<com.paypal.pyplcheckout.pojo.CryptoCurrencyQuote>, param1: java.util.Map<string,any>): com.paypal.pyplcheckout.pojo.CryptoCheckoutSession;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class CryptoCurrencyHoldingDetails {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.CryptoCurrencyHoldingDetails>;
					public constructor(param0: string, param1: string);
					public equals(param0: any): boolean;
					public copy(param0: string, param1: string): com.paypal.pyplcheckout.pojo.CryptoCurrencyHoldingDetails;
					public toString(): string;
					public component1(): string;
					public component2(): string;
					public constructor();
					public getQuantity(): string;
					public getKnownSymbol(): com.paypal.pyplcheckout.pojo.CryptocurrencySymbol;
					public getSymbol(): string;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class CryptoCurrencyQuote {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.CryptoCurrencyQuote>;
					public constructor(param0: string, param1: string, param2: com.paypal.pyplcheckout.pojo.Amount, param3: string, param4: com.paypal.pyplcheckout.pojo.Amount, param5: java.util.Map<string,any>);
					public getId(): string;
					public component2(): string;
					public component5(): com.paypal.pyplcheckout.pojo.Amount;
					public component3(): com.paypal.pyplcheckout.pojo.Amount;
					public getTotalAmount(): com.paypal.pyplcheckout.pojo.Amount;
					public copy(param0: string, param1: string, param2: com.paypal.pyplcheckout.pojo.Amount, param3: string, param4: com.paypal.pyplcheckout.pojo.Amount, param5: java.util.Map<string,any>): com.paypal.pyplcheckout.pojo.CryptoCurrencyQuote;
					public equals(param0: any): boolean;
					public toString(): string;
					public component1(): string;
					public constructor();
					public getAssetPrice(): com.paypal.pyplcheckout.pojo.Amount;
					public getAdditionalProperties(): java.util.Map<string,any>;
					public getQuantity(): string;
					public component4(): string;
					public getSymbol(): string;
					public component6(): java.util.Map<string,any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class CryptoData {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.CryptoData>;
					public equals(param0: any): boolean;
					public toString(): string;
					public component2(): java.util.Map<string,any>;
					public constructor();
					public getAdditionalProperties(): java.util.Map<string,any>;
					public getCheckoutSession(): com.paypal.pyplcheckout.pojo.CryptoCheckoutSession;
					public hashCode(): number;
					public copy(param0: com.paypal.pyplcheckout.pojo.CryptoCheckoutSession, param1: java.util.Map<string,any>): com.paypal.pyplcheckout.pojo.CryptoData;
					public constructor(param0: com.paypal.pyplcheckout.pojo.CryptoCheckoutSession, param1: java.util.Map<string,any>);
					public component1(): com.paypal.pyplcheckout.pojo.CryptoCheckoutSession;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class CryptoQuoteResponse {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.CryptoQuoteResponse>;
					public setData(param0: com.paypal.pyplcheckout.pojo.CryptoData): void;
					public hasContingencyErrors(): boolean;
					public setErrors(param0: java.util.List<com.paypal.pyplcheckout.pojo.Error>): void;
					public getFirstError(): string;
					public getData(): com.paypal.pyplcheckout.pojo.CryptoData;
					public constructor(param0: com.paypal.pyplcheckout.pojo.CryptoData);
					public getErrors(): java.util.List<com.paypal.pyplcheckout.pojo.Error>;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class CryptoQuoteResponse_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.pojo.CryptoQuoteResponse> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.CryptoQuoteResponse_Factory>;
					public static newInstance(param0: com.paypal.pyplcheckout.pojo.CryptoData): com.paypal.pyplcheckout.pojo.CryptoQuoteResponse;
					public get(): com.paypal.pyplcheckout.pojo.CryptoQuoteResponse;
					public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.pojo.CryptoData>): com.paypal.pyplcheckout.pojo.CryptoQuoteResponse_Factory;
					public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.pojo.CryptoData>);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class CryptocurrencySymbol {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.CryptocurrencySymbol>;
					public static BTC: com.paypal.pyplcheckout.pojo.CryptocurrencySymbol;
					public static BCH: com.paypal.pyplcheckout.pojo.CryptocurrencySymbol;
					public static LTC: com.paypal.pyplcheckout.pojo.CryptocurrencySymbol;
					public static ETH: com.paypal.pyplcheckout.pojo.CryptocurrencySymbol;
					public static PYPC: com.paypal.pyplcheckout.pojo.CryptocurrencySymbol;
					public static LINK: com.paypal.pyplcheckout.pojo.CryptocurrencySymbol;
					public static MATIC: com.paypal.pyplcheckout.pojo.CryptocurrencySymbol;
					public static SOL: com.paypal.pyplcheckout.pojo.CryptocurrencySymbol;
					public static valueOf(param0: string): com.paypal.pyplcheckout.pojo.CryptocurrencySymbol;
					public static values(): androidNative.Array<com.paypal.pyplcheckout.pojo.CryptocurrencySymbol>;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class CurrencyConversion {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.CurrencyConversion>;
					public getFeeRate(): string;
					public getSpread(): string;
					public component5(): string;
					public component9(): java.util.Map<string,any>;
					public component1(): com.paypal.pyplcheckout.pojo.Amount;
					public getTo(): com.paypal.pyplcheckout.pojo.Amount;
					public component3(): string;
					public component2(): com.paypal.pyplcheckout.pojo.Amount;
					public getConvertedAmount(): com.paypal.pyplcheckout.pojo.Amount;
					public component7(): com.paypal.pyplcheckout.pojo.Amount;
					public getFrom(): com.paypal.pyplcheckout.pojo.Amount;
					public component6(): java.lang.Boolean;
					public equals(param0: any): boolean;
					public constructor(param0: com.paypal.pyplcheckout.pojo.Amount, param1: com.paypal.pyplcheckout.pojo.Amount, param2: string, param3: string, param4: string, param5: java.lang.Boolean, param6: com.paypal.pyplcheckout.pojo.Amount, param7: string, param8: java.util.Map<string,any>);
					public toString(): string;
					public getRate(): string;
					public component8(): string;
					public constructor();
					public getAdditionalProperties(): java.util.Map<string,any>;
					public getCanChangeConversionType(): java.lang.Boolean;
					public copy(param0: com.paypal.pyplcheckout.pojo.Amount, param1: com.paypal.pyplcheckout.pojo.Amount, param2: string, param3: string, param4: string, param5: java.lang.Boolean, param6: com.paypal.pyplcheckout.pojo.Amount, param7: string, param8: java.util.Map<string,any>): com.paypal.pyplcheckout.pojo.CurrencyConversion;
					public component4(): string;
					public getType(): string;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class Data {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.Data>;
					public getCheckoutSession(): com.paypal.pyplcheckout.pojo.CheckoutSession;
					public equals(param0: any): boolean;
					public getUser(): com.paypal.pyplcheckout.pojo.User;
					public toString(): string;
					public constructor();
					public getAdditionalProperties(): java.util.Map<string,any>;
					public component2(): com.paypal.pyplcheckout.pojo.CheckoutSession;
					public constructor(param0: com.paypal.pyplcheckout.pojo.User, param1: com.paypal.pyplcheckout.pojo.CheckoutSession, param2: java.util.Map<string,any>);
					public hashCode(): number;
					public component1(): com.paypal.pyplcheckout.pojo.User;
					public component3(): java.util.Map<string,any>;
					public copy(param0: com.paypal.pyplcheckout.pojo.User, param1: com.paypal.pyplcheckout.pojo.CheckoutSession, param2: java.util.Map<string,any>): com.paypal.pyplcheckout.pojo.Data;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class Eligibility {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.Eligibility>;
					public constructor(param0: java.lang.Boolean, param1: string, param2: string);
					public equals(param0: any): boolean;
					public toString(): string;
					public component2(): string;
					public getIneligibilityReason(): string;
					public getIneligibilityErrorMessage(): string;
					public component3(): string;
					public getEligibility(): java.lang.Boolean;
					public hashCode(): number;
					public component1(): java.lang.Boolean;
					public copy(param0: java.lang.Boolean, param1: string, param2: string): com.paypal.pyplcheckout.pojo.Eligibility;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class EligibilityData {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.EligibilityData>;
					public equals(param0: any): boolean;
					public toString(): string;
					public getMobileSDKEligibility(): com.paypal.pyplcheckout.pojo.MobileSdkEligibility;
					public copy(param0: com.paypal.pyplcheckout.pojo.MobileSdkEligibility): com.paypal.pyplcheckout.pojo.EligibilityData;
					public constructor(param0: com.paypal.pyplcheckout.pojo.MobileSdkEligibility);
					public hashCode(): number;
					public component1(): com.paypal.pyplcheckout.pojo.MobileSdkEligibility;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class EligibilityResponse {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.EligibilityResponse>;
					public component1(): com.paypal.pyplcheckout.pojo.EligibilityData;
					public equals(param0: any): boolean;
					public copy(param0: com.paypal.pyplcheckout.pojo.EligibilityData): com.paypal.pyplcheckout.pojo.EligibilityResponse;
					public toString(): string;
					public getData(): com.paypal.pyplcheckout.pojo.EligibilityData;
					public constructor(param0: com.paypal.pyplcheckout.pojo.EligibilityData);
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class Email {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.Email>;
					public equals(param0: any): boolean;
					public toString(): string;
					public component1(): string;
					public component2(): java.util.Map<string,any>;
					public constructor();
					public getAdditionalProperties(): java.util.Map<string,any>;
					public copy(param0: string, param1: java.util.Map<string,any>): com.paypal.pyplcheckout.pojo.Email;
					public hashCode(): number;
					public constructor(param0: string, param1: java.util.Map<string,any>);
					public getStringValue(): string;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class EmbeddedCheckoutSession {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.EmbeddedCheckoutSession>;
					public getCheckoutSession(): com.paypal.pyplcheckout.pojo.CheckoutSession;
					public equals(param0: any): boolean;
					public component1(): com.paypal.pyplcheckout.pojo.CheckoutSession;
					public copy(param0: com.paypal.pyplcheckout.pojo.CheckoutSession): com.paypal.pyplcheckout.pojo.EmbeddedCheckoutSession;
					public toString(): string;
					public constructor(param0: com.paypal.pyplcheckout.pojo.CheckoutSession);
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class EnrollmentStatusType {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.EnrollmentStatusType>;
					public static YES: com.paypal.pyplcheckout.pojo.EnrollmentStatusType;
					public static NO: com.paypal.pyplcheckout.pojo.EnrollmentStatusType;
					public static UNAVAILABLE: com.paypal.pyplcheckout.pojo.EnrollmentStatusType;
					public static BYPASS: com.paypal.pyplcheckout.pojo.EnrollmentStatusType;
					public static UNKNOWN: com.paypal.pyplcheckout.pojo.EnrollmentStatusType;
					public static values(): androidNative.Array<com.paypal.pyplcheckout.pojo.EnrollmentStatusType>;
					public static valueOf(param0: string): com.paypal.pyplcheckout.pojo.EnrollmentStatusType;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class Error {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.Error>;
					public getStatusCode(): java.lang.Integer;
					public getContingency(): java.lang.Boolean;
					public component2(): java.util.List<string>;
					public component3(): java.lang.Integer;
					public constructor(param0: string, param1: java.util.List<string>, param2: java.lang.Integer, param3: java.lang.Boolean, param4: com.paypal.pyplcheckout.pojo.ErrorData);
					public equals(param0: any): boolean;
					public component4(): java.lang.Boolean;
					public toString(): string;
					public component1(): string;
					public constructor();
					public component5(): com.paypal.pyplcheckout.pojo.ErrorData;
					public getMessage(): string;
					public getPath(): java.util.List<string>;
					public getData(): com.paypal.pyplcheckout.pojo.ErrorData;
					public hashCode(): number;
					public copy(param0: string, param1: java.util.List<string>, param2: java.lang.Integer, param3: java.lang.Boolean, param4: com.paypal.pyplcheckout.pojo.ErrorData): com.paypal.pyplcheckout.pojo.Error;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class ErrorData {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ErrorData>;
					public constructor(param0: string, param1: java.util.List<com.paypal.pyplcheckout.pojo.ErrorField>, param2: string, param3: com.paypal.pyplcheckout.pojo.Resolution);
					public component3(): string;
					public getFields(): java.util.List<com.paypal.pyplcheckout.pojo.ErrorField>;
					public copy(param0: string, param1: java.util.List<com.paypal.pyplcheckout.pojo.ErrorField>, param2: string, param3: com.paypal.pyplcheckout.pojo.Resolution): com.paypal.pyplcheckout.pojo.ErrorData;
					public equals(param0: any): boolean;
					public toString(): string;
					public component1(): string;
					public component2(): java.util.List<com.paypal.pyplcheckout.pojo.ErrorField>;
					public getName(): string;
					public getCause(): string;
					public getResolution(): com.paypal.pyplcheckout.pojo.Resolution;
					public component4(): com.paypal.pyplcheckout.pojo.Resolution;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class ErrorField {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ErrorField>;
					public equals(param0: any): boolean;
					public toString(): string;
					public getCode(): string;
					public component1(): string;
					public component2(): string;
					public getField(): string;
					public component3(): string;
					public getIssue(): string;
					public hashCode(): number;
					public copy(param0: string, param1: string, param2: string): com.paypal.pyplcheckout.pojo.ErrorField;
					public constructor(param0: string, param1: string, param2: string);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class Extensions {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.Extensions>;
					public constructor(param0: java.util.List<string>, param1: string, param2: java.util.Map<string,any>);
					public getDeveloperNotes(): java.util.List<string>;
					public equals(param0: any): boolean;
					public toString(): string;
					public component2(): string;
					public component1(): java.util.List<string>;
					public constructor();
					public getAdditionalProperties(): java.util.Map<string,any>;
					public hashCode(): number;
					public getCorrelationId(): string;
					public component3(): java.util.Map<string,any>;
					public copy(param0: java.util.List<string>, param1: string, param2: java.util.Map<string,any>): com.paypal.pyplcheckout.pojo.Extensions;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class FirebaseAuth {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.FirebaseAuth>;
					public constructor(param0: string, param1: string);
					public equals(param0: any): boolean;
					public toString(): string;
					public component1(): string;
					public component2(): string;
					public getSessionUID(): string;
					public getSessionToken(): string;
					public copy(param0: string, param1: string): com.paypal.pyplcheckout.pojo.FirebaseAuth;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class FirebaseObject {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.FirebaseObject>;
					public equals(param0: any): boolean;
					public toString(): string;
					public copy(param0: com.paypal.pyplcheckout.pojo.FirebaseResponse): com.paypal.pyplcheckout.pojo.FirebaseObject;
					public getFirebase(): com.paypal.pyplcheckout.pojo.FirebaseResponse;
					public component1(): com.paypal.pyplcheckout.pojo.FirebaseResponse;
					public constructor(param0: com.paypal.pyplcheckout.pojo.FirebaseResponse);
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class FirebaseResponse {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.FirebaseResponse>;
					public copy(param0: com.paypal.pyplcheckout.pojo.FirebaseAuth): com.paypal.pyplcheckout.pojo.FirebaseResponse;
					public equals(param0: any): boolean;
					public toString(): string;
					public component1(): com.paypal.pyplcheckout.pojo.FirebaseAuth;
					public hashCode(): number;
					public constructor(param0: com.paypal.pyplcheckout.pojo.FirebaseAuth);
					public getAuth(): com.paypal.pyplcheckout.pojo.FirebaseAuth;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class FirebaseTokenResponse {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.FirebaseTokenResponse>;
					public equals(param0: any): boolean;
					public getData(): com.paypal.pyplcheckout.pojo.FirebaseObject;
					public toString(): string;
					public constructor(param0: com.paypal.pyplcheckout.pojo.FirebaseObject);
					public component1(): com.paypal.pyplcheckout.pojo.FirebaseObject;
					public hashCode(): number;
					public copy(param0: com.paypal.pyplcheckout.pojo.FirebaseObject): com.paypal.pyplcheckout.pojo.FirebaseTokenResponse;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class Flags {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.Flags>;
					public component5(): java.lang.Boolean;
					public component9(): java.lang.Boolean;
					public isBillingAddressConsentRequired(): java.lang.Boolean;
					public getAllowChangePaymentMethod(): java.lang.Boolean;
					public getHideShipping(): java.lang.Boolean;
					public isChangeShippingAddressAllowed(): java.lang.Boolean;
					public component6(): java.lang.Boolean;
					public constructor(param0: java.lang.Boolean, param1: java.lang.Boolean, param2: java.lang.Boolean, param3: java.lang.Boolean, param4: java.lang.Boolean, param5: java.lang.Boolean, param6: java.lang.Boolean, param7: java.lang.Boolean, param8: java.lang.Boolean, param9: java.lang.Boolean);
					public component10(): java.lang.Boolean;
					public toString(): string;
					public constructor();
					public getShowPPCreditOffer(): java.lang.Boolean;
					public hashCode(): number;
					public component1(): java.lang.Boolean;
					public component7(): java.lang.Boolean;
					public component3(): java.lang.Boolean;
					public isBillingAgreement(): java.lang.Boolean;
					public component2(): java.lang.Boolean;
					public equals(param0: any): boolean;
					public component4(): java.lang.Boolean;
					public copy(param0: java.lang.Boolean, param1: java.lang.Boolean, param2: java.lang.Boolean, param3: java.lang.Boolean, param4: java.lang.Boolean, param5: java.lang.Boolean, param6: java.lang.Boolean, param7: java.lang.Boolean, param8: java.lang.Boolean, param9: java.lang.Boolean): com.paypal.pyplcheckout.pojo.Flags;
					public getHideCartDetails(): java.lang.Boolean;
					public getStickyBillingAllowed(): java.lang.Boolean;
					public isSignupEligible(): java.lang.Boolean;
					public getBlockNonDomesticShipping(): java.lang.Boolean;
					public component8(): java.lang.Boolean;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class FundingInstrument {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.FundingInstrument>;
					public getLastDigits(): string;
					public component9(): java.lang.Boolean;
					public getId(): string;
					public getImage(): com.paypal.pyplcheckout.pojo.Image;
					public component2(): string;
					public component5(): string;
					public setAmount(param0: com.paypal.pyplcheckout.pojo.Amount): void;
					public getAmount(): com.paypal.pyplcheckout.pojo.Amount;
					public getCryptocurrencyHoldingDetails(): com.paypal.pyplcheckout.pojo.CryptoCurrencyHoldingDetails;
					public copy(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string, param7: com.paypal.pyplcheckout.pojo.Image, param8: java.lang.Boolean, param9: com.paypal.pyplcheckout.pojo.CryptoCurrencyHoldingDetails, param10: java.util.Map<string,any>, param11: com.paypal.pyplcheckout.pojo.Amount): com.paypal.pyplcheckout.pojo.FundingInstrument;
					public toString(): string;
					public getFormattedType(): string;
					public component8(): com.paypal.pyplcheckout.pojo.Image;
					public constructor();
					public component12(): com.paypal.pyplcheckout.pojo.Amount;
					public component4(): string;
					public getType(): string;
					public hashCode(): number;
					public getBufCardText(): string;
					public getInstrumentSubType(param0: globalAndroid.content.Context): string;
					public getLabel(): string;
					public getInstrumentSubType(): string;
					public component7(): string;
					public component3(): string;
					public isPreferred(): java.lang.Boolean;
					public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string, param7: com.paypal.pyplcheckout.pojo.Image, param8: java.lang.Boolean, param9: com.paypal.pyplcheckout.pojo.CryptoCurrencyHoldingDetails, param10: java.util.Map<string,any>, param11: com.paypal.pyplcheckout.pojo.Amount);
					public equals(param0: any): boolean;
					public component1(): string;
					public getName(): string;
					public getAdditionalProperties(): java.util.Map<string,any>;
					public component6(): string;
					public component11(): java.util.Map<string,any>;
					public component10(): com.paypal.pyplcheckout.pojo.CryptoCurrencyHoldingDetails;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class FundingInstrumentSubtype {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.FundingInstrumentSubtype>;
					public static CHECKING: com.paypal.pyplcheckout.pojo.FundingInstrumentSubtype;
					public static SAVINGS: com.paypal.pyplcheckout.pojo.FundingInstrumentSubtype;
					public static BALANCE: com.paypal.pyplcheckout.pojo.FundingInstrumentSubtype;
					public static CREDIT: com.paypal.pyplcheckout.pojo.FundingInstrumentSubtype;
					public static DEBIT: com.paypal.pyplcheckout.pojo.FundingInstrumentSubtype;
					public static PAYPAL: com.paypal.pyplcheckout.pojo.FundingInstrumentSubtype;
					public static PREPAID: com.paypal.pyplcheckout.pojo.FundingInstrumentSubtype;
					public static MERCHANT: com.paypal.pyplcheckout.pojo.FundingInstrumentSubtype;
					public static INCENTIVE: com.paypal.pyplcheckout.pojo.FundingInstrumentSubtype;
					public static PAYPAL_SPECIFIC_BALANCE: com.paypal.pyplcheckout.pojo.FundingInstrumentSubtype;
					public static MERCHANT_SPECIFIC_BALANCE: com.paypal.pyplcheckout.pojo.FundingInstrumentSubtype;
					public static CRYPTOCURRENCY: com.paypal.pyplcheckout.pojo.FundingInstrumentSubtype;
					public static UNKNOWN: com.paypal.pyplcheckout.pojo.FundingInstrumentSubtype;
					public static values(): androidNative.Array<com.paypal.pyplcheckout.pojo.FundingInstrumentSubtype>;
					public static valueOf(param0: string): com.paypal.pyplcheckout.pojo.FundingInstrumentSubtype;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class FundingOption {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.FundingOption>;
					public getId(): string;
					public component5(): com.paypal.pyplcheckout.pojo.Amount;
					public getFundingInstrument(): com.paypal.pyplcheckout.pojo.FundingInstrument;
					public equals(param0: any): boolean;
					public getAllPlans(): java.util.List<com.paypal.pyplcheckout.pojo.Plan>;
					public toString(): string;
					public copy(param0: string, param1: com.paypal.pyplcheckout.pojo.FundingInstrument, param2: java.util.List<com.paypal.pyplcheckout.pojo.Plan>, param3: java.util.Map<string,any>, param4: com.paypal.pyplcheckout.pojo.Amount): com.paypal.pyplcheckout.pojo.FundingOption;
					public component1(): string;
					public component2(): com.paypal.pyplcheckout.pojo.FundingInstrument;
					public constructor(param0: string, param1: com.paypal.pyplcheckout.pojo.FundingInstrument, param2: java.util.List<com.paypal.pyplcheckout.pojo.Plan>, param3: java.util.Map<string,any>, param4: com.paypal.pyplcheckout.pojo.Amount);
					public component4(): java.util.Map<string,any>;
					public getAdditionalProperties(): java.util.Map<string,any>;
					public getAvailableAmount(): com.paypal.pyplcheckout.pojo.Amount;
					public component3(): java.util.List<com.paypal.pyplcheckout.pojo.Plan>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class FundingOptionType {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.FundingOptionType>;
					public static BANK_ACCOUNT: com.paypal.pyplcheckout.pojo.FundingOptionType;
					public static CREDIT_CARD: com.paypal.pyplcheckout.pojo.FundingOptionType;
					public static CRYPTOCURRENCY: com.paypal.pyplcheckout.pojo.FundingOptionType;
					public static DEBIT_CARD: com.paypal.pyplcheckout.pojo.FundingOptionType;
					public static INCENTIVE: com.paypal.pyplcheckout.pojo.FundingOptionType;
					public static PAYPAL_BALANCE: com.paypal.pyplcheckout.pojo.FundingOptionType;
					public static PAYPAL_CREDIT: com.paypal.pyplcheckout.pojo.FundingOptionType;
					public static PRIVATE_LABEL_CREDIT_CARD: com.paypal.pyplcheckout.pojo.FundingOptionType;
					public static REWARDS: com.paypal.pyplcheckout.pojo.FundingOptionType;
					public static PAY_TOKEN: com.paypal.pyplcheckout.pojo.FundingOptionType;
					public static values(): androidNative.Array<com.paypal.pyplcheckout.pojo.FundingOptionType>;
					public static valueOf(param0: string): com.paypal.pyplcheckout.pojo.FundingOptionType;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class FundingSource {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.FundingSource>;
					public constructor(param0: com.paypal.pyplcheckout.pojo.FundingInstrument, param1: string, param2: com.paypal.pyplcheckout.pojo.Amount, param3: java.util.Map<string,any>);
					public component2(): string;
					public getAmount(): com.paypal.pyplcheckout.pojo.Amount;
					public component3(): com.paypal.pyplcheckout.pojo.Amount;
					public getFundingInstrument(): com.paypal.pyplcheckout.pojo.FundingInstrument;
					public equals(param0: any): boolean;
					public toString(): string;
					public component4(): java.util.Map<string,any>;
					public constructor();
					public getAdditionalProperties(): java.util.Map<string,any>;
					public copy(param0: com.paypal.pyplcheckout.pojo.FundingInstrument, param1: string, param2: com.paypal.pyplcheckout.pojo.Amount, param3: java.util.Map<string,any>): com.paypal.pyplcheckout.pojo.FundingSource;
					public component1(): com.paypal.pyplcheckout.pojo.FundingInstrument;
					public hashCode(): number;
					public getFundingMethodType(): string;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class GenericURL {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.GenericURL>;
					public component5(): string;
					public component13(): string;
					public getHash(): string;
					public getQueryParams(): string;
					public getHost(): string;
					public constructor(param0: string, param1: java.lang.Boolean, param2: string, param3: string, param4: string, param5: string, param6: string, param7: string, param8: string, param9: string, param10: string, param11: string, param12: string);
					public getSearch(): string;
					public toString(): string;
					public component8(): string;
					public component4(): string;
					public component12(): string;
					public copy(param0: string, param1: java.lang.Boolean, param2: string, param3: string, param4: string, param5: string, param6: string, param7: string, param8: string, param9: string, param10: string, param11: string, param12: string): com.paypal.pyplcheckout.pojo.GenericURL;
					public hashCode(): number;
					public getHostname(): string;
					public component11(): string;
					public getHref(): string;
					public component7(): string;
					public component3(): string;
					public getPathname(): string;
					public getProtocol(): string;
					public getAuth(): string;
					public component2(): java.lang.Boolean;
					public getPort(): string;
					public getPath(): string;
					public component10(): string;
					public equals(param0: any): boolean;
					public component1(): string;
					public getSlashes(): java.lang.Boolean;
					public component6(): string;
					public getQuery(): string;
					public component9(): string;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class Image {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.Image>;
					public component3(): java.lang.Integer;
					public getUrl(): com.paypal.pyplcheckout.pojo.Url;
					public getWidth(): java.lang.Integer;
					public component1(): com.paypal.pyplcheckout.pojo.Url;
					public equals(param0: any): boolean;
					public toString(): string;
					public copy(param0: com.paypal.pyplcheckout.pojo.Url, param1: java.lang.Integer, param2: java.lang.Integer, param3: java.util.Map<string,any>): com.paypal.pyplcheckout.pojo.Image;
					public component4(): java.util.Map<string,any>;
					public constructor();
					public getAdditionalProperties(): java.util.Map<string,any>;
					public getHeight(): java.lang.Integer;
					public constructor(param0: com.paypal.pyplcheckout.pojo.Url, param1: java.lang.Integer, param2: java.lang.Integer, param3: java.util.Map<string,any>);
					public component2(): java.lang.Integer;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class Item {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.Item>;
					public getUnitPrice(): com.paypal.pyplcheckout.pojo.Amount;
					public component2(): string;
					public component5(): com.paypal.pyplcheckout.pojo.Amount;
					public getDetails(): any;
					public component3(): com.paypal.pyplcheckout.pojo.Amount;
					public getTotal(): com.paypal.pyplcheckout.pojo.Amount;
					public copy(param0: string, param1: string, param2: com.paypal.pyplcheckout.pojo.Amount, param3: java.lang.Integer, param4: com.paypal.pyplcheckout.pojo.Amount, param5: any, param6: java.util.Map<string,any>): com.paypal.pyplcheckout.pojo.Item;
					public equals(param0: any): boolean;
					public constructor(param0: string, param1: string, param2: com.paypal.pyplcheckout.pojo.Amount, param3: java.lang.Integer, param4: com.paypal.pyplcheckout.pojo.Amount, param5: any, param6: java.util.Map<string,any>);
					public toString(): string;
					public component1(): string;
					public component7(): java.util.Map<string,any>;
					public getName(): string;
					public constructor();
					public getAdditionalProperties(): java.util.Map<string,any>;
					public component4(): java.lang.Integer;
					public getDescription(): string;
					public hashCode(): number;
					public getQuantity(): java.lang.Integer;
					public component6(): any;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class Locale {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.Locale>;
					public component2(): string;
					public component5(): string;
					public getCulture(): string;
					public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: java.util.Map<string,any>);
					public component3(): string;
					public getCountry(): string;
					public equals(param0: any): boolean;
					public getLocale(): string;
					public toString(): string;
					public component1(): string;
					public constructor();
					public getAdditionalProperties(): java.util.Map<string,any>;
					public getDirectionality(): string;
					public component4(): string;
					public copy(param0: string, param1: string, param2: string, param3: string, param4: string, param5: java.util.Map<string,any>): com.paypal.pyplcheckout.pojo.Locale;
					public getLanguage(): string;
					public component6(): java.util.Map<string,any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class LowScopedAccessToken {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.LowScopedAccessToken>;
					public equals(param0: any): boolean;
					public toString(): string;
					public component1(): string;
					public copy(param0: string, param1: boolean): com.paypal.pyplcheckout.pojo.LowScopedAccessToken;
					public getToken(): string;
					public constructor(param0: string, param1: boolean);
					public hashCode(): number;
					public isUpgraded(): boolean;
					public component2(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class LsatData {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.LsatData>;
					public equals(param0: any): boolean;
					public toString(): string;
					public isTokenUpgraded(): java.lang.Boolean;
					public copy(param0: java.lang.Boolean): com.paypal.pyplcheckout.pojo.LsatData;
					public constructor(param0: java.lang.Boolean);
					public hashCode(): number;
					public component1(): java.lang.Boolean;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class LsatError {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.LsatError>;
					public getStatusCode(): java.lang.Integer;
					public equals(param0: any): boolean;
					public copy(param0: string, param1: java.util.List<string>, param2: java.lang.Integer): com.paypal.pyplcheckout.pojo.LsatError;
					public toString(): string;
					public component1(): string;
					public component2(): java.util.List<string>;
					public component3(): java.lang.Integer;
					public getMessage(): string;
					public getPath(): java.util.List<string>;
					public hashCode(): number;
					public constructor(param0: string, param1: java.util.List<string>, param2: java.lang.Integer);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class LsatResponse {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.LsatResponse>;
					public equals(param0: any): boolean;
					public component1(): java.util.List<com.paypal.pyplcheckout.pojo.LsatError>;
					public toString(): string;
					public copy(param0: java.util.List<com.paypal.pyplcheckout.pojo.LsatError>, param1: com.paypal.pyplcheckout.pojo.LsatData): com.paypal.pyplcheckout.pojo.LsatResponse;
					public component2(): com.paypal.pyplcheckout.pojo.LsatData;
					public getErrors(): java.util.List<com.paypal.pyplcheckout.pojo.LsatError>;
					public getData(): com.paypal.pyplcheckout.pojo.LsatData;
					public hashCode(): number;
					public constructor(param0: java.util.List<com.paypal.pyplcheckout.pojo.LsatError>, param1: com.paypal.pyplcheckout.pojo.LsatData);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class MobileSdkEligibility {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.MobileSdkEligibility>;
					public equals(param0: any): boolean;
					public toString(): string;
					public component2(): com.paypal.pyplcheckout.pojo.Eligibility;
					public copy(param0: com.paypal.pyplcheckout.pojo.Eligibility, param1: com.paypal.pyplcheckout.pojo.Eligibility): com.paypal.pyplcheckout.pojo.MobileSdkEligibility;
					public component1(): com.paypal.pyplcheckout.pojo.Eligibility;
					public getPaypal(): com.paypal.pyplcheckout.pojo.Eligibility;
					public hashCode(): number;
					public getVenmo(): com.paypal.pyplcheckout.pojo.Eligibility;
					public constructor(param0: com.paypal.pyplcheckout.pojo.Eligibility, param1: com.paypal.pyplcheckout.pojo.Eligibility);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class Name {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.Name>;
					public setGivenName(param0: string): void;
					public component2(): string;
					public getFamilyName(): string;
					public component3(): string;
					public getFullName(): string;
					public constructor(param0: string, param1: string, param2: string, param3: java.util.Map<string,any>);
					public equals(param0: any): boolean;
					public setFullName(param0: string): void;
					public copy(param0: string, param1: string, param2: string, param3: java.util.Map<string,any>): com.paypal.pyplcheckout.pojo.Name;
					public toString(): string;
					public component1(): string;
					public component4(): java.util.Map<string,any>;
					public getAdditionalProperties(): java.util.Map<string,any>;
					public getGivenName(): string;
					public hashCode(): number;
					public setFamilyName(param0: string): void;
					public setAdditionalProperty(param0: string, param1: any): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class NeedConsentForBankAccountInfoRetrieval {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.NeedConsentForBankAccountInfoRetrieval>;
					public equals(param0: any): boolean;
					public getEncryptedId(): string;
					public toString(): string;
					public component1(): string;
					public constructor(param0: string);
					public copy(param0: string): com.paypal.pyplcheckout.pojo.NeedConsentForBankAccountInfoRetrieval;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class NeedRealTimeBalanceForBankAccount {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.NeedRealTimeBalanceForBankAccount>;
					public equals(param0: any): boolean;
					public getEncryptedId(): string;
					public toString(): string;
					public component1(): string;
					public constructor(param0: string);
					public copy(param0: string): com.paypal.pyplcheckout.pojo.NeedRealTimeBalanceForBankAccount;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class NewShippingAddressRequest {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.NewShippingAddressRequest>;
					public component2(): string;
					public component5(): string;
					public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string, param7: string);
					public getCountryCode(): string;
					public component7(): string;
					public getFamilyName(): string;
					public getLine1(): string;
					public component3(): string;
					public getState(): string;
					public getCity(): string;
					public equals(param0: any): boolean;
					public toString(): string;
					public component1(): string;
					public component8(): string;
					public getLine2(): string;
					public component6(): string;
					public component4(): string;
					public copy(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string, param7: string): com.paypal.pyplcheckout.pojo.NewShippingAddressRequest;
					public getGivenName(): string;
					public getPostalCode(): string;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class Offer {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.Offer>;
					public equals(param0: any): boolean;
					public toString(): string;
					public component1(): string;
					public component2(): string;
					public copy(param0: string, param1: string, param2: com.paypal.pyplcheckout.pojo.ReturnUrl): com.paypal.pyplcheckout.pojo.Offer;
					public constructor();
					public getPage(): string;
					public component3(): com.paypal.pyplcheckout.pojo.ReturnUrl;
					public constructor(param0: string, param1: string, param2: com.paypal.pyplcheckout.pojo.ReturnUrl);
					public hashCode(): number;
					public getReferenceId(): string;
					public getActionUrl(): com.paypal.pyplcheckout.pojo.ReturnUrl;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class PaycodeContingency {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.PaycodeContingency>;
					public equals(param0: any): boolean;
					public getCauseName(): string;
					public getAttempts(): number;
					public toString(): string;
					public component1(): string;
					public component2(): string;
					public constructor(param0: string, param1: string, param2: number);
					public getName(): string;
					public component3(): number;
					public copy(param0: string, param1: string, param2: number): com.paypal.pyplcheckout.pojo.PaycodeContingency;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class PaymentContingencies {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.PaymentContingencies>;
					public getConfirmCreditCardCvvData(): com.paypal.pyplcheckout.pojo.ConfirmCreditCardCvvData;
					public copy(param0: com.paypal.pyplcheckout.pojo.ThreeDomainSecure, param1: com.paypal.pyplcheckout.pojo.ThreeDSContingencyData, param2: com.paypal.pyplcheckout.pojo.ConfirmCreditCardCvvData, param3: com.paypal.pyplcheckout.pojo.SepaMandateAcceptanceNeeded, param4: com.paypal.pyplcheckout.pojo.NeedConsentForBankAccountInfoRetrieval, param5: com.paypal.pyplcheckout.pojo.NeedRealTimeBalanceForBankAccount, param6: com.paypal.pyplcheckout.pojo.StrongCustomerAuthenticationRequiredContingency): com.paypal.pyplcheckout.pojo.PaymentContingencies;
					public getNeedRealTimeBalanceForBankAccount(): com.paypal.pyplcheckout.pojo.NeedRealTimeBalanceForBankAccount;
					public component2(): com.paypal.pyplcheckout.pojo.ThreeDSContingencyData;
					public getThreeDomainSecure(): com.paypal.pyplcheckout.pojo.ThreeDomainSecure;
					public setThreeDSContingencyData(param0: com.paypal.pyplcheckout.pojo.ThreeDSContingencyData): void;
					public getStrongCustomerAuthenticationRequired(): com.paypal.pyplcheckout.pojo.StrongCustomerAuthenticationRequiredContingency;
					public equals(param0: any): boolean;
					public component4(): com.paypal.pyplcheckout.pojo.SepaMandateAcceptanceNeeded;
					public component7(): com.paypal.pyplcheckout.pojo.StrongCustomerAuthenticationRequiredContingency;
					public toString(): string;
					public constructor(param0: com.paypal.pyplcheckout.pojo.ThreeDomainSecure, param1: com.paypal.pyplcheckout.pojo.ThreeDSContingencyData, param2: com.paypal.pyplcheckout.pojo.ConfirmCreditCardCvvData, param3: com.paypal.pyplcheckout.pojo.SepaMandateAcceptanceNeeded, param4: com.paypal.pyplcheckout.pojo.NeedConsentForBankAccountInfoRetrieval, param5: com.paypal.pyplcheckout.pojo.NeedRealTimeBalanceForBankAccount, param6: com.paypal.pyplcheckout.pojo.StrongCustomerAuthenticationRequiredContingency);
					public component3(): com.paypal.pyplcheckout.pojo.ConfirmCreditCardCvvData;
					public getThreeDSContingencyData(): com.paypal.pyplcheckout.pojo.ThreeDSContingencyData;
					public hashCode(): number;
					public component1(): com.paypal.pyplcheckout.pojo.ThreeDomainSecure;
					public getSepaMandateAcceptanceNeeded(): com.paypal.pyplcheckout.pojo.SepaMandateAcceptanceNeeded;
					public component5(): com.paypal.pyplcheckout.pojo.NeedConsentForBankAccountInfoRetrieval;
					public getNeedConsentForBankAccountInfoRetrieval(): com.paypal.pyplcheckout.pojo.NeedConsentForBankAccountInfoRetrieval;
					public component6(): com.paypal.pyplcheckout.pojo.NeedRealTimeBalanceForBankAccount;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class Phone {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.Phone>;
					public getNumber(): string;
					public equals(param0: any): boolean;
					public toString(): string;
					public component1(): string;
					public constructor(param0: string);
					public hashCode(): number;
					public copy(param0: string): com.paypal.pyplcheckout.pojo.Phone;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class Plan {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.Plan>;
					public copy(param0: string, param1: java.util.List<com.paypal.pyplcheckout.pojo.FundingSource>, param2: com.paypal.pyplcheckout.pojo.FundingOption, param3: java.util.List<com.paypal.pyplcheckout.pojo.FundingOption>, param4: com.paypal.pyplcheckout.pojo.FundingInstrument, param5: com.paypal.pyplcheckout.pojo.CurrencyConversion, param6: java.lang.Boolean, param7: java.util.Map<string,any>): com.paypal.pyplcheckout.pojo.Plan;
					public component7(): java.lang.Boolean;
					public getId(): string;
					public component3(): com.paypal.pyplcheckout.pojo.FundingOption;
					public component5(): com.paypal.pyplcheckout.pojo.FundingInstrument;
					public isSelected(): java.lang.Boolean;
					public getBackupFundingInstrument(): com.paypal.pyplcheckout.pojo.FundingInstrument;
					public getCurrencyConversion(): com.paypal.pyplcheckout.pojo.CurrencyConversion;
					public component8(): java.util.Map<string,any>;
					public getSecondaryFundingOptions(): java.util.List<com.paypal.pyplcheckout.pojo.FundingOption>;
					public component2(): java.util.List<com.paypal.pyplcheckout.pojo.FundingSource>;
					public equals(param0: any): boolean;
					public getPrimaryFundingOption(): com.paypal.pyplcheckout.pojo.FundingOption;
					public toString(): string;
					public component1(): string;
					public component6(): com.paypal.pyplcheckout.pojo.CurrencyConversion;
					public constructor();
					public getAdditionalProperties(): java.util.Map<string,any>;
					public component4(): java.util.List<com.paypal.pyplcheckout.pojo.FundingOption>;
					public getFundingSources(): java.util.List<com.paypal.pyplcheckout.pojo.FundingSource>;
					public hashCode(): number;
					public constructor(param0: string, param1: java.util.List<com.paypal.pyplcheckout.pojo.FundingSource>, param2: com.paypal.pyplcheckout.pojo.FundingOption, param3: java.util.List<com.paypal.pyplcheckout.pojo.FundingOption>, param4: com.paypal.pyplcheckout.pojo.FundingInstrument, param5: com.paypal.pyplcheckout.pojo.CurrencyConversion, param6: java.lang.Boolean, param7: java.util.Map<string,any>);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class PlanType {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.PlanType>;
					public setSoloPlan(param0: com.paypal.pyplcheckout.pojo.Plan): void;
					public equals(param0: any): boolean;
					public toString(): string;
					public setSplitPlanList(param0: java.util.List<com.paypal.pyplcheckout.pojo.Plan>): void;
					public constructor();
					public component1(): com.paypal.pyplcheckout.pojo.Plan;
					public copy(param0: com.paypal.pyplcheckout.pojo.Plan, param1: java.util.List<com.paypal.pyplcheckout.pojo.Plan>): com.paypal.pyplcheckout.pojo.PlanType;
					public getSoloPlan(): com.paypal.pyplcheckout.pojo.Plan;
					public getSplitPlanList(): java.util.List<com.paypal.pyplcheckout.pojo.Plan>;
					public component2(): java.util.List<com.paypal.pyplcheckout.pojo.Plan>;
					public hashCode(): number;
					public constructor(param0: com.paypal.pyplcheckout.pojo.Plan, param1: java.util.List<com.paypal.pyplcheckout.pojo.Plan>);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class Plans {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.Plans>;
					public equals(param0: any): boolean;
					public toString(): string;
					public component2(): java.util.List<com.paypal.pyplcheckout.pojo.SplitPlan>;
					public constructor();
					public getAdditionalProperties(): java.util.Map<string,any>;
					public copy(param0: com.paypal.pyplcheckout.pojo.SoloPlan, param1: java.util.List<com.paypal.pyplcheckout.pojo.SplitPlan>, param2: java.util.Map<string,any>): com.paypal.pyplcheckout.pojo.Plans;
					public getSplitPlans(): java.util.List<com.paypal.pyplcheckout.pojo.SplitPlan>;
					public hashCode(): number;
					public constructor(param0: com.paypal.pyplcheckout.pojo.SoloPlan, param1: java.util.List<com.paypal.pyplcheckout.pojo.SplitPlan>, param2: java.util.Map<string,any>);
					public component1(): com.paypal.pyplcheckout.pojo.SoloPlan;
					public getSoloPlan(): com.paypal.pyplcheckout.pojo.SoloPlan;
					public component3(): java.util.Map<string,any>;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class PortableShippingAddressRequest {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.PortableShippingAddressRequest>;
					public copy(param0: string, param1: string, param2: string, param3: java.lang.Boolean, param4: string, param5: string, param6: string, param7: string, param8: string, param9: string, param10: string, param11: string): com.paypal.pyplcheckout.pojo.PortableShippingAddressRequest;
					public component2(): string;
					public component5(): string;
					public getCountryCode(): string;
					public getAdminArea4(): string;
					public getFamilyName(): string;
					public getAddressLine3(): string;
					public getNormalize(): java.lang.Boolean;
					public toString(): string;
					public component8(): string;
					public getAddressLine2(): string;
					public getAdminArea1(): string;
					public component12(): string;
					public getGivenName(): string;
					public getPostalCode(): string;
					public hashCode(): number;
					public constructor(param0: string, param1: string, param2: string, param3: java.lang.Boolean, param4: string, param5: string, param6: string, param7: string, param8: string, param9: string, param10: string, param11: string);
					public component11(): string;
					public getAddressLine1(): string;
					public getAdminArea2(): string;
					public component7(): string;
					public component3(): string;
					public component10(): string;
					public equals(param0: any): boolean;
					public getAdminArea3(): string;
					public component4(): java.lang.Boolean;
					public component1(): string;
					public component6(): string;
					public component9(): string;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class PrimaryFundingOption {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.PrimaryFundingOption>;
					public getLabel(): string;
					public equals(param0: any): boolean;
					public copy(param0: com.paypal.pyplcheckout.pojo.Amount, param1: string, param2: java.util.Map<string,any>): com.paypal.pyplcheckout.pojo.PrimaryFundingOption;
					public toString(): string;
					public constructor(param0: com.paypal.pyplcheckout.pojo.Amount, param1: string, param2: java.util.Map<string,any>);
					public component2(): string;
					public component1(): com.paypal.pyplcheckout.pojo.Amount;
					public constructor();
					public getAmount(): com.paypal.pyplcheckout.pojo.Amount;
					public getAdditionalProperties(): java.util.Map<string,any>;
					public hashCode(): number;
					public component3(): java.util.Map<string,any>;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class ProfileImage {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ProfileImage>;
					public equals(param0: any): boolean;
					public toString(): string;
					public constructor(param0: com.paypal.pyplcheckout.pojo.Url, param1: java.util.Map<string,any>);
					public component2(): java.util.Map<string,any>;
					public constructor();
					public getUrl(): com.paypal.pyplcheckout.pojo.Url;
					public getAdditionalProperties(): java.util.Map<string,any>;
					public component1(): com.paypal.pyplcheckout.pojo.Url;
					public copy(param0: com.paypal.pyplcheckout.pojo.Url, param1: java.util.Map<string,any>): com.paypal.pyplcheckout.pojo.ProfileImage;
					public hashCode(): number;
					public setUrl(param0: com.paypal.pyplcheckout.pojo.Url): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class Resolution {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.Resolution>;
					public copy(param0: string): com.paypal.pyplcheckout.pojo.Resolution;
					public equals(param0: any): boolean;
					public toString(): string;
					public component1(): string;
					public constructor(param0: string);
					public getName(): string;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class ResolveThreeDsContingencyStatus {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ResolveThreeDsContingencyStatus>;
					public static SUCCESS: com.paypal.pyplcheckout.pojo.ResolveThreeDsContingencyStatus;
					public static FAILURE: com.paypal.pyplcheckout.pojo.ResolveThreeDsContingencyStatus;
					public static valueOf(param0: string): com.paypal.pyplcheckout.pojo.ResolveThreeDsContingencyStatus;
					public static values(): androidNative.Array<com.paypal.pyplcheckout.pojo.ResolveThreeDsContingencyStatus>;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class ReturnUrl {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ReturnUrl>;
					public equals(param0: any): boolean;
					public toString(): string;
					public component1(): string;
					public constructor(param0: string);
					public getHref(): string;
					public getAdditionalProperties(): java.util.Map<string,any>;
					public copy(param0: string): com.paypal.pyplcheckout.pojo.ReturnUrl;
					public setAdditionalProperties(param0: java.util.Map<string,any>): void;
					public hashCode(): number;
					public setAdditionalProperty(param0: string, param1: any): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class SecondaryFundingOption {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.SecondaryFundingOption>;
					public getLabel(): string;
					public constructor(param0: string, param1: string, param2: com.paypal.pyplcheckout.pojo.Amount, param3: java.util.Map<string,any>);
					public component2(): string;
					public getAmount(): com.paypal.pyplcheckout.pojo.Amount;
					public component3(): com.paypal.pyplcheckout.pojo.Amount;
					public copy(param0: string, param1: string, param2: com.paypal.pyplcheckout.pojo.Amount, param3: java.util.Map<string,any>): com.paypal.pyplcheckout.pojo.SecondaryFundingOption;
					public equals(param0: any): boolean;
					public toString(): string;
					public component1(): string;
					public component4(): java.util.Map<string,any>;
					public getAdditionalProperties(): java.util.Map<string,any>;
					public getFundingOptionId(): string;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class SelectedShippingMethod {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.SelectedShippingMethod>;
					public getLabel(): string;
					public getId(): string;
					public component2(): string;
					public component3(): string;
					public copy(param0: string, param1: string, param2: string, param3: com.paypal.pyplcheckout.pojo.ShippingAmount): com.paypal.pyplcheckout.pojo.SelectedShippingMethod;
					public equals(param0: any): boolean;
					public toString(): string;
					public component1(): string;
					public constructor(param0: string, param1: string, param2: string, param3: com.paypal.pyplcheckout.pojo.ShippingAmount);
					public getType(): string;
					public hashCode(): number;
					public getAmount(): com.paypal.pyplcheckout.pojo.ShippingAmount;
					public component4(): com.paypal.pyplcheckout.pojo.ShippingAmount;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class SepaMandateAcceptanceNeeded {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.SepaMandateAcceptanceNeeded>;
					public equals(param0: any): boolean;
					public copy(param0: string): com.paypal.pyplcheckout.pojo.SepaMandateAcceptanceNeeded;
					public toString(): string;
					public getId(): string;
					public component1(): string;
					public constructor(param0: string);
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class ShippingAddress {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ShippingAddress>;
					public setAddressId(param0: string): void;
					public setDisabled(param0: boolean): void;
					public component5(): string;
					public isDefault(): boolean;
					public setFullAddress(param0: string): void;
					public setPostalCode(param0: string): void;
					public copy(param0: string, param1: com.paypal.pyplcheckout.pojo.Name, param2: string, param3: string, param4: string, param5: string, param6: string, param7: string, param8: boolean, param9: boolean, param10: boolean, param11: boolean, param12: string, param13: java.util.Map<string,any>, param14: boolean): com.paypal.pyplcheckout.pojo.ShippingAddress;
					public setSelected(param0: boolean): void;
					public component8(): string;
					public setName(param0: com.paypal.pyplcheckout.pojo.Name): void;
					public component9(): boolean;
					public isPrimary(): boolean;
					public setState(param0: string): void;
					public isDisabled(): boolean;
					public getFullAddress(): string;
					public component3(): string;
					public isInvalid(): boolean;
					public setPrimary(param0: boolean): void;
					public component1(): string;
					public component14(): java.util.Map<string,any>;
					public component2(): com.paypal.pyplcheckout.pojo.Name;
					public setLine2(param0: string): void;
					public isSelected(): boolean;
					public component10(): boolean;
					public component13(): string;
					public setDefault(param0: boolean): void;
					public getName(): com.paypal.pyplcheckout.pojo.Name;
					public setCity(param0: string): void;
					public component15(): boolean;
					public toString(): string;
					public setInvalid(param0: boolean): void;
					public setCountry(param0: string): void;
					public component4(): string;
					public component11(): boolean;
					public component12(): boolean;
					public getPostalCode(): string;
					public hashCode(): number;
					public setLine1(param0: string): void;
					public setAdditionalProperty(param0: string, param1: any): void;
					public component7(): string;
					public getLine1(): string;
					public getCountry(): string;
					public getState(): string;
					public getCity(): string;
					public constructor(param0: string, param1: com.paypal.pyplcheckout.pojo.Name, param2: string, param3: string, param4: string, param5: string, param6: string, param7: string, param8: boolean, param9: boolean, param10: boolean, param11: boolean, param12: string, param13: java.util.Map<string,any>, param14: boolean);
					public equals(param0: any): boolean;
					public getLine2(): string;
					public getAdditionalProperties(): java.util.Map<string,any>;
					public component6(): string;
					public getAddressId(): string;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class ShippingAmount {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ShippingAmount>;
					public constructor(param0: string, param1: string);
					public equals(param0: any): boolean;
					public toString(): string;
					public component1(): string;
					public component2(): string;
					public hashCode(): number;
					public getAmount(): string;
					public getCurrencyCode(): string;
					public copy(param0: string, param1: string): com.paypal.pyplcheckout.pojo.ShippingAmount;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class ShippingCallbackRequestType {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ShippingCallbackRequestType>;
					public toShippingChangeEvent(): com.paypal.checkout.shipping.ShippingChangeType;
					public constructor(param0: com.paypal.pyplcheckout.pojo.ShippingCallbackRequestType.Type);
					public getShippingCallbackRequestType(): com.paypal.pyplcheckout.pojo.ShippingCallbackRequestType.Type;
				}
				export module ShippingCallbackRequestType {
					export class Type {
						public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ShippingCallbackRequestType.Type>;
						public static SHIPPING_ADDRESS: com.paypal.pyplcheckout.pojo.ShippingCallbackRequestType.Type;
						public static SHIPPING_METHODS: com.paypal.pyplcheckout.pojo.ShippingCallbackRequestType.Type;
						public static valueOf(param0: string): com.paypal.pyplcheckout.pojo.ShippingCallbackRequestType.Type;
						public static values(): androidNative.Array<com.paypal.pyplcheckout.pojo.ShippingCallbackRequestType.Type>;
					}
					export class WhenMappings {
						public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ShippingCallbackRequestType.WhenMappings>;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class ShippingData {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ShippingData>;
					public copy(param0: string, param1: string, param2: com.paypal.pyplcheckout.pojo.UpdatedShippingAddress, param3: string, param4: string, param5: com.paypal.pyplcheckout.pojo.ShippingMethods, param6: java.util.List<com.paypal.checkout.order.Options>): com.paypal.pyplcheckout.pojo.ShippingData;
					public constructor(param0: string, param1: string, param2: com.paypal.pyplcheckout.pojo.UpdatedShippingAddress, param3: string, param4: string, param5: com.paypal.pyplcheckout.pojo.ShippingMethods, param6: java.util.List<com.paypal.checkout.order.Options>);
					public component2(): string;
					public component5(): string;
					public component7(): java.util.List<com.paypal.checkout.order.Options>;
					public equals(param0: any): boolean;
					public getCheckoutToken(): string;
					public toString(): string;
					public component1(): string;
					public getEcToken(): string;
					public getPaymentId(): string;
					public getBillingToken(): string;
					public getUpdatedShippingAddress(): com.paypal.pyplcheckout.pojo.UpdatedShippingAddress;
					public component6(): com.paypal.pyplcheckout.pojo.ShippingMethods;
					public component3(): com.paypal.pyplcheckout.pojo.UpdatedShippingAddress;
					public component4(): string;
					public getShippingOptions(): java.util.List<com.paypal.checkout.order.Options>;
					public hashCode(): number;
					public getSelectedShippingMethod(): com.paypal.pyplcheckout.pojo.ShippingMethods;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class ShippingMethodType {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ShippingMethodType>;
					public getShippingMethodType(): com.paypal.pyplcheckout.pojo.ShippingMethodType.Type;
					public isShipping(): boolean;
					public constructor(param0: com.paypal.pyplcheckout.pojo.ShippingMethodType.Type);
				}
				export module ShippingMethodType {
					export class Type {
						public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ShippingMethodType.Type>;
						public static SHIPPING: com.paypal.pyplcheckout.pojo.ShippingMethodType.Type;
						public static PICKUP: com.paypal.pyplcheckout.pojo.ShippingMethodType.Type;
						public static SHIPPING_AND_PICKUP: com.paypal.pyplcheckout.pojo.ShippingMethodType.Type;
						public static NONE: com.paypal.pyplcheckout.pojo.ShippingMethodType.Type;
						public static values(): androidNative.Array<com.paypal.pyplcheckout.pojo.ShippingMethodType.Type>;
						public static valueOf(param0: string): com.paypal.pyplcheckout.pojo.ShippingMethodType.Type;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class ShippingMethods {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ShippingMethods>;
					public getLabel(): string;
					public copy(param0: string, param1: string, param2: boolean, param3: com.paypal.pyplcheckout.pojo.Amount, param4: com.paypal.pyplcheckout.pojo.ShippingMethodType.Type): com.paypal.pyplcheckout.pojo.ShippingMethods;
					public getId(): string;
					public component2(): string;
					public toOptions(param0: com.paypal.checkout.createorder.CurrencyCode): com.paypal.checkout.order.Options;
					public getAmount(): com.paypal.pyplcheckout.pojo.Amount;
					public component4(): com.paypal.pyplcheckout.pojo.Amount;
					public constructor(param0: string, param1: string, param2: boolean, param3: com.paypal.pyplcheckout.pojo.Amount, param4: com.paypal.pyplcheckout.pojo.ShippingMethodType.Type);
					public equals(param0: any): boolean;
					public toString(): string;
					public getSelected(): boolean;
					public setSelected(param0: boolean): void;
					public component1(): string;
					public component3(): boolean;
					public getType(): com.paypal.pyplcheckout.pojo.ShippingMethodType.Type;
					public hashCode(): number;
					public component5(): com.paypal.pyplcheckout.pojo.ShippingMethodType.Type;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class SignatureVerificationStatus {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.SignatureVerificationStatus>;
					public static YES: com.paypal.pyplcheckout.pojo.SignatureVerificationStatus;
					public static NO: com.paypal.pyplcheckout.pojo.SignatureVerificationStatus;
					public static valueOf(param0: string): com.paypal.pyplcheckout.pojo.SignatureVerificationStatus;
					public static values(): androidNative.Array<com.paypal.pyplcheckout.pojo.SignatureVerificationStatus>;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class SoloPlan {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.SoloPlan>;
					public getPrimaryFundingOption(): com.paypal.pyplcheckout.pojo.PrimaryFundingOption;
					public getBackupFundingOption(): com.paypal.pyplcheckout.pojo.FundingOption;
					public getPlanId(): string;
					public copy(param0: string, param1: com.paypal.pyplcheckout.pojo.PrimaryFundingOption, param2: com.paypal.pyplcheckout.pojo.FundingOption, param3: java.util.Map<string,any>): com.paypal.pyplcheckout.pojo.SoloPlan;
					public component3(): com.paypal.pyplcheckout.pojo.FundingOption;
					public component2(): com.paypal.pyplcheckout.pojo.PrimaryFundingOption;
					public equals(param0: any): boolean;
					public toString(): string;
					public component1(): string;
					public constructor(param0: string, param1: com.paypal.pyplcheckout.pojo.PrimaryFundingOption, param2: com.paypal.pyplcheckout.pojo.FundingOption, param3: java.util.Map<string,any>);
					public component4(): java.util.Map<string,any>;
					public getAdditionalProperties(): java.util.Map<string,any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class SplitBalanceType {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.SplitBalanceType>;
					public getSplitBalanceTypes(): com.paypal.pyplcheckout.pojo.SplitBalanceType.Type;
					public constructor(param0: com.paypal.pyplcheckout.pojo.SplitBalanceType.Type);
				}
				export module SplitBalanceType {
					export class Type {
						public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.SplitBalanceType.Type>;
						public static NO_SPLIT_BALANCE: com.paypal.pyplcheckout.pojo.SplitBalanceType.Type;
						public static SINGLE_SPLIT_BALANCE: com.paypal.pyplcheckout.pojo.SplitBalanceType.Type;
						public static MULTIPLE_SPLIT_BALANCE: com.paypal.pyplcheckout.pojo.SplitBalanceType.Type;
						public static values(): androidNative.Array<com.paypal.pyplcheckout.pojo.SplitBalanceType.Type>;
						public static valueOf(param0: string): com.paypal.pyplcheckout.pojo.SplitBalanceType.Type;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class SplitPlan {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.SplitPlan>;
					public getPrimaryFundingOption(): com.paypal.pyplcheckout.pojo.PrimaryFundingOption;
					public getPlanId(): string;
					public component5(): java.util.Map<string,any>;
					public component2(): string;
					public component1(): com.paypal.pyplcheckout.pojo.PrimaryFundingOption;
					public isSelected(): java.lang.Boolean;
					public copy(param0: com.paypal.pyplcheckout.pojo.PrimaryFundingOption, param1: string, param2: com.paypal.pyplcheckout.pojo.SecondaryFundingOption, param3: java.lang.Boolean, param4: java.util.Map<string,any>): com.paypal.pyplcheckout.pojo.SplitPlan;
					public component3(): com.paypal.pyplcheckout.pojo.SecondaryFundingOption;
					public equals(param0: any): boolean;
					public component4(): java.lang.Boolean;
					public toString(): string;
					public getSecondaryFundingOption(): com.paypal.pyplcheckout.pojo.SecondaryFundingOption;
					public constructor();
					public getAdditionalProperties(): java.util.Map<string,any>;
					public hashCode(): number;
					public constructor(param0: com.paypal.pyplcheckout.pojo.PrimaryFundingOption, param1: string, param2: com.paypal.pyplcheckout.pojo.SecondaryFundingOption, param3: java.lang.Boolean, param4: java.util.Map<string,any>);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class StrongCustomerAuthenticationRequiredContingency {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.StrongCustomerAuthenticationRequiredContingency>;
					public equals(param0: any): boolean;
					public toString(): string;
					public component1(): string;
					public constructor(param0: string);
					public copy(param0: string): com.paypal.pyplcheckout.pojo.StrongCustomerAuthenticationRequiredContingency;
					public getContextId(): string;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class SupportedFundingSources {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.SupportedFundingSources>;
					public equals(param0: any): boolean;
					public toString(): string;
					public component2(): com.paypal.pyplcheckout.pojo.Url;
					public constructor(param0: com.paypal.pyplcheckout.pojo.CardIssuerType, param1: com.paypal.pyplcheckout.pojo.Url);
					public getBrandLogoUrl(): com.paypal.pyplcheckout.pojo.Url;
					public copy(param0: com.paypal.pyplcheckout.pojo.CardIssuerType, param1: com.paypal.pyplcheckout.pojo.Url): com.paypal.pyplcheckout.pojo.SupportedFundingSources;
					public hashCode(): number;
					public getBrand(): com.paypal.pyplcheckout.pojo.CardIssuerType;
					public component1(): com.paypal.pyplcheckout.pojo.CardIssuerType;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class ThreeDSAuthenticate {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ThreeDSAuthenticate>;
					public component16(): string;
					public getCavv(): string;
					public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: com.paypal.pyplcheckout.pojo.SignatureVerificationStatus, param7: java.lang.Boolean, param8: com.paypal.pyplcheckout.pojo.CardIssuerType, param9: string, param10: string, param11: string, param12: java.lang.Boolean, param13: com.paypal.pyplcheckout.pojo.ResolveThreeDsContingencyStatus, param14: com.paypal.pyplcheckout.pojo.EnrollmentStatusType, param15: string, param16: string);
					public component2(): string;
					public component5(): string;
					public component9(): com.paypal.pyplcheckout.pojo.CardIssuerType;
					public getSkipThreeDSEnforcement(): java.lang.Boolean;
					public getLiabilityShift(): java.lang.Boolean;
					public getThreeDSVersion(): string;
					public toString(): string;
					public getEciIndicator(): string;
					public getUcafIndicator(): string;
					public component15(): com.paypal.pyplcheckout.pojo.EnrollmentStatusType;
					public component4(): string;
					public component12(): string;
					public component7(): com.paypal.pyplcheckout.pojo.SignatureVerificationStatus;
					public getSignatureVerificationStatus(): com.paypal.pyplcheckout.pojo.SignatureVerificationStatus;
					public hashCode(): number;
					public getThreeDSSignatureStatus(): string;
					public getEnrollmentStatus(): com.paypal.pyplcheckout.pojo.EnrollmentStatusType;
					public getThreeDSStatus(): com.paypal.pyplcheckout.pojo.ResolveThreeDsContingencyStatus;
					public getThreeDsAuthenticationReason(): string;
					public component11(): string;
					public getAuthenticationType(): string;
					public component14(): com.paypal.pyplcheckout.pojo.ResolveThreeDsContingencyStatus;
					public component3(): string;
					public getAuthenticationThreeDSStatus(): string;
					public getCardBrandProcessed(): com.paypal.pyplcheckout.pojo.CardIssuerType;
					public copy(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: com.paypal.pyplcheckout.pojo.SignatureVerificationStatus, param7: java.lang.Boolean, param8: com.paypal.pyplcheckout.pojo.CardIssuerType, param9: string, param10: string, param11: string, param12: java.lang.Boolean, param13: com.paypal.pyplcheckout.pojo.ResolveThreeDsContingencyStatus, param14: com.paypal.pyplcheckout.pojo.EnrollmentStatusType, param15: string, param16: string): com.paypal.pyplcheckout.pojo.ThreeDSAuthenticate;
					public component17(): string;
					public component10(): string;
					public equals(param0: any): boolean;
					public getThreeDSUcafIndicator(): string;
					public component1(): string;
					public getThreeDSTransactionId(): string;
					public getThreeDSEcommerceIndicator(): string;
					public component6(): string;
					public component13(): java.lang.Boolean;
					public component8(): java.lang.Boolean;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class ThreeDSAuthenticateData {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ThreeDSAuthenticateData>;
					public equals(param0: any): boolean;
					public constructor(param0: com.paypal.pyplcheckout.pojo.ThreeDSAuthenticate);
					public toString(): string;
					public copy(param0: com.paypal.pyplcheckout.pojo.ThreeDSAuthenticate): com.paypal.pyplcheckout.pojo.ThreeDSAuthenticateData;
					public component1(): com.paypal.pyplcheckout.pojo.ThreeDSAuthenticate;
					public hashCode(): number;
					public getThreeDSAuthenticate(): com.paypal.pyplcheckout.pojo.ThreeDSAuthenticate;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class ThreeDSAuthenticateResponse {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ThreeDSAuthenticateResponse>;
					public component1(): com.paypal.pyplcheckout.pojo.ThreeDSAuthenticateData;
					public equals(param0: any): boolean;
					public constructor(param0: com.paypal.pyplcheckout.pojo.ThreeDSAuthenticateData, param1: com.paypal.pyplcheckout.pojo.Extensions, param2: java.util.List<com.paypal.pyplcheckout.pojo.Error>);
					public toString(): string;
					public component3(): java.util.List<com.paypal.pyplcheckout.pojo.Error>;
					public copy(param0: com.paypal.pyplcheckout.pojo.ThreeDSAuthenticateData, param1: com.paypal.pyplcheckout.pojo.Extensions, param2: java.util.List<com.paypal.pyplcheckout.pojo.Error>): com.paypal.pyplcheckout.pojo.ThreeDSAuthenticateResponse;
					public getExtensions(): com.paypal.pyplcheckout.pojo.Extensions;
					public hashCode(): number;
					public getData(): com.paypal.pyplcheckout.pojo.ThreeDSAuthenticateData;
					public component2(): com.paypal.pyplcheckout.pojo.Extensions;
					public getErrors(): java.util.List<com.paypal.pyplcheckout.pojo.Error>;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class ThreeDSContingencyContext {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ThreeDSContingencyContext>;
					public component2(): string;
					public component5(): com.paypal.pyplcheckout.pojo.ThreeDSJwtSpecification;
					public getSource(): string;
					public getDeviceDataCollectionUrl(): com.paypal.pyplcheckout.pojo.Url;
					public component3(): string;
					public copy(param0: string, param1: string, param2: string, param3: com.paypal.pyplcheckout.pojo.Url, param4: com.paypal.pyplcheckout.pojo.ThreeDSJwtSpecification): com.paypal.pyplcheckout.pojo.ThreeDSContingencyContext;
					public getReferenceId(): string;
					public equals(param0: any): boolean;
					public getJwtSpecification(): com.paypal.pyplcheckout.pojo.ThreeDSJwtSpecification;
					public getReason(): string;
					public toString(): string;
					public component1(): string;
					public constructor(param0: string, param1: string, param2: string, param3: com.paypal.pyplcheckout.pojo.Url, param4: com.paypal.pyplcheckout.pojo.ThreeDSJwtSpecification);
					public hashCode(): number;
					public component4(): com.paypal.pyplcheckout.pojo.Url;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class ThreeDSContingencyData {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ThreeDSContingencyData>;
					public equals(param0: any): boolean;
					public getCauseName(): string;
					public toString(): string;
					public component1(): string;
					public component2(): string;
					public getName(): string;
					public getResolution(): com.paypal.pyplcheckout.pojo.ThreeDsResolution;
					public copy(param0: string, param1: string, param2: com.paypal.pyplcheckout.pojo.ThreeDsResolution): com.paypal.pyplcheckout.pojo.ThreeDSContingencyData;
					public hashCode(): number;
					public component3(): com.paypal.pyplcheckout.pojo.ThreeDsResolution;
					public constructor(param0: string, param1: string, param2: com.paypal.pyplcheckout.pojo.ThreeDsResolution);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class ThreeDSContingencyReasonType {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ThreeDSContingencyReasonType>;
					public static REGULATORY_MANDATE: com.paypal.pyplcheckout.pojo.ThreeDSContingencyReasonType;
					public static MERCHANT_REQUESTED: com.paypal.pyplcheckout.pojo.ThreeDSContingencyReasonType;
					public static PAYPAL_POLICY: com.paypal.pyplcheckout.pojo.ThreeDSContingencyReasonType;
					public static UNKNOWN: com.paypal.pyplcheckout.pojo.ThreeDSContingencyReasonType;
					public static valueOf(param0: string): com.paypal.pyplcheckout.pojo.ThreeDSContingencyReasonType;
					public static values(): androidNative.Array<com.paypal.pyplcheckout.pojo.ThreeDSContingencyReasonType>;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class ThreeDSContingencySourceType {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ThreeDSContingencySourceType>;
					public static UNKNOWN: com.paypal.pyplcheckout.pojo.ThreeDSContingencySourceType;
					public static PAYMENT_CONTEXT: com.paypal.pyplcheckout.pojo.ThreeDSContingencySourceType;
					public static PAYPAL_RISK: com.paypal.pyplcheckout.pojo.ThreeDSContingencySourceType;
					public static CARD: com.paypal.pyplcheckout.pojo.ThreeDSContingencySourceType;
					public static CARD_STATE: com.paypal.pyplcheckout.pojo.ThreeDSContingencySourceType;
					public static AUTHORIZATION: com.paypal.pyplcheckout.pojo.ThreeDSContingencySourceType;
					public static valueOf(param0: string): com.paypal.pyplcheckout.pojo.ThreeDSContingencySourceType;
					public static values(): androidNative.Array<com.paypal.pyplcheckout.pojo.ThreeDSContingencySourceType>;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class ThreeDSInitJWT {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ThreeDSInitJWT>;
					public component1(): com.paypal.pyplcheckout.pojo.ThreeDSJwt;
					public equals(param0: any): boolean;
					public toString(): string;
					public getData(): com.paypal.pyplcheckout.pojo.ThreeDSJwt;
					public component3(): java.util.List<com.paypal.pyplcheckout.pojo.Error>;
					public copy(param0: com.paypal.pyplcheckout.pojo.ThreeDSJwt, param1: com.paypal.pyplcheckout.pojo.Extensions, param2: java.util.List<com.paypal.pyplcheckout.pojo.Error>): com.paypal.pyplcheckout.pojo.ThreeDSInitJWT;
					public getExtensions(): com.paypal.pyplcheckout.pojo.Extensions;
					public constructor(param0: com.paypal.pyplcheckout.pojo.ThreeDSJwt, param1: com.paypal.pyplcheckout.pojo.Extensions, param2: java.util.List<com.paypal.pyplcheckout.pojo.Error>);
					public hashCode(): number;
					public component2(): com.paypal.pyplcheckout.pojo.Extensions;
					public getErrors(): java.util.List<com.paypal.pyplcheckout.pojo.Error>;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class ThreeDSJwt {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ThreeDSJwt>;
					public equals(param0: any): boolean;
					public toString(): string;
					public component1(): string;
					public constructor(param0: string);
					public getThreeDSJwt(): string;
					public copy(param0: string): com.paypal.pyplcheckout.pojo.ThreeDSJwt;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class ThreeDSJwtSpecification {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ThreeDSJwtSpecification>;
					public copy(param0: string, param1: string, param2: string, param3: string): com.paypal.pyplcheckout.pojo.ThreeDSJwtSpecification;
					public component2(): string;
					public getJwtOrgUnitId(): string;
					public getJwtDuration(): string;
					public component3(): string;
					public getJwtIssuer(): string;
					public equals(param0: any): boolean;
					public toString(): string;
					public constructor(param0: string, param1: string, param2: string, param3: string);
					public component1(): string;
					public component4(): string;
					public getType(): string;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class ThreeDSLookUp {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ThreeDSLookUp>;
					public component16(): string;
					public getTransactionStatusMessage(): string;
					public getCavv(): string;
					public constructor(param0: string, param1: string, param2: com.paypal.pyplcheckout.pojo.EnrollmentStatusType, param3: java.lang.Boolean, param4: string, param5: com.paypal.pyplcheckout.pojo.CardIssuerType, param6: com.paypal.pyplcheckout.pojo.SignatureVerificationStatus, param7: string, param8: string, param9: com.paypal.pyplcheckout.pojo.GenericURL, param10: com.paypal.pyplcheckout.pojo.GenericURL, param11: string, param12: string, param13: string, param14: string, param15: string, param16: string, param17: string, param18: string);
					public getTransactionId(): string;
					public component2(): string;
					public component5(): string;
					public component13(): string;
					public component19(): string;
					public copy(param0: string, param1: string, param2: com.paypal.pyplcheckout.pojo.EnrollmentStatusType, param3: java.lang.Boolean, param4: string, param5: com.paypal.pyplcheckout.pojo.CardIssuerType, param6: com.paypal.pyplcheckout.pojo.SignatureVerificationStatus, param7: string, param8: string, param9: com.paypal.pyplcheckout.pojo.GenericURL, param10: com.paypal.pyplcheckout.pojo.GenericURL, param11: string, param12: string, param13: string, param14: string, param15: string, param16: string, param17: string, param18: string): com.paypal.pyplcheckout.pojo.ThreeDSLookUp;
					public getLiabilityShift(): java.lang.Boolean;
					public getThreeDSStatus(): string;
					public getThreeDSVersion(): string;
					public component3(): com.paypal.pyplcheckout.pojo.EnrollmentStatusType;
					public toString(): string;
					public component6(): com.paypal.pyplcheckout.pojo.CardIssuerType;
					public component8(): string;
					public component12(): string;
					public component7(): com.paypal.pyplcheckout.pojo.SignatureVerificationStatus;
					public getSignatureVerificationStatus(): com.paypal.pyplcheckout.pojo.SignatureVerificationStatus;
					public hashCode(): number;
					public getEnrollmentStatus(): com.paypal.pyplcheckout.pojo.EnrollmentStatusType;
					public component10(): com.paypal.pyplcheckout.pojo.GenericURL;
					public getPaymentAuthenticationRequest(): string;
					public getThreeDsServerTransactionId(): string;
					public getThreeDsAuthenticationReason(): string;
					public getTransactionStatusCode(): string;
					public getRedirectURL(): com.paypal.pyplcheckout.pojo.GenericURL;
					public getAuthenticationThreeDSStatus(): string;
					public getCardBrandProcessed(): com.paypal.pyplcheckout.pojo.CardIssuerType;
					public component15(): string;
					public component17(): string;
					public equals(param0: any): boolean;
					public getThreeDSUcafIndicator(): string;
					public component4(): java.lang.Boolean;
					public component1(): string;
					public getThreeDSEcommerceIndicator(): string;
					public component9(): string;
					public component11(): com.paypal.pyplcheckout.pojo.GenericURL;
					public getThreeDsProcessorTraceNumber(): string;
					public getAcsURL(): com.paypal.pyplcheckout.pojo.GenericURL;
					public component14(): string;
					public component18(): string;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class ThreeDSLookUpResponse {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ThreeDSLookUpResponse>;
					public equals(param0: any): boolean;
					public toString(): string;
					public constructor(param0: com.paypal.pyplcheckout.pojo.ThreeDSLookUpResponseData, param1: com.paypal.pyplcheckout.pojo.Extensions, param2: java.util.List<com.paypal.pyplcheckout.pojo.Error>);
					public getData(): com.paypal.pyplcheckout.pojo.ThreeDSLookUpResponseData;
					public component3(): java.util.List<com.paypal.pyplcheckout.pojo.Error>;
					public getExtensions(): com.paypal.pyplcheckout.pojo.Extensions;
					public component1(): com.paypal.pyplcheckout.pojo.ThreeDSLookUpResponseData;
					public copy(param0: com.paypal.pyplcheckout.pojo.ThreeDSLookUpResponseData, param1: com.paypal.pyplcheckout.pojo.Extensions, param2: java.util.List<com.paypal.pyplcheckout.pojo.Error>): com.paypal.pyplcheckout.pojo.ThreeDSLookUpResponse;
					public hashCode(): number;
					public component2(): com.paypal.pyplcheckout.pojo.Extensions;
					public getErrors(): java.util.List<com.paypal.pyplcheckout.pojo.Error>;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class ThreeDSLookUpResponseData {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ThreeDSLookUpResponseData>;
					public getThreeDSLookUp(): com.paypal.pyplcheckout.pojo.ThreeDSLookUp;
					public equals(param0: any): boolean;
					public component1(): com.paypal.pyplcheckout.pojo.ThreeDSLookUp;
					public toString(): string;
					public constructor(param0: com.paypal.pyplcheckout.pojo.ThreeDSLookUp);
					public hashCode(): number;
					public copy(param0: com.paypal.pyplcheckout.pojo.ThreeDSLookUp): com.paypal.pyplcheckout.pojo.ThreeDSLookUpResponseData;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class ThreeDSLookupPayload {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ThreeDSLookupPayload>;
					public getThreeDSReferenceId(): string;
					public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: com.paypal.pyplcheckout.pojo.FundingInstrumentSubtype, param7: com.paypal.pyplcheckout.pojo.CardTransactionType, param8: com.paypal.pyplcheckout.pojo.BillingAddressLookupRequest, param9: string, param10: com.paypal.pyplcheckout.pojo.ThreeDSContingencyReasonType, param11: com.paypal.pyplcheckout.pojo.ThreeDSContingencySourceType, param12: java.lang.Boolean);
					public component2(): string;
					public component5(): string;
					public component9(): com.paypal.pyplcheckout.pojo.BillingAddressLookupRequest;
					public getBillingAddress(): com.paypal.pyplcheckout.pojo.BillingAddressLookupRequest;
					public getThreeDSContingencySourceType(): com.paypal.pyplcheckout.pojo.ThreeDSContingencySourceType;
					public getEncryptedCardNumber(): string;
					public toString(): string;
					public getMerchantCategoryCode(): string;
					public getCardUsage(): com.paypal.pyplcheckout.pojo.FundingInstrumentSubtype;
					public component8(): com.paypal.pyplcheckout.pojo.CardTransactionType;
					public component4(): string;
					public hashCode(): number;
					public getThreeDSContingencyReason(): com.paypal.pyplcheckout.pojo.ThreeDSContingencyReasonType;
					public copy(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: com.paypal.pyplcheckout.pojo.FundingInstrumentSubtype, param7: com.paypal.pyplcheckout.pojo.CardTransactionType, param8: com.paypal.pyplcheckout.pojo.BillingAddressLookupRequest, param9: string, param10: com.paypal.pyplcheckout.pojo.ThreeDSContingencyReasonType, param11: com.paypal.pyplcheckout.pojo.ThreeDSContingencySourceType, param12: java.lang.Boolean): com.paypal.pyplcheckout.pojo.ThreeDSLookupPayload;
					public component11(): com.paypal.pyplcheckout.pojo.ThreeDSContingencyReasonType;
					public getExpirationMonth(): string;
					public component3(): string;
					public getCreditCardId(): string;
					public getFlowId(): string;
					public component7(): com.paypal.pyplcheckout.pojo.FundingInstrumentSubtype;
					public component10(): string;
					public equals(param0: any): boolean;
					public component1(): string;
					public getUnbrandedPaymentIndicator(): java.lang.Boolean;
					public component6(): string;
					public component12(): com.paypal.pyplcheckout.pojo.ThreeDSContingencySourceType;
					public getCardTransactionCharacteristics(): com.paypal.pyplcheckout.pojo.CardTransactionType;
					public getExpirationYear(): string;
					public component13(): java.lang.Boolean;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class ThreeDSPaymentCardData {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ThreeDSPaymentCardData>;
					public getId(): string;
					public component6(): com.paypal.pyplcheckout.pojo.BillingAddress;
					public component2(): string;
					public component5(): string;
					public getBillingAddress(): com.paypal.pyplcheckout.pojo.BillingAddress;
					public getBankIdentificationNumber(): string;
					public getExpireMonth(): string;
					public toString(): string;
					public component8(): string;
					public getPartialFpan(): java.lang.Boolean;
					public component4(): string;
					public getType(): string;
					public hashCode(): number;
					public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: com.paypal.pyplcheckout.pojo.BillingAddress, param6: string, param7: string, param8: string, param9: string, param10: java.lang.Boolean);
					public getEncryptedNumber(): string;
					public getCurrencyCode(): string;
					public copy(param0: string, param1: string, param2: string, param3: string, param4: string, param5: com.paypal.pyplcheckout.pojo.BillingAddress, param6: string, param7: string, param8: string, param9: string, param10: java.lang.Boolean): com.paypal.pyplcheckout.pojo.ThreeDSPaymentCardData;
					public getNumber(): string;
					public component11(): java.lang.Boolean;
					public getCardProductClass(): string;
					public component7(): string;
					public component3(): string;
					public getExpireYear(): string;
					public component10(): string;
					public equals(param0: any): boolean;
					public component1(): string;
					public component9(): string;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class ThreeDSResolveContingencyData {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ThreeDSResolveContingencyData>;
					public equals(param0: any): boolean;
					public component1(): com.paypal.pyplcheckout.pojo.CheckoutSession;
					public copy(param0: com.paypal.pyplcheckout.pojo.CheckoutSession): com.paypal.pyplcheckout.pojo.ThreeDSResolveContingencyData;
					public toString(): string;
					public constructor(param0: com.paypal.pyplcheckout.pojo.CheckoutSession);
					public hashCode(): number;
					public getResolveThreeDsContingency(): com.paypal.pyplcheckout.pojo.CheckoutSession;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class ThreeDSResolveContingencyResponse {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ThreeDSResolveContingencyResponse>;
					public equals(param0: any): boolean;
					public component1(): com.paypal.pyplcheckout.pojo.ThreeDSResolveContingencyData;
					public toString(): string;
					public getData(): com.paypal.pyplcheckout.pojo.ThreeDSResolveContingencyData;
					public copy(param0: com.paypal.pyplcheckout.pojo.ThreeDSResolveContingencyData, param1: com.paypal.pyplcheckout.pojo.Extensions, param2: java.util.List<com.paypal.pyplcheckout.pojo.Error>): com.paypal.pyplcheckout.pojo.ThreeDSResolveContingencyResponse;
					public component3(): java.util.List<com.paypal.pyplcheckout.pojo.Error>;
					public getExtensions(): com.paypal.pyplcheckout.pojo.Extensions;
					public hashCode(): number;
					public constructor(param0: com.paypal.pyplcheckout.pojo.ThreeDSResolveContingencyData, param1: com.paypal.pyplcheckout.pojo.Extensions, param2: java.util.List<com.paypal.pyplcheckout.pojo.Error>);
					public component2(): com.paypal.pyplcheckout.pojo.Extensions;
					public getErrors(): java.util.List<com.paypal.pyplcheckout.pojo.Error>;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class ThreeDomainSecure {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ThreeDomainSecure>;
					public component3(): com.paypal.pyplcheckout.pojo.Url;
					public getEncryptedId(): string;
					public component2(): string;
					public component5(): string;
					public getRedirectUrl(): com.paypal.pyplcheckout.pojo.Url;
					public getStatus(): string;
					public copy(param0: string, param1: string, param2: com.paypal.pyplcheckout.pojo.Url, param3: string, param4: string, param5: string): com.paypal.pyplcheckout.pojo.ThreeDomainSecure;
					public constructor(param0: string, param1: string, param2: com.paypal.pyplcheckout.pojo.Url, param3: string, param4: string, param5: string);
					public getParameter(): string;
					public equals(param0: any): boolean;
					public toString(): string;
					public component1(): string;
					public getExperience(): string;
					public component6(): string;
					public component4(): string;
					public hashCode(): number;
					public getMethod(): string;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class ThreeDsResolution {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ThreeDsResolution>;
					public getContingencyContext(): com.paypal.pyplcheckout.pojo.ThreeDSContingencyContext;
					public component2(): string;
					public constructor(param0: string, param1: string, param2: com.paypal.pyplcheckout.pojo.ThreeDSPaymentCardData, param3: com.paypal.pyplcheckout.pojo.ThreeDSContingencyContext);
					public getResolutionName(): string;
					public component3(): com.paypal.pyplcheckout.pojo.ThreeDSPaymentCardData;
					public equals(param0: any): boolean;
					public toString(): string;
					public component1(): string;
					public copy(param0: string, param1: string, param2: com.paypal.pyplcheckout.pojo.ThreeDSPaymentCardData, param3: com.paypal.pyplcheckout.pojo.ThreeDSContingencyContext): com.paypal.pyplcheckout.pojo.ThreeDsResolution;
					public getPaymentCard(): com.paypal.pyplcheckout.pojo.ThreeDSPaymentCardData;
					public getType(): string;
					public hashCode(): number;
					public component4(): com.paypal.pyplcheckout.pojo.ThreeDSContingencyContext;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class ThreeDsV1Data {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ThreeDsV1Data>;
					public getTransactionId(): string;
					public component2(): string;
					public component3(): string;
					public getRedirectURL(): string;
					public copy(param0: string, param1: string, param2: string, param3: string): com.paypal.pyplcheckout.pojo.ThreeDsV1Data;
					public equals(param0: any): boolean;
					public toString(): string;
					public constructor(param0: string, param1: string, param2: string, param3: string);
					public component1(): string;
					public getJwt(): string;
					public component4(): string;
					public hashCode(): number;
					public getPaymentAuthenticationRequest(): string;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class TrackingDetails {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.TrackingDetails>;
					public equals(param0: any): boolean;
					public toString(): string;
					public component2(): com.paypal.pyplcheckout.pojo.Url;
					public getClickUrl(): com.paypal.pyplcheckout.pojo.Url;
					public constructor();
					public getAdditionalProperties(): java.util.Map<string,any>;
					public copy(param0: com.paypal.pyplcheckout.pojo.Url, param1: com.paypal.pyplcheckout.pojo.Url, param2: java.util.Map<string,any>): com.paypal.pyplcheckout.pojo.TrackingDetails;
					public component1(): com.paypal.pyplcheckout.pojo.Url;
					public getDismissUrl(): com.paypal.pyplcheckout.pojo.Url;
					public hashCode(): number;
					public constructor(param0: com.paypal.pyplcheckout.pojo.Url, param1: com.paypal.pyplcheckout.pojo.Url, param2: java.util.Map<string,any>);
					public component3(): java.util.Map<string,any>;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class TransactionSession {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.TransactionSession>;
					public equals(param0: any): boolean;
					public copy(param0: number, param1: string, param2: string): com.paypal.pyplcheckout.pojo.TransactionSession;
					public toString(): string;
					public getEcToken(): string;
					public component2(): string;
					public getTimestamp(): number;
					public component1(): number;
					public constructor(param0: number, param1: string, param2: string);
					public component3(): string;
					public getButtonSessionId(): string;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class UpdateCurrencyConversionResponse {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.UpdateCurrencyConversionResponse>;
					public equals(param0: any): boolean;
					public copy(param0: com.paypal.pyplcheckout.pojo.Extensions): com.paypal.pyplcheckout.pojo.UpdateCurrencyConversionResponse;
					public toString(): string;
					public getExtensions(): com.paypal.pyplcheckout.pojo.Extensions;
					public component1(): com.paypal.pyplcheckout.pojo.Extensions;
					public hashCode(): number;
					public constructor(param0: com.paypal.pyplcheckout.pojo.Extensions);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class UpdatedShippingAddress {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.UpdatedShippingAddress>;
					public component2(): string;
					public getLine1(): string;
					public component3(): string;
					public getCountry(): string;
					public getState(): string;
					public copy(param0: string, param1: string, param2: string, param3: string): com.paypal.pyplcheckout.pojo.UpdatedShippingAddress;
					public equals(param0: any): boolean;
					public toString(): string;
					public constructor(param0: string, param1: string, param2: string, param3: string);
					public component1(): string;
					public component4(): string;
					public getPostalCode(): string;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class Url {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.Url>;
					public setHref(param0: string): void;
					public equals(param0: any): boolean;
					public toString(): string;
					public component1(): string;
					public getHref(): string;
					public component2(): java.util.Map<string,any>;
					public constructor();
					public getAdditionalProperties(): java.util.Map<string,any>;
					public hashCode(): number;
					public copy(param0: string, param1: java.util.Map<string,any>): com.paypal.pyplcheckout.pojo.Url;
					public constructor(param0: string, param1: java.util.Map<string,any>);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class User {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.User>;
					public component6(): com.paypal.pyplcheckout.pojo.ProfileImage;
					public copy(param0: string, param1: com.paypal.pyplcheckout.pojo.Name, param2: java.util.List<com.paypal.pyplcheckout.pojo.UserAddress>, param3: com.paypal.pyplcheckout.pojo.Locale, param4: com.paypal.pyplcheckout.pojo.Email, param5: com.paypal.pyplcheckout.pojo.ProfileImage, param6: java.util.Map<string,any>): com.paypal.pyplcheckout.pojo.User;
					public getName(): com.paypal.pyplcheckout.pojo.Name;
					public getUserInitials(): string;
					public toString(): string;
					public getFirstName(): string;
					public component7(): java.util.Map<string,any>;
					public setProfileImage(param0: com.paypal.pyplcheckout.pojo.ProfileImage): void;
					public component4(): com.paypal.pyplcheckout.pojo.Locale;
					public component3(): java.util.List<com.paypal.pyplcheckout.pojo.UserAddress>;
					public getEmailAddress(): string;
					public getUserId(): string;
					public hashCode(): number;
					public getUserPhotoUri(): string;
					public getLocale(): com.paypal.pyplcheckout.pojo.Locale;
					public component5(): com.paypal.pyplcheckout.pojo.Email;
					public getProfileImage(): com.paypal.pyplcheckout.pojo.ProfileImage;
					public getCountry(): string;
					public getLastName(): string;
					public constructor(param0: string, param1: com.paypal.pyplcheckout.pojo.Name, param2: java.util.List<com.paypal.pyplcheckout.pojo.UserAddress>, param3: com.paypal.pyplcheckout.pojo.Locale, param4: com.paypal.pyplcheckout.pojo.Email, param5: com.paypal.pyplcheckout.pojo.ProfileImage, param6: java.util.Map<string,any>);
					public getUserLocale(): string;
					public equals(param0: any): boolean;
					public component1(): string;
					public getEmail(): com.paypal.pyplcheckout.pojo.Email;
					public component2(): com.paypal.pyplcheckout.pojo.Name;
					public getAdditionalProperties(): java.util.Map<string,any>;
					public getAddresses(): java.util.List<com.paypal.pyplcheckout.pojo.UserAddress>;
					public getLanguage(): string;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class UserAddress {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.UserAddress>;
					public component2(): string;
					public component5(): string;
					public isDefaultShipping(): java.lang.Boolean;
					public isDefaultBilling(): java.lang.Boolean;
					public isPrimary(): java.lang.Boolean;
					public component10(): java.lang.Boolean;
					public toString(): string;
					public component8(): string;
					public component4(): string;
					public getPostalCode(): string;
					public getType(): string;
					public hashCode(): number;
					public component11(): java.lang.Boolean;
					public copy(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string, param7: string, param8: string, param9: java.lang.Boolean, param10: java.lang.Boolean, param11: java.lang.Boolean, param12: java.lang.Boolean): com.paypal.pyplcheckout.pojo.UserAddress;
					public getFullAddress(): string;
					public isSelected(): java.lang.Boolean;
					public component7(): string;
					public getLine1(): string;
					public component3(): string;
					public getCountry(): string;
					public getState(): string;
					public getCity(): string;
					public component12(): java.lang.Boolean;
					public equals(param0: any): boolean;
					public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string, param7: string, param8: string, param9: java.lang.Boolean, param10: java.lang.Boolean, param11: java.lang.Boolean, param12: java.lang.Boolean);
					public component1(): string;
					public getLine2(): string;
					public component6(): string;
					public component9(): string;
					public getAddressId(): string;
					public component13(): java.lang.Boolean;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class UserCheckoutResponse {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.UserCheckoutResponse>;
					public getData(): com.paypal.pyplcheckout.pojo.Data;
					public setData(param0: com.paypal.pyplcheckout.pojo.Data): void;
					public checkForUnSupportedFlows(): boolean;
					public constructor();
					public hasContingencyErrors(): boolean;
					public setErrors(param0: java.util.List<com.paypal.pyplcheckout.pojo.Error>): void;
					public getFirstError(): string;
					public hasUnsupportedContingencies(): boolean;
					public getErrors(): java.util.List<com.paypal.pyplcheckout.pojo.Error>;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class UserCheckoutResponse_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.pojo.UserCheckoutResponse> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.UserCheckoutResponse_Factory>;
					public static create(): com.paypal.pyplcheckout.pojo.UserCheckoutResponse_Factory;
					public constructor();
					public get(): com.paypal.pyplcheckout.pojo.UserCheckoutResponse;
					public static newInstance(): com.paypal.pyplcheckout.pojo.UserCheckoutResponse;
				}
				export module UserCheckoutResponse_Factory {
					export class InstanceHolder {
						public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.UserCheckoutResponse_Factory.InstanceHolder>;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class ValidateAddress {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ValidateAddress>;
					public equals(param0: any): boolean;
					public toString(): string;
					public getSuccess(): java.lang.Boolean;
					public constructor(param0: java.lang.Boolean);
					public copy(param0: java.lang.Boolean): com.paypal.pyplcheckout.pojo.ValidateAddress;
					public hashCode(): number;
					public component1(): java.lang.Boolean;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class ValidateAddressData {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ValidateAddressData>;
					public equals(param0: any): boolean;
					public toString(): string;
					public constructor(param0: com.paypal.pyplcheckout.pojo.ValidateAddress);
					public component1(): com.paypal.pyplcheckout.pojo.ValidateAddress;
					public getValidateAddress(): com.paypal.pyplcheckout.pojo.ValidateAddress;
					public copy(param0: com.paypal.pyplcheckout.pojo.ValidateAddress): com.paypal.pyplcheckout.pojo.ValidateAddressData;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class ValidateAddressError {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ValidateAddressError>;
					public equals(param0: any): boolean;
					public copy(param0: string, param1: java.util.List<string>, param2: java.util.List<com.paypal.pyplcheckout.pojo.ValidateAddressErrorField>): com.paypal.pyplcheckout.pojo.ValidateAddressError;
					public toString(): string;
					public component1(): string;
					public component3(): java.util.List<com.paypal.pyplcheckout.pojo.ValidateAddressErrorField>;
					public component2(): java.util.List<string>;
					public constructor();
					public getMessage(): string;
					public getPath(): java.util.List<string>;
					public getData(): java.util.List<com.paypal.pyplcheckout.pojo.ValidateAddressErrorField>;
					public hashCode(): number;
					public constructor(param0: string, param1: java.util.List<string>, param2: java.util.List<com.paypal.pyplcheckout.pojo.ValidateAddressErrorField>);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class ValidateAddressErrorField {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ValidateAddressErrorField>;
					public constructor(param0: string, param1: string);
					public equals(param0: any): boolean;
					public toString(): string;
					public getCode(): string;
					public component1(): string;
					public component2(): string;
					public copy(param0: string, param1: string): com.paypal.pyplcheckout.pojo.ValidateAddressErrorField;
					public getField(): string;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class ValidateAddressQueryParams {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ValidateAddressQueryParams>;
					public component2(): string;
					public component5(): string;
					public getCountryCode(): string;
					public getLine1(): string;
					public component3(): string;
					public getState(): string;
					public getCity(): string;
					public equals(param0: any): boolean;
					public copy(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string): com.paypal.pyplcheckout.pojo.ValidateAddressQueryParams;
					public toString(): string;
					public component1(): string;
					public getLine2(): string;
					public component6(): string;
					public component4(): string;
					public getPostalCode(): string;
					public hashCode(): number;
					public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class ValidateAddressResponse {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.ValidateAddressResponse>;
					public equals(param0: any): boolean;
					public toString(): string;
					public getData(): com.paypal.pyplcheckout.pojo.ValidateAddressData;
					public component1(): com.paypal.pyplcheckout.pojo.ValidateAddressData;
					public copy(param0: com.paypal.pyplcheckout.pojo.ValidateAddressData, param1: java.util.List<com.paypal.pyplcheckout.pojo.ValidateAddressError>, param2: com.paypal.pyplcheckout.pojo.Extensions): com.paypal.pyplcheckout.pojo.ValidateAddressResponse;
					public getExtensions(): com.paypal.pyplcheckout.pojo.Extensions;
					public component2(): java.util.List<com.paypal.pyplcheckout.pojo.ValidateAddressError>;
					public constructor(param0: com.paypal.pyplcheckout.pojo.ValidateAddressData, param1: java.util.List<com.paypal.pyplcheckout.pojo.ValidateAddressError>, param2: com.paypal.pyplcheckout.pojo.Extensions);
					public getErrors(): java.util.List<com.paypal.pyplcheckout.pojo.ValidateAddressError>;
					public hashCode(): number;
					public component3(): com.paypal.pyplcheckout.pojo.Extensions;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export class VaultData {
					public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.VaultData>;
					public constructor(param0: string, param1: string);
					public equals(param0: any): boolean;
					public getApprovalSessionID(): string;
					public toString(): string;
					public component1(): string;
					public component2(): string;
					public getApprovalTokenID(): string;
					public hashCode(): number;
					public copy(param0: string, param1: string): com.paypal.pyplcheckout.pojo.VaultData;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export module firebase {
					export class FirebaseMessageData extends com.paypal.pyplcheckout.pojo.firebase.MessageData {
						public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.firebase.FirebaseMessageData>;
						public setOrderId(param0: string): void;
						public getMessage(): string;
						public setMessage(param0: string): void;
						public constructor();
						public setButtonSessionId(param0: string): void;
						public setOpType(param0: string): void;
						public getToken(): string;
						public setBillingToken(param0: string): void;
						public getPayerId(): string;
						public setPaymentId(param0: string): void;
						public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string, param7: string);
						public setToken(param0: string): void;
						public setPayerId(param0: string): void;
						public getPaymentId(): string;
						public getBillingToken(): string;
						public getOrderId(): string;
						public getOpType(): string;
						public getButtonSessionId(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export module firebase {
					export class FirebaseProperties {
						public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.firebase.FirebaseProperties>;
						public getMessageUid(): string;
						public component5(): string;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public component9(): string;
						public component4(): string;
						public getMessageStatus(): string;
						public getTargetApp(): string;
						public getMessageName(): string;
						public component10(): com.paypal.pyplcheckout.pojo.firebase.MessageData;
						public component8(): string;
						public getRequestUid(): string;
						public component3(): string;
						public getMessageData(): com.paypal.pyplcheckout.pojo.firebase.MessageData;
						public getSessionUid(): string;
						public component7(): string;
						public copy(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string, param7: string, param8: string, param9: com.paypal.pyplcheckout.pojo.firebase.MessageData): com.paypal.pyplcheckout.pojo.firebase.FirebaseProperties;
						public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string, param7: string, param8: string, param9: com.paypal.pyplcheckout.pojo.firebase.MessageData);
						public getSourceApp(): string;
						public toString(): string;
						public component2(): string;
						public component6(): string;
						public getSourceAppVersion(): string;
						public getMessageType(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export module firebase {
					export class IndefiniteFallbackRequest extends com.paypal.pyplcheckout.pojo.firebase.MessageData {
						public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.firebase.IndefiniteFallbackRequest>;
						public setOrderId(param0: string): void;
						public getMessage(): string;
						public setMessage(param0: string): void;
						public setSkipNativeDuration(param0: java.lang.Long): void;
						public getType(): string;
						public setButtonSessionId(param0: string): void;
						public setOpType(param0: string): void;
						public setType(param0: string): void;
						public getToken(): string;
						public setBillingToken(param0: string): void;
						public getPayerId(): string;
						public setPaymentId(param0: string): void;
						public setToken(param0: string): void;
						public setPayerId(param0: string): void;
						public getPaymentId(): string;
						public getBillingToken(): string;
						public getSkipNativeDuration(): java.lang.Long;
						public getOrderId(): string;
						public getOpType(): string;
						public getButtonSessionId(): string;
						public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string, param7: string, param8: string, param9: java.lang.Long);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export module firebase {
					export class MessageData {
						public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.firebase.MessageData>;
						/**
						 * Constructs a new instance of the com.paypal.pyplcheckout.pojo.firebase.MessageData interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getOrderId(): string;
							setOrderId(param0: string): void;
							getOpType(): string;
							setOpType(param0: string): void;
							getPaymentId(): string;
							setPaymentId(param0: string): void;
							getBillingToken(): string;
							setBillingToken(param0: string): void;
							getPayerId(): string;
							setPayerId(param0: string): void;
							getToken(): string;
							setToken(param0: string): void;
							getMessage(): string;
							setMessage(param0: string): void;
							getButtonSessionId(): string;
							setButtonSessionId(param0: string): void;
						});
						public constructor();
						public setOrderId(param0: string): void;
						public getMessage(): string;
						public setMessage(param0: string): void;
						public setButtonSessionId(param0: string): void;
						public setOpType(param0: string): void;
						public getToken(): string;
						public setBillingToken(param0: string): void;
						public getPayerId(): string;
						public setPaymentId(param0: string): void;
						public setToken(param0: string): void;
						public setPayerId(param0: string): void;
						public getPaymentId(): string;
						public getBillingToken(): string;
						public getOrderId(): string;
						public getOpType(): string;
						public getButtonSessionId(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module pojo {
				export module firebase {
					export class ShippingDataRequest extends com.paypal.pyplcheckout.pojo.firebase.MessageData {
						public static class: java.lang.Class<com.paypal.pyplcheckout.pojo.firebase.ShippingDataRequest>;
						public getMessage(): string;
						public getShippingOptions(): java.util.List<com.paypal.checkout.order.Options>;
						public getShippingAddress(): org.json.JSONObject;
						public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: org.json.JSONObject, param6: string, param7: java.util.List<com.paypal.checkout.order.Options>, param8: string, param9: string, param10: string, param11: string, param12: string, param13: string, param14: string, param15: string);
						public getPaymentToken(): string;
						public getPostalCode(): string;
						public setOpType(param0: string): void;
						public setPostalCode(param0: string): void;
						public setBillingToken(param0: string): void;
						public setPaymentId(param0: string): void;
						public getState(): string;
						public getOrderId(): string;
						public getOpType(): string;
						public setSelectedShippingOptionAmount(param0: string): void;
						public setOrderId(param0: string): void;
						public setMessage(param0: string): void;
						public constructor();
						public setButtonSessionId(param0: string): void;
						public setShippingAddress(param0: org.json.JSONObject): void;
						public getToken(): string;
						public setCountry(param0: string): void;
						public getPayerId(): string;
						public getCountry(): string;
						public setPaymentToken(param0: string): void;
						public setToken(param0: string): void;
						public setLine1(param0: string): void;
						public setPayerId(param0: string): void;
						public getSelectedShippingOptionAmount(): string;
						public getPaymentId(): string;
						public getBillingToken(): string;
						public setShippingOptions(param0: java.util.List<com.paypal.checkout.order.Options>): void;
						public getLine1(): string;
						public getButtonSessionId(): string;
						public setState(param0: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module providerIntegration {
				export class ExtendedCheckoutConfig {
					public static class: java.lang.Class<com.paypal.pyplcheckout.providerIntegration.ExtendedCheckoutConfig>;
					public setHandleBlockingContingencies(param0: boolean): void;
					public setIsDebug(param0: boolean): void;
					public getCurrencyConversionContentPage(): com.paypal.pyplcheckout.navigation.ContentPage;
					public setStrongCustomerAuthStepUp(param0: com.paypal.pyplcheckout.sca.StrongCustomerAuthStepUp): void;
					public getProviderAuth(): com.paypal.pyplcheckout.auth.UserAuthentication;
					public setShouldFallBackToWeb(param0: boolean): void;
					public setCurrencyConversionContentPageListener(param0: com.paypal.pyplcheckout.conversionrate.model.ConversionRateViewListenerImpl): void;
					public setAddressBookContentPageListener(param0: com.paypal.pyplcheckout.addressbook.model.AddressBookViewListenerImpl): void;
					public setMerchantRedirectUrl(param0: globalAndroid.net.Uri): void;
					public getCheckoutSession(): com.paypal.pyplcheckout.pojo.CheckoutSession;
					public setReferrerPackage(param0: globalAndroid.net.Uri): void;
					public setPostReviewSDKIntercept(param0: com.paypal.pyplcheckout.interfaces.SDKInterceptor): void;
					public getContentRouter(): com.paypal.pyplcheckout.flavornavigation.ContentRouter;
					public getUserProfileContentPage(): com.paypal.pyplcheckout.navigation.ContentPage;
					public setPort(param0: string): void;
					public setEnabledElmoAbExperiment(param0: java.util.List<com.paypal.pyplcheckout.ab.elmo.ElmoAbExperiment>): void;
					public setShouldFailEligibilityCall(param0: boolean): void;
					public getThreeDSContentPage(): com.paypal.pyplcheckout.navigation.ContentPage;
					public getAddressBookContentPageListener(): com.paypal.pyplcheckout.addressbook.model.AddressBookViewListenerImpl;
					public getPostReviewSDKIntercept(): com.paypal.pyplcheckout.interfaces.SDKInterceptor;
					public setBillingAddress(param0: com.paypal.pyplcheckout.pojo.BillingAddressRequest): void;
					public setUserProfileContentPageListener(param0: com.paypal.pyplcheckout.userprofile.model.UserProfileViewListenerImpl): void;
					public setShippingAddress(param0: com.paypal.pyplcheckout.pojo.ShippingAddress): void;
					public getUpgradeAccessToken(): com.paypal.pyplcheckout.addcard.UpgradeAccessToken;
					public getPayMode(): com.paypal.pyplcheckout.services.Repository.PayModeEnum;
					public getApprovePaymentResponse(): com.paypal.pyplcheckout.pojo.ApprovePaymentResponse;
					public getEnvironment(): com.paypal.pyplcheckout.model.CheckoutEnvironment;
					public setAddressBookContentPage(param0: com.paypal.pyplcheckout.navigation.ContentPage): void;
					public shouldShowExitDialogWithRadioButtons(): boolean;
					public isEnableNativeAddCard(): boolean;
					public setStagingUrl(param0: string): void;
					public getCheckoutToken(): string;
					public setCurrencyConversionContentPage(param0: com.paypal.pyplcheckout.navigation.ContentPage): void;
					public setHomeContentPageListener(param0: com.paypal.pyplcheckout.home.model.HomeViewListenerImpl): void;
					public setThreeDSContentPage(param0: com.paypal.pyplcheckout.navigation.ContentPage): void;
					public setShouldUseBodyContainerPadding(param0: boolean): void;
					public getClientId(): string;
					public setClientId(param0: string): void;
					public setEnableNativeAddCard(param0: boolean): void;
					public setProviderAuth(param0: com.paypal.pyplcheckout.auth.UserAuthentication): void;
					/** @deprecated */
					public setShippingCallbacks(param0: com.paypal.pyplcheckout.merchantIntegration.ShippingCallbacks): void;
					public shouldDisableScrimBackground(): boolean;
					public setMerchantUrlScheme(param0: string): void;
					public getLoadingText(): string;
					public getMerchantRedirectUrl(): string;
					public getBillingAgreementTermsContentPage(): com.paypal.pyplcheckout.navigation.ContentPage;
					public setMerchantRedirectUrl(param0: string): void;
					public setMerchantRedirectUrlScheme(param0: string): void;
					public setShouldEnableBillingAgreements(param0: boolean): void;
					public getMerchantQueryParams(): androidNative.Array<string>;
					public getRateProtectionContentPageListener(): com.paypal.pyplcheckout.conversionrateprotection.model.RateProtectionViewListenerImpl;
					public shouldTurnOnFallbackExperiment(): boolean;
					public setCryptoConsentContentPage(param0: com.paypal.pyplcheckout.navigation.ContentPage): void;
					public getPostApproveSDKInterceptor(): com.paypal.pyplcheckout.interfaces.SDKInterceptor;
					public isDebug(): java.lang.Boolean;
					public setShippingMethodContentPage(param0: com.paypal.pyplcheckout.navigation.ContentPage): void;
					public setNativeCheckoutSSO(param0: com.paypal.pyplcheckout.auth.NativeCheckoutWebSSO): void;
					public getNativeCheckoutWebSSO(): com.paypal.pyplcheckout.auth.NativeCheckoutWebSSO;
					public getMerchantUrlScheme(): string;
					public getHomeContentPage(): com.paypal.pyplcheckout.navigation.ContentPage;
					public setShouldShowExitDialogWithRadioButtons(param0: boolean): void;
					public setPayPalEnvironment(param0: com.paypal.pyplcheckout.merchantIntegration.RunTimeEnvironment): void;
					public getStagingUrl(): string;
					public getThreeDSContentPageListener(): com.paypal.pyplcheckout.threeds.model.PayPalThreeDSV1ViewListenerImpl;
					public getHandleBlockingContingencies(): boolean;
					public getPayPalCheckoutCompleteListener(): com.paypal.pyplcheckout.interfaces.PayPalCheckoutCompleteListener;
					public setRateProtectionContentPage(param0: com.paypal.pyplcheckout.navigation.ContentPage): void;
					public getCurrencyCode(): string;
					public setThreeDSContentPageListener(param0: com.paypal.pyplcheckout.threeds.model.PayPalThreeDSV1ViewListenerImpl): void;
					public getCryptoConsentContentPageListener(): com.paypal.pyplcheckout.crypto.model.CryptoConsentViewListenerImpl;
					public setProductName(param0: string): void;
					public getProductName(): string;
					public clearInstance(): void;
					public setDcvv(param0: string): void;
					public getPreReviewSDKInterceptor(): com.paypal.pyplcheckout.interfaces.SDKInterceptor;
					public shouldEnableBillingAgreements(): boolean;
					public setContentRouter(param0: com.paypal.pyplcheckout.flavornavigation.ContentRouter): void;
					public getUserProfileContentPageListener(): com.paypal.pyplcheckout.userprofile.model.UserProfileViewListenerImpl;
					public setShippingMethodContentPageListener(param0: com.paypal.pyplcheckout.shippingmethods.model.ShippingMethodsViewListenerImpl): void;
					public setHomeContentPage(param0: com.paypal.pyplcheckout.navigation.ContentPage): void;
					public setPostApproveSDKInterceptor(param0: com.paypal.pyplcheckout.interfaces.SDKInterceptor): void;
					public getRateProtectionContentPage(): com.paypal.pyplcheckout.navigation.ContentPage;
					public shouldShowCloseButton(): boolean;
					public getReferrerPackage(): globalAndroid.net.Uri;
					public static getInstance(): com.paypal.pyplcheckout.providerIntegration.ExtendedCheckoutConfig;
					public getShippingMethodContentPage(): com.paypal.pyplcheckout.navigation.ContentPage;
					public setUpgradeAccessToken(param0: com.paypal.pyplcheckout.addcard.UpgradeAccessToken): void;
					public getHomeContentPageListener(): com.paypal.pyplcheckout.home.model.HomeViewListenerImpl;
					public setCurrencyCode(param0: string): void;
					public setPreReviewSDKInterceptor(param0: com.paypal.pyplcheckout.interfaces.SDKInterceptor): void;
					public getCurrencyConversionContentPageListener(): com.paypal.pyplcheckout.conversionrate.model.ConversionRateViewListenerImpl;
					public setABConfigurationRequested(param0: boolean): void;
					public getAddressBookContentPage(): com.paypal.pyplcheckout.navigation.ContentPage;
					public shouldUseBodyContainerPadding(): boolean;
					public getEnabledElmoAbExperiment(): java.util.List<com.paypal.pyplcheckout.ab.elmo.ElmoAbExperiment>;
					public setCryptoConsentContentPageListener(param0: com.paypal.pyplcheckout.crypto.model.CryptoConsentViewListenerImpl): void;
					public isABConfigurationRequested(): boolean;
					public setEnableShippingCallback(param0: boolean): void;
					public getShippingCallbacks(): com.paypal.pyplcheckout.merchantIntegration.ShippingCallbacks;
					public isShippingCallbackEnabled(): boolean;
					/** @deprecated */
					public setPayPalCheckoutCompleteListener(param0: com.paypal.pyplcheckout.interfaces.PayPalCheckoutCompleteListener): void;
					public shouldFailEligibilityCall(): boolean;
					public setShouldShowCloseButton(param0: boolean): void;
					public setMerchantQueryParams(param0: androidNative.Array<string>): void;
					public setUserProfileContentPage(param0: com.paypal.pyplcheckout.navigation.ContentPage): void;
					public getStrongCustomerAuthStepUp(): com.paypal.pyplcheckout.sca.StrongCustomerAuthStepUp;
					public getUser(): com.paypal.pyplcheckout.pojo.User;
					public getPayPalChannelInfo(): com.paypal.pyplcheckout.common.instrumentation.PEnums.PayPalChannelInfo;
					public getShippingMethodContentPageListener(): com.paypal.pyplcheckout.shippingmethods.model.ShippingMethodsViewListenerImpl;
					public shouldFallBackToWeb(): boolean;
					public getCryptoConsentContentPage(): com.paypal.pyplcheckout.navigation.ContentPage;
					public setShouldDisableScrimBackground(param0: boolean): void;
					public setLoadingText(param0: string): void;
					public setBillingAgreementTermsContentPage(param0: com.paypal.pyplcheckout.navigation.ContentPage): void;
					public setRateProtectionContentPageListener(param0: com.paypal.pyplcheckout.conversionrateprotection.model.RateProtectionViewListenerImpl): void;
				}
				export module ExtendedCheckoutConfig {
					export class StaticInnerSingleton {
						public static class: java.lang.Class<com.paypal.pyplcheckout.providerIntegration.ExtendedCheckoutConfig.StaticInnerSingleton>;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module sca {
				export class CompleteScaData {
					public static class: java.lang.Class<com.paypal.pyplcheckout.sca.CompleteScaData>;
					public equals(param0: any): boolean;
					public component1(): com.paypal.pyplcheckout.pojo.CheckoutSession;
					public copy(param0: com.paypal.pyplcheckout.pojo.CheckoutSession): com.paypal.pyplcheckout.sca.CompleteScaData;
					public toString(): string;
					public constructor(param0: com.paypal.pyplcheckout.pojo.CheckoutSession);
					public hashCode(): number;
					public getCompleteStrongCustomerAuthentication(): com.paypal.pyplcheckout.pojo.CheckoutSession;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module sca {
				export class CompleteScaResponse {
					public static class: java.lang.Class<com.paypal.pyplcheckout.sca.CompleteScaResponse>;
					public component2(): java.util.List<com.paypal.pyplcheckout.pojo.Error>;
					public equals(param0: any): boolean;
					public toString(): string;
					public copy(param0: com.paypal.pyplcheckout.sca.CompleteScaData, param1: java.util.List<com.paypal.pyplcheckout.pojo.Error>): com.paypal.pyplcheckout.sca.CompleteScaResponse;
					public constructor(param0: com.paypal.pyplcheckout.sca.CompleteScaData, param1: java.util.List<com.paypal.pyplcheckout.pojo.Error>);
					public getData(): com.paypal.pyplcheckout.sca.CompleteScaData;
					public component1(): com.paypal.pyplcheckout.sca.CompleteScaData;
					public hashCode(): number;
					public getErrors(): java.util.List<com.paypal.pyplcheckout.pojo.Error>;
					public isContingencyCleared(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module sca {
				export class CompleteStrongCustomerAuthenticationApi extends com.paypal.pyplcheckout.services.api.BaseApi {
					public static class: java.lang.Class<com.paypal.pyplcheckout.sca.CompleteStrongCustomerAuthenticationApi>;
					public constructor(param0: string);
					public constructor();
					public createService(): okhttp3.Request;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module sca {
				export abstract class CompleteStrongCustomerAuthenticationCallback extends com.paypal.pyplcheckout.services.callbacks.BaseCallback {
					public static class: java.lang.Class<com.paypal.pyplcheckout.sca.CompleteStrongCustomerAuthenticationCallback>;
					public onSaveCorrelationId(param0: string, param1: com.paypal.pyplcheckout.services.InternalCorrelationIds): com.paypal.pyplcheckout.services.InternalCorrelationIds;
					public onApiError(param0: java.lang.Exception): void;
					public constructor();
					public onApiSuccess(param0: string): void;
					public onSuccess(): void;
					public constructor(param0: globalAndroid.os.Handler);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module sca {
				export class ScaUiListener {
					public static class: java.lang.Class<com.paypal.pyplcheckout.sca.ScaUiListener>;
					/**
					 * Constructs a new instance of the com.paypal.pyplcheckout.sca.ScaUiListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onProgress(): void;
						onStrongAuthenticationComplete(): void;
						onContingencyCleared(): void;
						onCancelled(): void;
					});
					public constructor();
					public onProgress(): void;
					public onStrongAuthenticationComplete(): void;
					public onCancelled(): void;
					public onContingencyCleared(): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module sca {
				export class StrongCustomerAuthListener {
					public static class: java.lang.Class<com.paypal.pyplcheckout.sca.StrongCustomerAuthListener>;
					/**
					 * Constructs a new instance of the com.paypal.pyplcheckout.sca.StrongCustomerAuthListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onSuccess(param0: string, param1: java.util.Map<string,any>): void;
						onFailure(param0: java.lang.Exception, param1: string, param2: boolean): void;
					});
					public constructor();
					public onFailure(param0: java.lang.Exception, param1: string, param2: boolean): void;
					public onSuccess(param0: string, param1: java.util.Map<string,any>): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module sca {
				export class StrongCustomerAuthStepUp {
					public static class: java.lang.Class<com.paypal.pyplcheckout.sca.StrongCustomerAuthStepUp>;
					/**
					 * Constructs a new instance of the com.paypal.pyplcheckout.sca.StrongCustomerAuthStepUp interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						authStepUp(param0: string, param1: com.paypal.pyplcheckout.sca.StrongCustomerAuthListener): void;
					});
					public constructor();
					public authStepUp(param0: string, param1: com.paypal.pyplcheckout.sca.StrongCustomerAuthListener): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export class AddShippingApi {
					public static class: java.lang.Class<com.paypal.pyplcheckout.services.AddShippingApi>;
					public constructor(param0: string, param1: okhttp3.Request.Builder, param2: kotlinx.coroutines.CoroutineDispatcher, param3: okhttp3.OkHttpClient, param4: com.paypal.pyplcheckout.model.DebugConfigManager);
					public addShipping(param0: com.paypal.pyplcheckout.pojo.PortableShippingAddressRequest, param1: any): any;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export class ApiErrorException {
					public static class: java.lang.Class<com.paypal.pyplcheckout.services.ApiErrorException>;
					public constructor(param0: string);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export class BeaverLogger {
					public static class: java.lang.Class<com.paypal.pyplcheckout.services.BeaverLogger>;
					public static INSTANCE: com.paypal.pyplcheckout.services.BeaverLogger;
					public prettyLogger(param0: any): void;
					public getHeaders(): java.util.Map<string,string>;
					public userAgentCheck(): void;
					public immediateFlush(param0: org.json.JSONObject, param1: org.json.JSONObject, param2: com.paypal.pyplcheckout.services.api.LogApi): void;
					public track(param0: org.json.JSONObject, param1: com.paypal.pyplcheckout.services.api.LogApi): void;
					public logStartupInfo(param0: com.paypal.pyplcheckout.services.api.LogApi): void;
					public logAmplitude(param0: org.json.JSONObject, param1: java.lang.Exception, param2: string): void;
					public info(param0: string, param1: org.json.JSONObject, param2: com.paypal.pyplcheckout.services.api.LogApi): void;
					public getFPTIPayload(param0: org.json.JSONObject, param1: org.json.JSONObject): org.json.JSONObject;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export class CryptoRepository {
					public static class: java.lang.Class<com.paypal.pyplcheckout.services.CryptoRepository>;
					public fetchCryptoCurrencyQuotes(param0: org.json.JSONArray, param1: string, param2: com.paypal.pyplcheckout.services.callbacks.CryptoCurrencyQuoteCallback): void;
					public shouldShowCryptoCurrencyExchangeView(): boolean;
					public constructor(param0: com.paypal.pyplcheckout.services.Repository);
					public setCryptoQuotes(param0: java.util.List<com.paypal.pyplcheckout.pojo.CryptoCurrencyQuote>): void;
					public getCryptoQuotes(): java.util.List<com.paypal.pyplcheckout.pojo.CryptoCurrencyQuote>;
					public isCryptoCurrencyConsentAccepted(): boolean;
					public getCryptoQuote(): string;
					public getCryptoSymbol(): string;
					public setCryptoCurrencyConsentAccepted(param0: boolean): void;
					public getSelectedCryptoQuote(): com.paypal.pyplcheckout.pojo.CryptoCurrencyQuote;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export class CryptoRepository_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.services.CryptoRepository> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.services.CryptoRepository_Factory>;
					public get(): com.paypal.pyplcheckout.services.CryptoRepository;
					public static newInstance(param0: com.paypal.pyplcheckout.services.Repository): com.paypal.pyplcheckout.services.CryptoRepository;
					public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>): com.paypal.pyplcheckout.services.CryptoRepository_Factory;
					public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export class InternalCorrelationIds {
					public static class: java.lang.Class<com.paypal.pyplcheckout.services.InternalCorrelationIds>;
					public getFundingEligibilityDebugId(): string;
					public component2(): string;
					public component5(): string;
					public component7(): string;
					public component3(): string;
					public getApprovePaymentId(): string;
					public equals(param0: any): boolean;
					public getUpgradeLowScopeAccessTokenId(): string;
					public toString(): string;
					public component1(): string;
					public getUpdateClientConfigId(): string;
					public getUpdateCurrencyConversionTypeId(): string;
					public constructor();
					public component6(): string;
					public getCheckoutSessionId(): string;
					public component4(): string;
					public copy(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string): com.paypal.pyplcheckout.services.InternalCorrelationIds;
					public getMobileSDKEligibilityId(): string;
					public hashCode(): number;
					public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export class PYPL_FPTI {
					public static class: java.lang.Class<com.paypal.pyplcheckout.services.PYPL_FPTI>;
					public constructor();
					public static getInstance(): com.paypal.pyplcheckout.services.PYPL_FPTI;
					public fetchPayload(param0: string): org.json.JSONObject;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export class Repository {
					public static class: java.lang.Class<com.paypal.pyplcheckout.services.Repository>;
					public approvePayment(): void;
					public getSubtotal(): string;
					public setSmartPaymentButtonSessionId(param0: string): void;
					public getTotalISO(): string;
					public getListOfItemNames(): java.util.List<string>;
					public setLsatTokenUpgraded(param0: boolean): void;
					public getShippingDiscount(): string;
					public setSkipEligibility(param0: boolean): void;
					public completeSca(param0: com.paypal.pyplcheckout.sca.CompleteStrongCustomerAuthenticationCallback): void;
					public getInsurance(): string;
					public getBufCardText(): string;
					public getPaymentAuthenticationRequest(): string;
					public getSDKLaunchTime(): number;
					public getSelectedShippingMethod(): com.paypal.pyplcheckout.pojo.ShippingMethods;
					public getCheckoutSession(): com.paypal.pyplcheckout.pojo.CheckoutSession;
					public resetLsatToken(): void;
					public setButtonVersion(param0: string): void;
					public setReferrerPackage(param0: globalAndroid.net.Uri): void;
					public getTax(): string;
					public getListOfItemCosts(): java.util.List<string>;
					public setBillingAddress(param0: com.paypal.pyplcheckout.pojo.BillingAddressRequest): void;
					public setupFundingOptions(param0: java.util.List<com.paypal.pyplcheckout.pojo.FundingOption>, param1: string): void;
					public getConversionRateStr(): string;
					public getPreferredFundingOptionId(): string;
					public showShippingAddress(): boolean;
					public wasLsatTokenUpgraded(): boolean;
					public getToken(): string;
					public upgradeAccessToken(param0: any): any;
					public setSelectedAddressIndex(param0: number): void;
					public setUpFirebase(): void;
					public validateAddress(param0: com.paypal.pyplcheckout.pojo.ValidateAddressQueryParams, param1: any): any;
					public getTotalCurrencyCode(): string;
					public isSignUpEligible(): boolean;
					public setDebugConfigManager(param0: com.paypal.pyplcheckout.model.DebugConfigManager): void;
					public reset(): void;
					public getDcvv(): string;
					public fetchCancelURL(): void;
					public shouldShowShipping(): boolean;
					public getBillingAddress(): com.paypal.pyplcheckout.pojo.BillingAddressRequest;
					public getCreditPpcOffers(): java.util.List<com.paypal.pyplcheckout.pojo.CreditPPCOffer>;
					public setLsatToken(param0: string): void;
					public setIsPayPalConversionOptionShown(param0: boolean): void;
					public getShippingAndPickUpOptions(param0: com.paypal.pyplcheckout.pojo.ShippingMethodType): java.util.List<com.paypal.checkout.order.Options>;
					public setSelectedShippingMethod(param0: number, param1: com.paypal.pyplcheckout.pojo.ShippingMethodType): void;
					public deleteSelectedFundingOptionFromCheckoutSession(): void;
					public getMerchantOrderInfo(): com.paypal.checkout.order.Order;
					public getTransactionId(): string;
					public setSDKLaunchTime(param0: number): void;
					public initShippingMethods$pyplcheckout_externalThreedsRelease(): void;
					public getSmartPaymentButtonSessionId(): string;
					public setCorrelationIds(param0: com.paypal.pyplcheckout.services.InternalCorrelationIds): void;
					public setSelectedAddress(param0: com.paypal.pyplcheckout.pojo.ShippingAddress): void;
					public clearShippingData(): void;
					public upgradeAccessToken(param0: any, param1: any<any,any>): void;
					public getThreeDSProcessorTraceNumber(): string;
					public getSelectedAddressId(): string;
					public getSupportedContingencies(): com.paypal.pyplcheckout.pojo.PaymentContingencies;
					public setCheckoutToken(param0: string): void;
					public getCreditOfferText(): string;
					public getListOfItemQuantities(): java.util.List<string>;
					public isChangingShippingAddressAllowed(): java.lang.Boolean;
					public isCurrencyConverted(): boolean;
					public isContingencyCardIdCleared(param0: string): boolean;
					public setSelectedCurrencyConversionType(param0: com.paypal.pyplcheckout.utils.CurrencyConversionType): void;
					public setDcvv(param0: string): void;
					public addContingencyClearedCardId(param0: string): void;
					public getCardLabel(): string;
					public getSelectedCurrencyConversionType(): com.paypal.pyplcheckout.utils.CurrencyConversionType;
					public threeDSAuthenticate(param0: string, param1: com.paypal.pyplcheckout.pojo.ThreeDSLookupPayload, param2: string, param3: com.paypal.pyplcheckout.pojo.AmountInput, param4: any): any;
					public getReferrerPackage(): globalAndroid.net.Uri;
					public getReturnUrl(): string;
					public getTermLink(): string;
					public setSelectedFundingOption(param0: com.paypal.pyplcheckout.pojo.FundingOption): void;
					public setFundingOptions(param0: java.util.List<com.paypal.pyplcheckout.pojo.FundingOption>): void;
					public storeNewShippingAddress(param0: com.paypal.pyplcheckout.addshipping.model.Address): void;
					public getShippingAddressList(): java.util.List<com.paypal.pyplcheckout.pojo.ShippingAddress>;
					public isCctOpenedForAddingResources(): boolean;
					public setBuyerIPCountry(param0: string): void;
					public setFundingOptionsCarouselPosition(param0: number): void;
					public getCartItemsList(): java.util.List<com.paypal.pyplcheckout.pojo.Item>;
					public getSelectedFundingOptionType(): string;
					public getOrderId(): string;
					public parseUserAndCheckoutResponse(param0: com.paypal.pyplcheckout.pojo.UserCheckoutResponse, param1: com.paypal.pyplcheckout.interfaces.VmListensToRepoForUserAndCheckoutPayload): void;
					public getFundingOptionsCarouselPosition(): number;
					public getHasCryptoFundingInstruments(): boolean;
					public isSkipEligibility(): boolean;
					public getLastSelectedShippingMethodType(): com.paypal.pyplcheckout.pojo.ShippingMethodType;
					public setDBInstance(param0: string): void;
					public setUserSelectedPlan(param0: com.paypal.pyplcheckout.pojo.Plan): void;
					public shouldShow72HourText(): boolean;
					public setupFundingOptions(param0: java.util.List<com.paypal.pyplcheckout.pojo.FundingOption>): void;
					public setSelectedAddress(param0: number): void;
					public setVaultFlow(param0: boolean): void;
					public getSelectedFundingOption(): com.paypal.pyplcheckout.pojo.FundingOption;
					public setCheckoutSession(param0: com.paypal.pyplcheckout.pojo.CheckoutSession): void;
					public createPrincipalMap(param0: java.util.List<com.paypal.pyplcheckout.pojo.FundingOption>): void;
					public getUserSelectedPlanId(): string;
					public resetUser(): void;
					public setPreferredFundingOptionId(param0: string): void;
					public getFormattedConvertedAmount(): string;
					public getTotalFormat(): string;
					public getJsonMerchantOrderInfo(): org.json.JSONObject;
					public setCancelUrl(param0: string): void;
					public getSelectedAddressIndex(): number;
					public getFbSessionUid(): string;
					public getUserId(): string;
					public getOffersUrl(): string;
					public updateShippingAddressList(param0: java.util.List<com.paypal.pyplcheckout.pojo.ShippingAddress>): void;
					public getHostHandlesBlockingContingencies(): boolean;
					public getContingencyEventsModel(): com.paypal.pyplcheckout.events.model.ContingencyEventsModel;
					public setTransactionId(param0: string): void;
					public getTotalCurrencyValue(): string;
					public setPropsSet(param0: boolean): void;
					public setCurrencyConverted(param0: boolean): void;
					public setMerchantOrderInfo(param0: com.paypal.checkout.order.Order): void;
					public getSecondaryFundingOptionIds(): java.util.List<string>;
					public getTotalOverCaptureAmountValue(): string;
					public setJsonMerchantOrderInfo(param0: org.json.JSONObject): void;
					public getPayMode(): com.paypal.pyplcheckout.services.Repository.PayModeEnum;
					public getApprovePaymentResponse(): com.paypal.pyplcheckout.pojo.ApprovePaymentResponse;
					public getCancelUrl(): string;
					public getPaymentToken(): string;
					public setOrderId(param0: string): void;
					public setAddNewShippingAddressFlag(param0: boolean): void;
					public setCctOpenedForAddingResources(param0: boolean): void;
					public getOffers(): java.util.List<com.paypal.pyplcheckout.pojo.CreditPPCOffer>;
					public setSmartPaymentButtonStickinessId(param0: string): void;
					public getAddressAutoComplete(param0: com.paypal.pyplcheckout.addshipping.model.AddressAutoCompleteRequest, param1: any): any;
					public getCartCurrencyCode(): string;
					public getDebugConfigManager(): com.paypal.pyplcheckout.model.DebugConfigManager;
					public fetchLsatUpgradeStatus(param0: any<any,any>): void;
					public getFromConversionCode(): string;
					public setSelectedFundingOption(param0: number): void;
					public getScaContextId(): string;
					public performEligibility(): void;
					public getFundingOptions(): java.util.List<com.paypal.pyplcheckout.pojo.FundingOption>;
					public addCard(param0: com.paypal.pyplcheckout.pojo.AddCardQueryParams, param1: any): any;
					public getTotalOverCaptureAmount(): string;
					public isVaultFlow(): boolean;
					public shouldShowCurrencyConversion(): boolean;
					public getFundingSource(): string;
					public updateCheckoutSessionFundingOptions(param0: string, param1: boolean, param2: any): any;
					public getSupportedShippingMethodType(): com.paypal.pyplcheckout.pojo.ShippingMethodType;
					public getCurrencyValue(): string;
					public getTermsText(): string;
					public fetchUserCheckoutResponse(): void;
					public canConvertFI(): boolean;
					public getBackupFunding(): com.paypal.pyplcheckout.pojo.FundingInstrument;
					public setPaymentAuthenticationRequest(param0: string): void;
					public isSecondaryFundingOptionIdsExist(): boolean;
					public getAddressAutoCompletePlaceId(param0: com.paypal.pyplcheckout.addshipping.model.AddressAutoCompletePlaceIdRequest, param1: any): any;
					public setSupportedContingencies(param0: com.paypal.pyplcheckout.pojo.PaymentContingencies): void;
					public isVenmo(): boolean;
					public setThreeDSProcessorTraceNumber(param0: string): void;
					public setLastSelectedShippingMethodType(param0: com.paypal.pyplcheckout.pojo.ShippingMethodType): void;
					public getToConversionCode(): string;
					public addInvalidShippingAddress(): void;
					public getListOfItemDescriptions(): java.util.List<java.util.List<com.paypal.pyplcheckout.home.view.customviews.productviews.ProductDescription>>;
					public getPropsSet(): boolean;
					public setStartupMechanism(param0: string): void;
					public getCorrelationIds(): com.paypal.pyplcheckout.services.InternalCorrelationIds;
					public getBillingAddresses(): java.util.List<com.paypal.pyplcheckout.pojo.BillingAddress>;
					public setHostHandlesBlockingContingencies(param0: boolean): void;
					public resetPayMode(): void;
					public setContingencyEventsModel(param0: com.paypal.pyplcheckout.events.model.ContingencyEventsModel): void;
					public getShowCloseButton(): boolean;
					public constructor(param0: com.paypal.pyplcheckout.pojo.UserCheckoutResponse, param1: com.paypal.pyplcheckout.model.DebugConfigManager, param2: com.paypal.pyplcheckout.fundingOptions.dao.FundingOptionsDao, param3: com.paypal.pyplcheckout.userprofile.dao.UserDao, param4: dagger.Lazy<com.paypal.pyplcheckout.services.callbacks.ApprovePaymentCallback>, param5: dagger.Lazy<com.paypal.pyplcheckout.services.callbacks.UpdateCurrencyConversionCallback>, param6: dagger.Lazy<com.paypal.pyplcheckout.merchant.MagnusCorrelationIdUseCase>);
					public getButtonVersion(): string;
					public getStartupMechanism(): string;
					public getSelectedAddress(): com.paypal.pyplcheckout.pojo.ShippingAddress;
					public getBuyerIPCountry(): string;
					public getSelectedMethodOption(param0: com.paypal.pyplcheckout.pojo.ShippingMethodType): com.paypal.pyplcheckout.pojo.ShippingMethods;
					public setFundingSource(param0: string): void;
					public getSupportedFundingSources(): java.util.List<com.paypal.pyplcheckout.pojo.SupportedFundingSources>;
					public getLsatToken(): string;
					public updateClientConfig(): void;
					public setFbSessionUid(param0: string): void;
					public isStickyBillingAllowed(): java.lang.Boolean;
					public updatePrincipalFundingOptionMap(param0: java.util.Map<string,com.paypal.pyplcheckout.model.MapItem>): void;
					public getShippingAndHandling(): string;
					public getPickUpMethodsList(): java.util.List<com.paypal.pyplcheckout.pojo.ShippingMethods>;
					public getSelectedCardContingencies(): com.paypal.pyplcheckout.pojo.PaymentContingencies;
					public setStage(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.Stage): void;
					public getDBInstance(): string;
					public getSelectedMethodOptionIndex(param0: com.paypal.pyplcheckout.pojo.ShippingMethodType): number;
					public getSmartPaymentButtonStickinessId(): string;
					public isPayPalConversionOptionShown(): boolean;
					public setCallToActionState(param0: com.paypal.pyplcheckout.services.Repository.CTAState): void;
					public setToken(param0: string): void;
					public isAddNewShippingAddress(): boolean;
					public setReturnUrl(param0: string): void;
					public getShippingMethodsList(): java.util.List<com.paypal.pyplcheckout.pojo.ShippingMethods>;
					public getCallToActionState(): com.paypal.pyplcheckout.services.Repository.CTAState;
					public allowShippingAddressChange(): boolean;
					public setApprovePaymentResponse(param0: com.paypal.pyplcheckout.pojo.ApprovePaymentResponse): void;
					public setPayMode(param0: com.paypal.pyplcheckout.services.Repository.PayModeEnum): void;
					public getMagnusCorrelationIdUseCase(): dagger.Lazy<com.paypal.pyplcheckout.merchant.MagnusCorrelationIdUseCase>;
					public getPrimaryFundingOptionId(): string;
					public getUser(): com.paypal.pyplcheckout.pojo.User;
					public isPrimaryFundingOptionIdExist(): boolean;
					public getStage(): com.paypal.pyplcheckout.common.instrumentation.PEnums.Stage;
					public getCart(): com.paypal.pyplcheckout.pojo.Cart;
				}
				export module Repository {
					export class CTAState {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.Repository.CTAState>;
						public static PAY: com.paypal.pyplcheckout.services.Repository.CTAState;
						public static APPLY_FOR_CREDIT: com.paypal.pyplcheckout.services.Repository.CTAState;
						public static ADD_CARD: com.paypal.pyplcheckout.services.Repository.CTAState;
						public static values(): androidNative.Array<com.paypal.pyplcheckout.services.Repository.CTAState>;
						public static valueOf(param0: string): com.paypal.pyplcheckout.services.Repository.CTAState;
					}
					export class Companion {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.Repository.Companion>;
					}
					export class PayModeEnum {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.Repository.PayModeEnum>;
						public static CONTINUE: com.paypal.pyplcheckout.services.Repository.PayModeEnum;
						public static PAY_NOW: com.paypal.pyplcheckout.services.Repository.PayModeEnum;
						public static valueOf(param0: string): com.paypal.pyplcheckout.services.Repository.PayModeEnum;
						public static values(): androidNative.Array<com.paypal.pyplcheckout.services.Repository.PayModeEnum>;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export class Repository_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.services.Repository> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.services.Repository_Factory>;
					public static newInstance(param0: com.paypal.pyplcheckout.pojo.UserCheckoutResponse, param1: com.paypal.pyplcheckout.model.DebugConfigManager, param2: com.paypal.pyplcheckout.fundingOptions.dao.FundingOptionsDao, param3: com.paypal.pyplcheckout.userprofile.dao.UserDao, param4: dagger.Lazy<com.paypal.pyplcheckout.services.callbacks.ApprovePaymentCallback>, param5: dagger.Lazy<com.paypal.pyplcheckout.services.callbacks.UpdateCurrencyConversionCallback>, param6: dagger.Lazy<com.paypal.pyplcheckout.merchant.MagnusCorrelationIdUseCase>): com.paypal.pyplcheckout.services.Repository;
					public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.pojo.UserCheckoutResponse>, param1: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>, param2: javax.inject.Provider<com.paypal.pyplcheckout.fundingOptions.dao.FundingOptionsDao>, param3: javax.inject.Provider<com.paypal.pyplcheckout.userprofile.dao.UserDao>, param4: javax.inject.Provider<com.paypal.pyplcheckout.services.callbacks.ApprovePaymentCallback>, param5: javax.inject.Provider<com.paypal.pyplcheckout.services.callbacks.UpdateCurrencyConversionCallback>, param6: javax.inject.Provider<com.paypal.pyplcheckout.merchant.MagnusCorrelationIdUseCase>): com.paypal.pyplcheckout.services.Repository_Factory;
					public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.pojo.UserCheckoutResponse>, param1: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>, param2: javax.inject.Provider<com.paypal.pyplcheckout.fundingOptions.dao.FundingOptionsDao>, param3: javax.inject.Provider<com.paypal.pyplcheckout.userprofile.dao.UserDao>, param4: javax.inject.Provider<com.paypal.pyplcheckout.services.callbacks.ApprovePaymentCallback>, param5: javax.inject.Provider<com.paypal.pyplcheckout.services.callbacks.UpdateCurrencyConversionCallback>, param6: javax.inject.Provider<com.paypal.pyplcheckout.merchant.MagnusCorrelationIdUseCase>);
					public get(): com.paypal.pyplcheckout.services.Repository;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module api {
					export class AddCardApi {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.api.AddCardApi>;
						public constructor(param0: string, param1: okhttp3.Request.Builder, param2: kotlinx.coroutines.CoroutineDispatcher, param3: okhttp3.OkHttpClient, param4: com.paypal.pyplcheckout.model.DebugConfigManager);
						public addCard(param0: com.paypal.pyplcheckout.pojo.AddCardQueryParams, param1: any): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module api {
					export class AddCardThreeDsApi {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.api.AddCardThreeDsApi>;
						public getAccessToken(): string;
						public constructor(param0: string);
						public updateCheckoutSessionFundingOptions(param0: string, param1: string, param2: boolean, param3: any): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module api {
					export class AddShippingAddressApi extends com.paypal.pyplcheckout.services.api.BaseApi {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.api.AddShippingAddressApi>;
						public constructor();
						public setShippingAddressRequest(param0: com.paypal.pyplcheckout.pojo.NewShippingAddressRequest): void;
						public createService(): okhttp3.Request;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module api {
					export class AddressValidationApi {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.api.AddressValidationApi>;
						public validateAddress(param0: com.paypal.pyplcheckout.pojo.PortableShippingAddressRequest, param1: any): any;
						public constructor(param0: string, param1: okhttp3.Request.Builder, param2: kotlinx.coroutines.CoroutineDispatcher, param3: okhttp3.OkHttpClient);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module api {
					export class ApproveMemberPaymentApi extends com.paypal.pyplcheckout.services.api.BaseApi {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.api.ApproveMemberPaymentApi>;
						public constructor();
						public constructor(param0: string, param1: okhttp3.Request.Builder, param2: com.paypal.pyplcheckout.billingagreements.usecase.BillingAgreementsGetBalancePrefUseCase);
						public createService(): okhttp3.Request;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module api {
					export abstract class BaseApi {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.api.BaseApi>;
						public constructor();
						public enqueueRequest(param0: com.paypal.pyplcheckout.services.callbacks.BaseCallback): void;
						public createService(): okhttp3.Request;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module api {
					export class CancelUrlApi extends com.paypal.pyplcheckout.services.api.BaseApi {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.api.CancelUrlApi>;
						public constructor();
						public static get(): com.paypal.pyplcheckout.services.api.CancelUrlApi;
						public createService(): okhttp3.Request;
					}
					export module CancelUrlApi {
						export class Companion {
							public static class: java.lang.Class<com.paypal.pyplcheckout.services.api.CancelUrlApi.Companion>;
							public get(): com.paypal.pyplcheckout.services.api.CancelUrlApi;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module api {
					export class ClientConfigUpdateApi extends com.paypal.pyplcheckout.services.api.BaseApi {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.api.ClientConfigUpdateApi>;
						public constructor();
						public constructor(param0: okhttp3.Request.Builder);
						public createService(): okhttp3.Request;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module api {
					export class CryptoCurrencyApi extends com.paypal.pyplcheckout.services.api.BaseApi {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.api.CryptoCurrencyApi>;
						public setSymbols(param0: org.json.JSONArray): void;
						public constructor();
						public createService(): okhttp3.Request;
						public constructor(param0: string);
						public setCurrencyValue(param0: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module api {
					export class CryptoQuoteTimer extends com.paypal.pyplcheckout.services.api.ICryptoQuoteTimer {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.api.CryptoQuoteTimer>;
						public start(param0: number): void;
						public getWaiting$pyplcheckout_externalThreedsRelease(): boolean;
						public constructor(param0: com.paypal.pyplcheckout.services.Repository, param1: com.paypal.pyplcheckout.services.CryptoRepository, param2: com.paypal.pyplcheckout.events.Events);
						public handleResponse(param0: com.paypal.pyplcheckout.pojo.CryptoQuoteResponse): void;
						public fetchResponse(): void;
						public setWaiting$pyplcheckout_externalThreedsRelease(param0: boolean): void;
						public stop(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module api {
					export class CryptoQuoteTimer_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.services.api.CryptoQuoteTimer> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.api.CryptoQuoteTimer_Factory>;
						public get(): com.paypal.pyplcheckout.services.api.CryptoQuoteTimer;
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param1: javax.inject.Provider<com.paypal.pyplcheckout.services.CryptoRepository>, param2: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>): com.paypal.pyplcheckout.services.api.CryptoQuoteTimer_Factory;
						public static newInstance(param0: com.paypal.pyplcheckout.services.Repository, param1: com.paypal.pyplcheckout.services.CryptoRepository, param2: com.paypal.pyplcheckout.events.Events): com.paypal.pyplcheckout.services.api.CryptoQuoteTimer;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param1: javax.inject.Provider<com.paypal.pyplcheckout.services.CryptoRepository>, param2: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module api {
					export class EligibilityApi extends com.paypal.pyplcheckout.services.api.BaseApi {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.api.EligibilityApi>;
						public constructor();
						public createService(): okhttp3.Request;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module api {
					export class FirebaseTokenApi extends com.paypal.pyplcheckout.services.api.BaseApi {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.api.FirebaseTokenApi>;
						public constructor();
						public createService(): okhttp3.Request;
						public static get(): com.paypal.pyplcheckout.services.api.FirebaseTokenApi;
					}
					export module FirebaseTokenApi {
						export class Companion {
							public static class: java.lang.Class<com.paypal.pyplcheckout.services.api.FirebaseTokenApi.Companion>;
							public get(): com.paypal.pyplcheckout.services.api.FirebaseTokenApi;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module api {
					export class ICryptoQuoteTimer {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.api.ICryptoQuoteTimer>;
						/**
						 * Constructs a new instance of the com.paypal.pyplcheckout.services.api.ICryptoQuoteTimer interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							start(param0: number): void;
							fetchResponse(): void;
							handleResponse(param0: com.paypal.pyplcheckout.pojo.CryptoQuoteResponse): void;
							stop(): void;
						});
						public constructor();
						public start(param0: number): void;
						public handleResponse(param0: com.paypal.pyplcheckout.pojo.CryptoQuoteResponse): void;
						public fetchResponse(): void;
						public stop(): void;
					}
					export module ICryptoQuoteTimer {
						export class DefaultImpls {
							public static class: java.lang.Class<com.paypal.pyplcheckout.services.api.ICryptoQuoteTimer.DefaultImpls>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module api {
					export class LocaleMetadataApi {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.api.LocaleMetadataApi>;
						public constructor(param0: okhttp3.Request.Builder, param1: kotlinx.coroutines.CoroutineDispatcher, param2: okhttp3.OkHttpClient, param3: java.util.Locale);
						public execute(param0: com.paypal.pyplcheckout.addressvalidation.request.LocaleMetadataRequest, param1: any): any;
					}
					export module LocaleMetadataApi {
						export class Companion {
							public static class: java.lang.Class<com.paypal.pyplcheckout.services.api.LocaleMetadataApi.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module api {
					export class LocaleMetadataApi_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.services.api.LocaleMetadataApi> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.api.LocaleMetadataApi_Factory>;
						public static create(param0: javax.inject.Provider<okhttp3.Request.Builder>, param1: javax.inject.Provider<kotlinx.coroutines.CoroutineDispatcher>, param2: javax.inject.Provider<okhttp3.OkHttpClient>, param3: javax.inject.Provider<java.util.Locale>): com.paypal.pyplcheckout.services.api.LocaleMetadataApi_Factory;
						public static newInstance(param0: okhttp3.Request.Builder, param1: kotlinx.coroutines.CoroutineDispatcher, param2: okhttp3.OkHttpClient, param3: java.util.Locale): com.paypal.pyplcheckout.services.api.LocaleMetadataApi;
						public get(): com.paypal.pyplcheckout.services.api.LocaleMetadataApi;
						public constructor(param0: javax.inject.Provider<okhttp3.Request.Builder>, param1: javax.inject.Provider<kotlinx.coroutines.CoroutineDispatcher>, param2: javax.inject.Provider<okhttp3.OkHttpClient>, param3: javax.inject.Provider<java.util.Locale>);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module api {
					export class LogApi extends com.paypal.pyplcheckout.services.api.BaseApi {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.api.LogApi>;
						public setRequest(param0: com.paypal.pyplcheckout.pojo.BeaverLoggerRequest): void;
						public constructor();
						public static get(): com.paypal.pyplcheckout.services.api.LogApi;
						public createService(): okhttp3.Request;
					}
					export module LogApi {
						export class Companion {
							public static class: java.lang.Class<com.paypal.pyplcheckout.services.api.LogApi.Companion>;
							public get(): com.paypal.pyplcheckout.services.api.LogApi;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module api {
					export class LsatUpgradeApi extends com.paypal.pyplcheckout.services.api.BaseApi {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.api.LsatUpgradeApi>;
						public constructor();
						public enqueueRequest(param0: com.paypal.pyplcheckout.services.callbacks.BaseCallback): void;
						public createService(): okhttp3.Request;
						public constructor(param0: string);
					}
					export module LsatUpgradeApi {
						export class Companion {
							public static class: java.lang.Class<com.paypal.pyplcheckout.services.api.LsatUpgradeApi.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module api {
					export class NetworkObject {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.api.NetworkObject>;
						public static INSTANCE: com.paypal.pyplcheckout.services.api.NetworkObject;
						public getOkHttpClient(): okhttp3.OkHttpClient;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module api {
					export class ThreeDSAuthenticateApi {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.api.ThreeDSAuthenticateApi>;
						public authenticate(param0: string, param1: com.paypal.pyplcheckout.pojo.ThreeDSLookupPayload, param2: string, param3: com.paypal.pyplcheckout.pojo.AmountInput, param4: any): any;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module api {
					export class ThreeDSJwtApi {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.api.ThreeDSJwtApi>;
						public getThreeDSJwt(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string, param7: string, param8: any): any;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module api {
					export class ThreeDSLookUpApi {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.api.ThreeDSLookUpApi>;
						public getThreeDSLookupResponse(param0: com.paypal.pyplcheckout.pojo.ThreeDSLookupPayload, param1: com.paypal.pyplcheckout.pojo.AmountInput, param2: string, param3: string, param4: any): any;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module api {
					export class ThreeDSResolveContingencyApi {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.api.ThreeDSResolveContingencyApi>;
						public resolveContingency(param0: string, param1: string, param2: string, param3: com.paypal.pyplcheckout.pojo.ResolveThreeDsContingencyStatus, param4: string, param5: any): any;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module api {
					export class UpdateCurrencyConversionApi extends com.paypal.pyplcheckout.services.api.BaseApi {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.api.UpdateCurrencyConversionApi>;
						public constructor();
						public createService(): okhttp3.Request;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module api {
					export class UpdateOrdersApi extends com.paypal.pyplcheckout.services.api.BaseApi {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.api.UpdateOrdersApi>;
						public constructor(param0: string, param1: string, param2: java.util.List<com.paypal.checkout.order.PurchaseUnit>);
						public constructor();
						public static get(param0: string, param1: string, param2: java.util.List<com.paypal.checkout.order.PurchaseUnit>): com.paypal.pyplcheckout.services.api.UpdateOrdersApi;
						public createService(): okhttp3.Request;
					}
					export module UpdateOrdersApi {
						export class Companion {
							public static class: java.lang.Class<com.paypal.pyplcheckout.services.api.UpdateOrdersApi.Companion>;
							public get(param0: string, param1: string, param2: java.util.List<com.paypal.checkout.order.PurchaseUnit>): com.paypal.pyplcheckout.services.api.UpdateOrdersApi;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module api {
					export class UserAndCheckoutApi extends com.paypal.pyplcheckout.services.api.BaseApi {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.api.UserAndCheckoutApi>;
						public constructor();
						public createService(): okhttp3.Request;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module api {
					export class ValidateAddressApi {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.api.ValidateAddressApi>;
						public validateAddress(param0: com.paypal.pyplcheckout.pojo.ValidateAddressQueryParams, param1: any): any;
						public constructor(param0: string, param1: okhttp3.Request.Builder, param2: kotlinx.coroutines.CoroutineDispatcher, param3: okhttp3.OkHttpClient);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module api {
					export module factory {
						export class AuthenticatedApiFactory<T>  extends java.lang.Object {
							public static class: java.lang.Class<com.paypal.pyplcheckout.services.api.factory.AuthenticatedApiFactory<any>>;
							public static getCompleteStrongCustomerAuthenticationApiFactory(): com.paypal.pyplcheckout.services.api.factory.AuthenticatedApiFactory<com.paypal.pyplcheckout.sca.CompleteStrongCustomerAuthenticationApi>;
							public static getUserAndCheckoutApiFactory(): com.paypal.pyplcheckout.services.api.factory.AuthenticatedApiFactory<com.paypal.pyplcheckout.services.api.UserAndCheckoutApi>;
							public static getAddressValidationApiFactory(): com.paypal.pyplcheckout.services.api.factory.AuthenticatedApiFactory<com.paypal.pyplcheckout.services.api.AddressValidationApi>;
							public constructor(param0: string, param1: any<any,any>);
							public static getLsatUpgradeApiFactory(): com.paypal.pyplcheckout.services.api.factory.AuthenticatedApiFactory<com.paypal.pyplcheckout.services.api.LsatUpgradeApi>;
							public static getEligibilityApiFactory(): com.paypal.pyplcheckout.services.api.factory.AuthenticatedApiFactory<com.paypal.pyplcheckout.services.api.EligibilityApi>;
							public static getThreeDSJwtApiFactory(): com.paypal.pyplcheckout.services.api.factory.AuthenticatedApiFactory<com.paypal.pyplcheckout.services.api.ThreeDSJwtApi>;
							public static getAddressAutoCompleteApiFactory(): com.paypal.pyplcheckout.services.api.factory.AuthenticatedApiFactory<com.paypal.pyplcheckout.addshipping.api.AddressAutoCompleteApi>;
							public static initializeFactories(param0: string): void;
							public static getThreeDSResolveContingencyApiFactory(): com.paypal.pyplcheckout.services.api.factory.AuthenticatedApiFactory<com.paypal.pyplcheckout.services.api.ThreeDSResolveContingencyApi>;
							public static getAddCardApiFactory(): com.paypal.pyplcheckout.services.api.factory.AuthenticatedApiFactory<com.paypal.pyplcheckout.services.api.AddCardApi>;
							public static getAddressAutoCompletePlaceIdApiFactory(): com.paypal.pyplcheckout.services.api.factory.AuthenticatedApiFactory<com.paypal.pyplcheckout.addshipping.api.AddressAutoCompletePlaceIdApi>;
							public static getThreeDSLookUpApiFactory(): com.paypal.pyplcheckout.services.api.factory.AuthenticatedApiFactory<com.paypal.pyplcheckout.services.api.ThreeDSLookUpApi>;
							public static getApproveMemberPaymentApiFactory(): com.paypal.pyplcheckout.services.api.factory.AuthenticatedApiFactory<com.paypal.pyplcheckout.services.api.ApproveMemberPaymentApi>;
							public static getValidateAddressApiFactory(): com.paypal.pyplcheckout.services.api.factory.AuthenticatedApiFactory<com.paypal.pyplcheckout.services.api.ValidateAddressApi>;
							public static getCryptocurrencyApiFactory(): com.paypal.pyplcheckout.services.api.factory.AuthenticatedApiFactory<com.paypal.pyplcheckout.services.api.CryptoCurrencyApi>;
							public static getAddShippingAddressApiFactory(): com.paypal.pyplcheckout.services.api.factory.AuthenticatedApiFactory<com.paypal.pyplcheckout.services.api.AddShippingAddressApi>;
							public create(): T;
							public static getAddShippingApiFactory(): com.paypal.pyplcheckout.services.api.factory.AuthenticatedApiFactory<com.paypal.pyplcheckout.services.AddShippingApi>;
							public static getAddCardThreeDsApiFactory(): com.paypal.pyplcheckout.services.api.factory.AuthenticatedApiFactory<com.paypal.pyplcheckout.services.api.AddCardThreeDsApi>;
							public static getThreeDSAuthenticateApiFactory(): com.paypal.pyplcheckout.services.api.factory.AuthenticatedApiFactory<com.paypal.pyplcheckout.services.api.ThreeDSAuthenticateApi>;
							public static getUpdateCurrencyConversionApiFactory(): com.paypal.pyplcheckout.services.api.factory.AuthenticatedApiFactory<com.paypal.pyplcheckout.services.api.UpdateCurrencyConversionApi>;
						}
						export module AuthenticatedApiFactory {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.services.api.factory.AuthenticatedApiFactory.Companion>;
								public getAddShippingAddressApiFactory(): com.paypal.pyplcheckout.services.api.factory.AuthenticatedApiFactory<com.paypal.pyplcheckout.services.api.AddShippingAddressApi>;
								public getAddressAutoCompletePlaceIdApiFactory(): com.paypal.pyplcheckout.services.api.factory.AuthenticatedApiFactory<com.paypal.pyplcheckout.addshipping.api.AddressAutoCompletePlaceIdApi>;
								public getAddShippingApiFactory(): com.paypal.pyplcheckout.services.api.factory.AuthenticatedApiFactory<com.paypal.pyplcheckout.services.AddShippingApi>;
								public getApproveMemberPaymentApiFactory(): com.paypal.pyplcheckout.services.api.factory.AuthenticatedApiFactory<com.paypal.pyplcheckout.services.api.ApproveMemberPaymentApi>;
								public getUserAndCheckoutApiFactory(): com.paypal.pyplcheckout.services.api.factory.AuthenticatedApiFactory<com.paypal.pyplcheckout.services.api.UserAndCheckoutApi>;
								public getCompleteStrongCustomerAuthenticationApiFactory(): com.paypal.pyplcheckout.services.api.factory.AuthenticatedApiFactory<com.paypal.pyplcheckout.sca.CompleteStrongCustomerAuthenticationApi>;
								public getThreeDSJwtApiFactory(): com.paypal.pyplcheckout.services.api.factory.AuthenticatedApiFactory<com.paypal.pyplcheckout.services.api.ThreeDSJwtApi>;
								public getValidateAddressApiFactory(): com.paypal.pyplcheckout.services.api.factory.AuthenticatedApiFactory<com.paypal.pyplcheckout.services.api.ValidateAddressApi>;
								public initializeFactories(param0: string): void;
								public getThreeDSResolveContingencyApiFactory(): com.paypal.pyplcheckout.services.api.factory.AuthenticatedApiFactory<com.paypal.pyplcheckout.services.api.ThreeDSResolveContingencyApi>;
								public getAddCardThreeDsApiFactory(): com.paypal.pyplcheckout.services.api.factory.AuthenticatedApiFactory<com.paypal.pyplcheckout.services.api.AddCardThreeDsApi>;
								public getAddCardApiFactory(): com.paypal.pyplcheckout.services.api.factory.AuthenticatedApiFactory<com.paypal.pyplcheckout.services.api.AddCardApi>;
								public getLsatUpgradeApiFactory(): com.paypal.pyplcheckout.services.api.factory.AuthenticatedApiFactory<com.paypal.pyplcheckout.services.api.LsatUpgradeApi>;
								public getEligibilityApiFactory(): com.paypal.pyplcheckout.services.api.factory.AuthenticatedApiFactory<com.paypal.pyplcheckout.services.api.EligibilityApi>;
								public getAddressAutoCompleteApiFactory(): com.paypal.pyplcheckout.services.api.factory.AuthenticatedApiFactory<com.paypal.pyplcheckout.addshipping.api.AddressAutoCompleteApi>;
								public getCryptocurrencyApiFactory(): com.paypal.pyplcheckout.services.api.factory.AuthenticatedApiFactory<com.paypal.pyplcheckout.services.api.CryptoCurrencyApi>;
								public getThreeDSAuthenticateApiFactory(): com.paypal.pyplcheckout.services.api.factory.AuthenticatedApiFactory<com.paypal.pyplcheckout.services.api.ThreeDSAuthenticateApi>;
								public getUpdateCurrencyConversionApiFactory(): com.paypal.pyplcheckout.services.api.factory.AuthenticatedApiFactory<com.paypal.pyplcheckout.services.api.UpdateCurrencyConversionApi>;
								public getThreeDSLookUpApiFactory(): com.paypal.pyplcheckout.services.api.factory.AuthenticatedApiFactory<com.paypal.pyplcheckout.services.api.ThreeDSLookUpApi>;
								public getAddressValidationApiFactory(): com.paypal.pyplcheckout.services.api.factory.AuthenticatedApiFactory<com.paypal.pyplcheckout.services.api.AddressValidationApi>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module api {
					export module interceptor {
						export class AccessTokenInterceptor {
							public static class: java.lang.Class<com.paypal.pyplcheckout.services.api.interceptor.AccessTokenInterceptor>;
							public intercept(param0: okhttp3.Interceptor.Chain): okhttp3.Response;
							public constructor(param0: com.paypal.pyplcheckout.data.repositories.AuthRepository);
						}
						export module AccessTokenInterceptor {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.services.api.interceptor.AccessTokenInterceptor.Companion>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module api {
					export module interceptor {
						export class AccessTokenInterceptor_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.services.api.interceptor.AccessTokenInterceptor> {
							public static class: java.lang.Class<com.paypal.pyplcheckout.services.api.interceptor.AccessTokenInterceptor_Factory>;
							public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.data.repositories.AuthRepository>);
							public static newInstance(param0: com.paypal.pyplcheckout.data.repositories.AuthRepository): com.paypal.pyplcheckout.services.api.interceptor.AccessTokenInterceptor;
							public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.data.repositories.AuthRepository>): com.paypal.pyplcheckout.services.api.interceptor.AccessTokenInterceptor_Factory;
							public get(): com.paypal.pyplcheckout.services.api.interceptor.AccessTokenInterceptor;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module api {
					export module interceptor {
						export class NetworkRetryInterceptor {
							public static class: java.lang.Class<com.paypal.pyplcheckout.services.api.interceptor.NetworkRetryInterceptor>;
							public static RETRY_MAX_COUNT_HEADER: string;
							public static RETRY_TIMEOUT_HEADER: string;
							public static RETRY_DELAY_HEADER: string;
							public static DEFAULT_MAX_RETRIES_COUNT: number;
							public static DEFAULT_MAX_RETRIES_DURATION: number;
							public static DEFAULT_RETRY_DELAY: number;
							public constructor();
							public intercept(param0: okhttp3.Interceptor.Chain): okhttp3.Response;
							public canRetry(param0: number, param1: number, param2: com.paypal.pyplcheckout.services.api.interceptor.NetworkRetryInterceptor.RetryConfiguration): boolean;
							public shouldRetry(param0: java.lang.Integer): boolean;
							public getRetryConfiguration(param0: okhttp3.Request): com.paypal.pyplcheckout.services.api.interceptor.NetworkRetryInterceptor.RetryConfiguration;
							public retry(param0: okhttp3.Request, param1: okhttp3.Interceptor.Chain, param2: com.paypal.pyplcheckout.services.api.interceptor.NetworkRetryInterceptor.RetryConfiguration, param3: any): any;
						}
						export module NetworkRetryInterceptor {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.services.api.interceptor.NetworkRetryInterceptor.Companion>;
							}
							export class RetryConfiguration {
								public static class: java.lang.Class<com.paypal.pyplcheckout.services.api.interceptor.NetworkRetryInterceptor.RetryConfiguration>;
								public toString(): string;
								public component1(): okhttp3.Request;
								public equals(param0: any): boolean;
								public getMaxRetriesDuration(): number;
								public component3(): number;
								public getDelay(): number;
								public component4(): number;
								public copy(param0: okhttp3.Request, param1: number, param2: number, param3: number): com.paypal.pyplcheckout.services.api.interceptor.NetworkRetryInterceptor.RetryConfiguration;
								public getRequest(): okhttp3.Request;
								public component2(): number;
								public getMaxRetriesCount(): number;
								public hashCode(): number;
								public constructor(param0: okhttp3.Request, param1: number, param2: number, param3: number);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module apiunused {
					export class SetCurrencyConversionTypeApi extends com.paypal.pyplcheckout.services.api.BaseApi {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.apiunused.SetCurrencyConversionTypeApi>;
						public constructor();
						public createService(): okhttp3.Request;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module callbacks {
					export class AddShippingAddressCallback extends com.paypal.pyplcheckout.services.callbacks.BaseCallback {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.callbacks.AddShippingAddressCallback>;
						public constructor();
						public static get(): com.paypal.pyplcheckout.services.callbacks.AddShippingAddressCallback;
						public onApiSuccess(param0: string): void;
						public onApiError(param0: java.lang.Exception): void;
						public constructor(param0: globalAndroid.os.Handler);
					}
					export module AddShippingAddressCallback {
						export class Companion {
							public static class: java.lang.Class<com.paypal.pyplcheckout.services.callbacks.AddShippingAddressCallback.Companion>;
							public get(): com.paypal.pyplcheckout.services.callbacks.AddShippingAddressCallback;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module callbacks {
					export class ApprovePaymentCallback extends com.paypal.pyplcheckout.services.callbacks.BaseCallback {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.callbacks.ApprovePaymentCallback>;
						public constructor();
						public onSaveCorrelationId(param0: string, param1: com.paypal.pyplcheckout.services.InternalCorrelationIds): com.paypal.pyplcheckout.services.InternalCorrelationIds;
						public onApiSuccess(param0: string): void;
						public onApiError(param0: java.lang.Exception): void;
						public constructor(param0: globalAndroid.os.Handler);
						public constructor(param0: com.paypal.pyplcheckout.model.DebugConfigManager, param1: com.paypal.pyplcheckout.utils.PYPLCheckoutUtils, param2: globalAndroid.os.Handler);
					}
					export module ApprovePaymentCallback {
						export class Companion {
							public static class: java.lang.Class<com.paypal.pyplcheckout.services.callbacks.ApprovePaymentCallback.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module callbacks {
					export class ApprovePaymentCallback_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.services.callbacks.ApprovePaymentCallback> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.callbacks.ApprovePaymentCallback_Factory>;
						public static newInstance(param0: com.paypal.pyplcheckout.model.DebugConfigManager, param1: com.paypal.pyplcheckout.utils.PYPLCheckoutUtils, param2: globalAndroid.os.Handler): com.paypal.pyplcheckout.services.callbacks.ApprovePaymentCallback;
						public get(): com.paypal.pyplcheckout.services.callbacks.ApprovePaymentCallback;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>, param1: javax.inject.Provider<com.paypal.pyplcheckout.utils.PYPLCheckoutUtils>, param2: javax.inject.Provider<globalAndroid.os.Handler>, param3: javax.inject.Provider<com.paypal.pyplcheckout.ab.AbManager>, param4: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>);
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>, param1: javax.inject.Provider<com.paypal.pyplcheckout.utils.PYPLCheckoutUtils>, param2: javax.inject.Provider<globalAndroid.os.Handler>, param3: javax.inject.Provider<com.paypal.pyplcheckout.ab.AbManager>, param4: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>): com.paypal.pyplcheckout.services.callbacks.ApprovePaymentCallback_Factory;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module callbacks {
					export class ApprovePaymentCallback_MembersInjector extends dagger.MembersInjector<com.paypal.pyplcheckout.services.callbacks.ApprovePaymentCallback> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.callbacks.ApprovePaymentCallback_MembersInjector>;
						public injectMembers(param0: com.paypal.pyplcheckout.services.callbacks.ApprovePaymentCallback): void;
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.ab.AbManager>, param1: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>): dagger.MembersInjector<com.paypal.pyplcheckout.services.callbacks.ApprovePaymentCallback>;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.ab.AbManager>, param1: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module callbacks {
					export abstract class BaseCallback {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.callbacks.BaseCallback>;
						public abManager: com.paypal.pyplcheckout.ab.AbManager;
						public events: com.paypal.pyplcheckout.events.Events;
						public constructor();
						public getCorrelationId(): string;
						public constructor(param0: globalAndroid.os.Handler);
						public getEvents(): com.paypal.pyplcheckout.events.Events;
						public getAbManager(): com.paypal.pyplcheckout.ab.AbManager;
						public onResponse(param0: okhttp3.Call, param1: okhttp3.Response): void;
						public onSaveCorrelationId(param0: string, param1: com.paypal.pyplcheckout.services.InternalCorrelationIds): com.paypal.pyplcheckout.services.InternalCorrelationIds;
						public handleCallbackFailure(param0: string, param1: java.lang.Exception): void;
						public setEvents(param0: com.paypal.pyplcheckout.events.Events): void;
						public onApiSuccess(param0: string): void;
						public runOnUiThread(param0: java.lang.Runnable): void;
						public onApiError(param0: java.lang.Exception): void;
						public setAbManager(param0: com.paypal.pyplcheckout.ab.AbManager): void;
						public onFailure(param0: okhttp3.Call, param1: java.io.IOException): void;
					}
					export module BaseCallback {
						export class Companion {
							public static class: java.lang.Class<com.paypal.pyplcheckout.services.callbacks.BaseCallback.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module callbacks {
					export class BaseCallback_MembersInjector extends dagger.MembersInjector<com.paypal.pyplcheckout.services.callbacks.BaseCallback> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.callbacks.BaseCallback_MembersInjector>;
						public static injectEvents(param0: com.paypal.pyplcheckout.services.callbacks.BaseCallback, param1: com.paypal.pyplcheckout.events.Events): void;
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.ab.AbManager>, param1: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>): dagger.MembersInjector<com.paypal.pyplcheckout.services.callbacks.BaseCallback>;
						public injectMembers(param0: com.paypal.pyplcheckout.services.callbacks.BaseCallback): void;
						public static injectAbManager(param0: com.paypal.pyplcheckout.services.callbacks.BaseCallback, param1: com.paypal.pyplcheckout.ab.AbManager): void;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.ab.AbManager>, param1: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module callbacks {
					export class CancelUrlCallback extends com.paypal.pyplcheckout.services.callbacks.BaseCallback {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.callbacks.CancelUrlCallback>;
						public static get(): com.paypal.pyplcheckout.services.callbacks.CancelUrlCallback;
						public constructor();
						public onApiSuccess(param0: string): void;
						public onApiError(param0: java.lang.Exception): void;
						public constructor(param0: globalAndroid.os.Handler);
					}
					export module CancelUrlCallback {
						export class Companion {
							public static class: java.lang.Class<com.paypal.pyplcheckout.services.callbacks.CancelUrlCallback.Companion>;
							public get(): com.paypal.pyplcheckout.services.callbacks.CancelUrlCallback;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module callbacks {
					export class ClientConfigUpdateCallback extends com.paypal.pyplcheckout.services.callbacks.BaseCallback {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.callbacks.ClientConfigUpdateCallback>;
						public constructor();
						public static get(): com.paypal.pyplcheckout.services.callbacks.ClientConfigUpdateCallback;
						public onSaveCorrelationId(param0: string, param1: com.paypal.pyplcheckout.services.InternalCorrelationIds): com.paypal.pyplcheckout.services.InternalCorrelationIds;
						public onApiSuccess(param0: string): void;
						public onApiError(param0: java.lang.Exception): void;
						public constructor(param0: globalAndroid.os.Handler);
					}
					export module ClientConfigUpdateCallback {
						export class Companion {
							public static class: java.lang.Class<com.paypal.pyplcheckout.services.callbacks.ClientConfigUpdateCallback.Companion>;
							public get(): com.paypal.pyplcheckout.services.callbacks.ClientConfigUpdateCallback;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module callbacks {
					export class CryptoCurrencyQuoteCallback extends com.paypal.pyplcheckout.services.callbacks.BaseCallback {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.callbacks.CryptoCurrencyQuoteCallback>;
						public constructor();
						public static get(): com.paypal.pyplcheckout.services.callbacks.CryptoCurrencyQuoteCallback;
						public onApiSuccess(param0: string): void;
						public onApiError(param0: java.lang.Exception): void;
						public constructor(param0: globalAndroid.os.Handler);
					}
					export module CryptoCurrencyQuoteCallback {
						export class Companion {
							public static class: java.lang.Class<com.paypal.pyplcheckout.services.callbacks.CryptoCurrencyQuoteCallback.Companion>;
							public get(): com.paypal.pyplcheckout.services.callbacks.CryptoCurrencyQuoteCallback;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module callbacks {
					export class EligibilityCallback extends com.paypal.pyplcheckout.services.callbacks.BaseCallback {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.callbacks.EligibilityCallback>;
						public constructor();
						public onSaveCorrelationId(param0: string, param1: com.paypal.pyplcheckout.services.InternalCorrelationIds): com.paypal.pyplcheckout.services.InternalCorrelationIds;
						public onApiSuccess(param0: string): void;
						public onApiError(param0: java.lang.Exception): void;
						public constructor(param0: globalAndroid.os.Handler);
						public static get(): com.paypal.pyplcheckout.services.callbacks.EligibilityCallback;
					}
					export module EligibilityCallback {
						export class Companion {
							public static class: java.lang.Class<com.paypal.pyplcheckout.services.callbacks.EligibilityCallback.Companion>;
							public get(): com.paypal.pyplcheckout.services.callbacks.EligibilityCallback;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module callbacks {
					export class FirebaseTokenCallback extends com.paypal.pyplcheckout.services.callbacks.BaseCallback {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.callbacks.FirebaseTokenCallback>;
						public constructor();
						public static get(): com.paypal.pyplcheckout.services.callbacks.FirebaseTokenCallback;
						public onSaveCorrelationId(param0: string, param1: com.paypal.pyplcheckout.services.InternalCorrelationIds): com.paypal.pyplcheckout.services.InternalCorrelationIds;
						public onApiSuccess(param0: string): void;
						public onApiError(param0: java.lang.Exception): void;
						public constructor(param0: globalAndroid.os.Handler);
					}
					export module FirebaseTokenCallback {
						export class Companion {
							public static class: java.lang.Class<com.paypal.pyplcheckout.services.callbacks.FirebaseTokenCallback.Companion>;
							public get(): com.paypal.pyplcheckout.services.callbacks.FirebaseTokenCallback;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module callbacks {
					export class LogCallback extends com.paypal.pyplcheckout.services.callbacks.BaseCallback {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.callbacks.LogCallback>;
						public static get(): com.paypal.pyplcheckout.services.callbacks.LogCallback;
						public constructor();
						public onApiSuccess(param0: string): void;
						public onApiError(param0: java.lang.Exception): void;
						public constructor(param0: globalAndroid.os.Handler);
					}
					export module LogCallback {
						export class Companion {
							public static class: java.lang.Class<com.paypal.pyplcheckout.services.callbacks.LogCallback.Companion>;
							public get(): com.paypal.pyplcheckout.services.callbacks.LogCallback;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module callbacks {
					export class LsatUpgradeCallback extends com.paypal.pyplcheckout.services.callbacks.BaseCallback {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.callbacks.LsatUpgradeCallback>;
						public constructor();
						public constructor(param0: any<any,any>);
						public onSaveCorrelationId(param0: string, param1: com.paypal.pyplcheckout.services.InternalCorrelationIds): com.paypal.pyplcheckout.services.InternalCorrelationIds;
						public onApiSuccess(param0: string): void;
						public onApiError(param0: java.lang.Exception): void;
						public static get(param0: any<any,any>): com.paypal.pyplcheckout.services.callbacks.LsatUpgradeCallback;
						public constructor(param0: globalAndroid.os.Handler);
					}
					export module LsatUpgradeCallback {
						export class Companion {
							public static class: java.lang.Class<com.paypal.pyplcheckout.services.callbacks.LsatUpgradeCallback.Companion>;
							public get(param0: any<any,any>): com.paypal.pyplcheckout.services.callbacks.LsatUpgradeCallback;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module callbacks {
					export class UpdateCurrencyConversionCallback extends com.paypal.pyplcheckout.services.callbacks.BaseCallback {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.callbacks.UpdateCurrencyConversionCallback>;
						public constructor();
						public onSaveCorrelationId(param0: string, param1: com.paypal.pyplcheckout.services.InternalCorrelationIds): com.paypal.pyplcheckout.services.InternalCorrelationIds;
						public onApiSuccess(param0: string): void;
						public onApiError(param0: java.lang.Exception): void;
						public constructor(param0: com.paypal.pyplcheckout.services.callbacks.ApprovePaymentCallback, param1: com.google.gson.Gson);
						public constructor(param0: globalAndroid.os.Handler);
					}
					export module UpdateCurrencyConversionCallback {
						export class Companion {
							public static class: java.lang.Class<com.paypal.pyplcheckout.services.callbacks.UpdateCurrencyConversionCallback.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module callbacks {
					export class UpdateCurrencyConversionCallback_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.services.callbacks.UpdateCurrencyConversionCallback> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.callbacks.UpdateCurrencyConversionCallback_Factory>;
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.services.callbacks.ApprovePaymentCallback>, param1: javax.inject.Provider<com.google.gson.Gson>, param2: javax.inject.Provider<com.paypal.pyplcheckout.ab.AbManager>, param3: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>): com.paypal.pyplcheckout.services.callbacks.UpdateCurrencyConversionCallback_Factory;
						public get(): com.paypal.pyplcheckout.services.callbacks.UpdateCurrencyConversionCallback;
						public static newInstance(param0: com.paypal.pyplcheckout.services.callbacks.ApprovePaymentCallback, param1: com.google.gson.Gson): com.paypal.pyplcheckout.services.callbacks.UpdateCurrencyConversionCallback;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.services.callbacks.ApprovePaymentCallback>, param1: javax.inject.Provider<com.google.gson.Gson>, param2: javax.inject.Provider<com.paypal.pyplcheckout.ab.AbManager>, param3: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module callbacks {
					export class UpdateCurrencyConversionCallback_MembersInjector extends dagger.MembersInjector<com.paypal.pyplcheckout.services.callbacks.UpdateCurrencyConversionCallback> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.callbacks.UpdateCurrencyConversionCallback_MembersInjector>;
						public injectMembers(param0: com.paypal.pyplcheckout.services.callbacks.UpdateCurrencyConversionCallback): void;
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.ab.AbManager>, param1: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>): dagger.MembersInjector<com.paypal.pyplcheckout.services.callbacks.UpdateCurrencyConversionCallback>;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.ab.AbManager>, param1: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module callbacks {
					export class UpdateOrderCallback extends com.paypal.pyplcheckout.services.callbacks.BaseCallback {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.callbacks.UpdateOrderCallback>;
						public constructor(param0: com.paypal.pyplcheckout.interfaces.UpdateOrderFinishListener);
						public constructor();
						public onApiSuccess(param0: string): void;
						public static get(param0: com.paypal.pyplcheckout.interfaces.UpdateOrderFinishListener): com.paypal.pyplcheckout.services.callbacks.UpdateOrderCallback;
						public onApiError(param0: java.lang.Exception): void;
						public getListener(): com.paypal.pyplcheckout.interfaces.UpdateOrderFinishListener;
						public constructor(param0: globalAndroid.os.Handler);
					}
					export module UpdateOrderCallback {
						export class Companion {
							public static class: java.lang.Class<com.paypal.pyplcheckout.services.callbacks.UpdateOrderCallback.Companion>;
							public get(param0: com.paypal.pyplcheckout.interfaces.UpdateOrderFinishListener): com.paypal.pyplcheckout.services.callbacks.UpdateOrderCallback;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module callbacks {
					export class UserAndCheckoutCallback extends com.paypal.pyplcheckout.services.callbacks.BaseCallback {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.callbacks.UserAndCheckoutCallback>;
						public constructor();
						public onSaveCorrelationId(param0: string, param1: com.paypal.pyplcheckout.services.InternalCorrelationIds): com.paypal.pyplcheckout.services.InternalCorrelationIds;
						public constructor(param0: any, param1: com.paypal.pyplcheckout.domain.usecase.address.GetLocaleMetadataUseCase, param2: com.google.gson.Gson);
						public onApiSuccess(param0: string): void;
						public static get(): com.paypal.pyplcheckout.services.callbacks.UserAndCheckoutCallback;
						public onApiError(param0: java.lang.Exception): void;
						public constructor(param0: globalAndroid.os.Handler);
					}
					export module UserAndCheckoutCallback {
						export class Companion {
							public static class: java.lang.Class<com.paypal.pyplcheckout.services.callbacks.UserAndCheckoutCallback.Companion>;
							public get(): com.paypal.pyplcheckout.services.callbacks.UserAndCheckoutCallback;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module mutations {
					export class AddBillingAddressAndApprovePaymentMutation {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.mutations.AddBillingAddressAndApprovePaymentMutation>;
						public static INSTANCE: com.paypal.pyplcheckout.services.mutations.AddBillingAddressAndApprovePaymentMutation;
						public get(param0: boolean, param1: boolean, param2: com.paypal.pyplcheckout.billingagreements.model.BillingAgreementBalancePreference): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module mutations {
					export class AddCardMutation {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.mutations.AddCardMutation>;
						public static INSTANCE: com.paypal.pyplcheckout.services.mutations.AddCardMutation;
						public get(param0: boolean): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module mutations {
					export class AddShippingAddressMutation {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.mutations.AddShippingAddressMutation>;
						public static INSTANCE: com.paypal.pyplcheckout.services.mutations.AddShippingAddressMutation;
						public get(param0: boolean): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module mutations {
					export class AddressValidationMutation {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.mutations.AddressValidationMutation>;
						public static INSTANCE: com.paypal.pyplcheckout.services.mutations.AddressValidationMutation;
						public get(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module mutations {
					export class ApproveMemberPaymentMutation {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.mutations.ApproveMemberPaymentMutation>;
						public static INSTANCE: com.paypal.pyplcheckout.services.mutations.ApproveMemberPaymentMutation;
						public get(param0: boolean, param1: boolean, param2: com.paypal.pyplcheckout.billingagreements.model.BillingAgreementBalancePreference): string;
						public getMutation(param0: boolean, param1: boolean, param2: com.paypal.pyplcheckout.billingagreements.model.BillingAgreementBalancePreference, param3: string, param4: string): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module mutations {
					export class GetLsatUpgradeMutation {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.mutations.GetLsatUpgradeMutation>;
						public static INSTANCE: com.paypal.pyplcheckout.services.mutations.GetLsatUpgradeMutation;
						public get(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module mutations {
					export class SetCurrencyConversionTypeMutation {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.mutations.SetCurrencyConversionTypeMutation>;
						public static INSTANCE: com.paypal.pyplcheckout.services.mutations.SetCurrencyConversionTypeMutation;
						public get(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module mutations {
					export class ThreeDSAuthenticateMutation {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.mutations.ThreeDSAuthenticateMutation>;
						public static INSTANCE: com.paypal.pyplcheckout.services.mutations.ThreeDSAuthenticateMutation;
						public get(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module mutations {
					export class ThreeDSLookUpMutation {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.mutations.ThreeDSLookUpMutation>;
						public static INSTANCE: com.paypal.pyplcheckout.services.mutations.ThreeDSLookUpMutation;
						public get(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module mutations {
					export class ThreeDSResolveContingencyMutation {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.mutations.ThreeDSResolveContingencyMutation>;
						public static INSTANCE: com.paypal.pyplcheckout.services.mutations.ThreeDSResolveContingencyMutation;
						public get(param0: boolean): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module queries {
					export class AddCardThreeDSQuery {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.queries.AddCardThreeDSQuery>;
						public static INSTANCE: com.paypal.pyplcheckout.services.queries.AddCardThreeDSQuery;
						public get(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module queries {
					export class CartParamConverterQuery {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.queries.CartParamConverterQuery>;
						public static INSTANCE: com.paypal.pyplcheckout.services.queries.CartParamConverterQuery;
						public static cart: string;
						public static get(): org.json.JSONObject;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module queries {
					export class CheckoutQuery {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.queries.CheckoutQuery>;
						public static INSTANCE: com.paypal.pyplcheckout.services.queries.CheckoutQuery;
						public getCheckoutResponseQuery(param0: boolean): string;
						public get(param0: boolean): string;
						public getCheckoutResponse(param0: boolean): string;
						public getCryptocurrencyQuotes(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module queries {
					export class EligibilityQuery {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.queries.EligibilityQuery>;
						public static INSTANCE: com.paypal.pyplcheckout.services.queries.EligibilityQuery;
						public get(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module queries {
					export class GetCancelUrlQuery {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.queries.GetCancelUrlQuery>;
						public static INSTANCE: com.paypal.pyplcheckout.services.queries.GetCancelUrlQuery;
						public get(param0: string): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module queries {
					export class GetFirebaseSessionIdQuery {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.queries.GetFirebaseSessionIdQuery>;
						public static INSTANCE: com.paypal.pyplcheckout.services.queries.GetFirebaseSessionIdQuery;
						public get(param0: string): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module queries {
					export class ThreeDSJwtQuery {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.queries.ThreeDSJwtQuery>;
						public static INSTANCE: com.paypal.pyplcheckout.services.queries.ThreeDSJwtQuery;
						public get(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module services {
				export module queries {
					export class UpdateCurrencyConversionQuery {
						public static class: java.lang.Class<com.paypal.pyplcheckout.services.queries.UpdateCurrencyConversionQuery>;
						public static INSTANCE: com.paypal.pyplcheckout.services.queries.UpdateCurrencyConversionQuery;
						public get(param0: string, param1: string): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module shippingcallbacks {
				export class ShippingCallbackHandler {
					public static class: java.lang.Class<com.paypal.pyplcheckout.shippingcallbacks.ShippingCallbackHandler>;
					public accessToken: string;
					public shippingCallbackSelectedIndex: number;
					public constructor(param0: com.paypal.pyplcheckout.model.DebugConfigManager, param1: com.paypal.pyplcheckout.events.Events, param2: com.paypal.pyplcheckout.services.Repository, param3: com.paypal.checkout.order.actions.PatchAction);
					public getFirstPartyShippingCallbackRequestType(): com.paypal.pyplcheckout.pojo.ShippingCallbackRequestType.Type;
					public getThirdPartyShippingCallbackRequestType(): com.paypal.pyplcheckout.pojo.ShippingCallbackRequestType.Type;
					public isFirstPartyShippingPatchingEnabled(): boolean;
					public getHomeScreenBlockingFlag(): androidx.lifecycle.MutableLiveData<com.paypal.pyplcheckout.home.view.customviews.productviews.ShippingCallbackBlockingBehaviour>;
					public createShippingChangeErrorListener(): void;
					public isThirdPartyShippingPatchingEnabled(): boolean;
					public setupListeners(): void;
					public handleShippingChangeData(param0: com.paypal.pyplcheckout.pojo.ShippingCallbackRequestType, param1: java.util.List<com.paypal.checkout.order.Options>, param2: com.paypal.pyplcheckout.pojo.ShippingAddress): void;
					public setHomeScreenBlockingFlag(param0: androidx.lifecycle.MutableLiveData<com.paypal.pyplcheckout.home.view.customviews.productviews.ShippingCallbackBlockingBehaviour>): void;
					public validateShippingCallback(param0: com.paypal.pyplcheckout.pojo.ShippingCallbackRequestType, param1: com.paypal.pyplcheckout.pojo.ShippingMethodType, param2: number, param3: number): void;
				}
				export module ShippingCallbackHandler {
					export class Companion {
						public static class: java.lang.Class<com.paypal.pyplcheckout.shippingcallbacks.ShippingCallbackHandler.Companion>;
						public getTAG(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module shippingcallbacks {
				export class ShippingCallbackHandler_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.shippingcallbacks.ShippingCallbackHandler> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.shippingcallbacks.ShippingCallbackHandler_Factory>;
					public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>, param1: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param2: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param3: javax.inject.Provider<com.paypal.checkout.order.actions.PatchAction>): com.paypal.pyplcheckout.shippingcallbacks.ShippingCallbackHandler_Factory;
					public get(): com.paypal.pyplcheckout.shippingcallbacks.ShippingCallbackHandler;
					public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>, param1: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param2: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param3: javax.inject.Provider<com.paypal.checkout.order.actions.PatchAction>);
					public static newInstance(param0: com.paypal.pyplcheckout.model.DebugConfigManager, param1: com.paypal.pyplcheckout.events.Events, param2: com.paypal.pyplcheckout.services.Repository, param3: com.paypal.checkout.order.actions.PatchAction): com.paypal.pyplcheckout.shippingcallbacks.ShippingCallbackHandler;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module shippingmethods {
				export module model {
					export class ShippingMethodsViewContentPageConfig extends com.paypal.pyplcheckout.navigation.ContentPage {
						public static class: java.lang.Class<com.paypal.pyplcheckout.shippingmethods.model.ShippingMethodsViewContentPageConfig>;
						public setFooterContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
						public constructor();
						public getBodyContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public setHeaderContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
						public getHeaderContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
						public setBodyContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
						public getHeaderContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public getTopBannerContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public getBodyContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
						public addViewsToContainer(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param1: globalAndroid.view.ViewGroup): void;
						public removeViewsFromContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup): void;
						public getFooterContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public addViewsToContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup): void;
						public getFooterContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
						public removeViewsFromContainer(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param1: globalAndroid.view.ViewGroup): void;
						public constructor(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param1: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param2: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param3: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>);
						public addViewsToContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup, param2: number): void;
						public constructor(param0: globalAndroid.content.Context, param1: androidx.fragment.app.Fragment, param2: com.paypal.pyplcheckout.shippingmethods.model.ShippingMethodsViewListenerImpl, param3: com.paypal.pyplcheckout.navigation.ContentPage);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module shippingmethods {
				export module model {
					export class ShippingMethodsViewListenerImpl extends com.paypal.pyplcheckout.shippingmethods.view.interfaces.ShippingMethodsViewListener {
						public static class: java.lang.Class<com.paypal.pyplcheckout.shippingmethods.model.ShippingMethodsViewListenerImpl>;
						public constructor(param0: com.paypal.pyplcheckout.shippingmethods.view.interfaces.PayPalShippingMethodsHeaderViewListener, param1: com.paypal.pyplcheckout.shippingmethods.view.interfaces.PayPalShippingMethodsRecyclerViewListener);
						public onPayPalBackArrowClick(): void;
						public onPayPalShippingMethodSelected(param0: number, param1: com.paypal.pyplcheckout.pojo.ShippingMethodType): void;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module shippingmethods {
				export module view {
					export module adapters {
						export class ShippingMethodsAdapter extends androidx.recyclerview.widget.RecyclerView.Adapter<com.paypal.pyplcheckout.shippingmethods.view.adapters.ShippingMethodsAdapter.ItemViewHolder> {
							public static class: java.lang.Class<com.paypal.pyplcheckout.shippingmethods.view.adapters.ShippingMethodsAdapter>;
							public onCreateViewHolder(param0: globalAndroid.view.ViewGroup, param1: number): com.paypal.pyplcheckout.shippingmethods.view.adapters.ShippingMethodsAdapter.ItemViewHolder;
							public onBindViewHolder(param0: com.paypal.pyplcheckout.shippingmethods.view.adapters.ShippingMethodsAdapter.ItemViewHolder, param1: number): void;
							public getItemCount(): number;
							public updateSelectedShippingMethod(param0: com.paypal.pyplcheckout.pojo.ShippingMethods): void;
							public constructor(param0: globalAndroid.content.Context, param1: java.util.List<com.paypal.pyplcheckout.pojo.ShippingMethods>, param2: com.paypal.pyplcheckout.shippingmethods.view.adapters.ShippingMethodsAdapter.ShippingMethodsAdapterClickListener, param3: com.paypal.pyplcheckout.pojo.ShippingMethods);
						}
						export module ShippingMethodsAdapter {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.shippingmethods.view.adapters.ShippingMethodsAdapter.Companion>;
							}
							export class ItemViewHolder {
								public static class: java.lang.Class<com.paypal.pyplcheckout.shippingmethods.view.adapters.ShippingMethodsAdapter.ItemViewHolder>;
								public constructor(param0: globalAndroid.view.View, param1: com.paypal.pyplcheckout.shippingmethods.view.adapters.ShippingMethodsAdapter.ShippingMethodsAdapterClickListener, param2: com.paypal.pyplcheckout.shippingmethods.view.adapters.ShippingMethodsAdapter);
								public getShippingMethodSelectedCb(): globalAndroid.widget.ImageView;
								public getShippingMethodTv(): globalAndroid.widget.TextView;
								public getShippingMethodSelectorCardView(): com.google.android.material.card.MaterialCardView;
								public getShippingMethodPriceTv(): globalAndroid.widget.TextView;
							}
							export class ShippingMethodsAdapterClickListener {
								public static class: java.lang.Class<com.paypal.pyplcheckout.shippingmethods.view.adapters.ShippingMethodsAdapter.ShippingMethodsAdapterClickListener>;
								/**
								 * Constructs a new instance of the com.paypal.pyplcheckout.shippingmethods.view.adapters.ShippingMethodsAdapter$ShippingMethodsAdapterClickListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									onShippingMethodSelected(param0: number, param1: com.paypal.pyplcheckout.pojo.ShippingMethodType): void;
								});
								public constructor();
								public onShippingMethodSelected(param0: number, param1: com.paypal.pyplcheckout.pojo.ShippingMethodType): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module shippingmethods {
				export module view {
					export module customviews {
						export class PayPalShippingMethodsHeaderView implements com.paypal.pyplcheckout.navigation.interfaces.ContentView {
							public static class: java.lang.Class<com.paypal.pyplcheckout.shippingmethods.view.customviews.PayPalShippingMethodsHeaderView>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public static TAG: string;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment);
							public getContentViewMinHeight(): number;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public removeListeners(): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment, param4: com.paypal.pyplcheckout.shippingmethods.view.interfaces.PayPalShippingMethodsHeaderViewListener);
							public getViewId(): string;
							public getIsAnchoredToBottomSheet(): boolean;
							public onClick(param0: globalAndroid.view.View): void;
							public getFragment(): androidx.fragment.app.Fragment;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public _$_clearFindViewByIdCache(): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public constructor(param0: globalAndroid.content.Context);
							public setContentViewVisibility(param0: number): void;
						}
						export module PayPalShippingMethodsHeaderView {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.shippingmethods.view.customviews.PayPalShippingMethodsHeaderView.Companion>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module shippingmethods {
				export module view {
					export module customviews {
						export class PayPalShippingMethodsInfoView implements com.paypal.pyplcheckout.navigation.interfaces.ContentView, com.paypal.pyplcheckout.navigation.interfaces.ICustomViewsViewModel, com.paypal.pyplcheckout.shippingmethods.view.adapters.ShippingMethodsAdapter.ShippingMethodsAdapterClickListener {
							public static class: java.lang.Class<com.paypal.pyplcheckout.shippingmethods.view.customviews.PayPalShippingMethodsInfoView>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public static TAG: string;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment, param4: com.paypal.pyplcheckout.shippingmethods.view.interfaces.PayPalShippingMethodsRecyclerViewListener);
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment);
							public getContentViewMinHeight(): number;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public initViewModelObservers(): void;
							public removeListeners(): void;
							public getViewId(): string;
							public getIsAnchoredToBottomSheet(): boolean;
							public getFragment(): androidx.fragment.app.Fragment;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public getLifecycleOwner(param0: globalAndroid.view.View): androidx.lifecycle.LifecycleOwner;
							public _$_clearFindViewByIdCache(): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public onShippingMethodSelected(param0: number, param1: com.paypal.pyplcheckout.pojo.ShippingMethodType): void;
							public getComponentActivity(param0: globalAndroid.content.Context): androidx.activity.ComponentActivity;
							public constructor(param0: globalAndroid.content.Context);
							public setContentViewVisibility(param0: number): void;
						}
						export module PayPalShippingMethodsInfoView {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.shippingmethods.view.customviews.PayPalShippingMethodsInfoView.Companion>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module shippingmethods {
				export module view {
					export module fragments {
						export class PYPLShippingMethodFragment extends com.paypal.pyplcheckout.home.view.BaseFragment {
							public static class: java.lang.Class<com.paypal.pyplcheckout.shippingmethods.view.fragments.PYPLShippingMethodFragment>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public static TAG: string;
							public constructor();
							public static newInstance(): com.paypal.pyplcheckout.shippingmethods.view.fragments.PYPLShippingMethodFragment;
							public getViewId(): string;
							public onActivityCreated(param0: globalAndroid.os.Bundle): void;
							public onCreateView(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: globalAndroid.os.Bundle): globalAndroid.view.View;
							public _$_clearFindViewByIdCache(): void;
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public onResume(): void;
						}
						export module PYPLShippingMethodFragment {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.shippingmethods.view.fragments.PYPLShippingMethodFragment.Companion>;
								public newInstance(): com.paypal.pyplcheckout.shippingmethods.view.fragments.PYPLShippingMethodFragment;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module shippingmethods {
				export module view {
					export module interfaces {
						export class PayPalShippingMethodsHeaderViewListener {
							public static class: java.lang.Class<com.paypal.pyplcheckout.shippingmethods.view.interfaces.PayPalShippingMethodsHeaderViewListener>;
							/**
							 * Constructs a new instance of the com.paypal.pyplcheckout.shippingmethods.view.interfaces.PayPalShippingMethodsHeaderViewListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onPayPalBackArrowClick(): void;
							});
							public constructor();
							public onPayPalBackArrowClick(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module shippingmethods {
				export module view {
					export module interfaces {
						export class PayPalShippingMethodsRecyclerViewListener {
							public static class: java.lang.Class<com.paypal.pyplcheckout.shippingmethods.view.interfaces.PayPalShippingMethodsRecyclerViewListener>;
							/**
							 * Constructs a new instance of the com.paypal.pyplcheckout.shippingmethods.view.interfaces.PayPalShippingMethodsRecyclerViewListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onPayPalShippingMethodSelected(param0: number, param1: com.paypal.pyplcheckout.pojo.ShippingMethodType): void;
							});
							public constructor();
							public onPayPalShippingMethodSelected(param0: number, param1: com.paypal.pyplcheckout.pojo.ShippingMethodType): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module shippingmethods {
				export module view {
					export module interfaces {
						export class ShippingMethodsViewListener implements com.paypal.pyplcheckout.shippingmethods.view.interfaces.PayPalShippingMethodsHeaderViewListener, com.paypal.pyplcheckout.shippingmethods.view.interfaces.PayPalShippingMethodsRecyclerViewListener {
							public static class: java.lang.Class<com.paypal.pyplcheckout.shippingmethods.view.interfaces.ShippingMethodsViewListener>;
							/**
							 * Constructs a new instance of the com.paypal.pyplcheckout.shippingmethods.view.interfaces.ShippingMethodsViewListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onPayPalBackArrowClick(): void;
								onPayPalShippingMethodSelected(param0: number, param1: com.paypal.pyplcheckout.pojo.ShippingMethodType): void;
							});
							public constructor();
							public onPayPalBackArrowClick(): void;
							public onPayPalShippingMethodSelected(param0: number, param1: com.paypal.pyplcheckout.pojo.ShippingMethodType): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module state {
				export module dagger {
					export class CheckoutStateModule {
						public static class: java.lang.Class<com.paypal.pyplcheckout.state.dagger.CheckoutStateModule>;
						public constructor();
						public providesCheckoutStateDao(): com.paypal.pyplcheckout.state.data.daos.CheckoutStateDao;
						public providesCheckoutStateRepository(param0: com.paypal.pyplcheckout.state.data.daos.CheckoutStateDao, param1: kotlinx.coroutines.CoroutineScope): com.paypal.pyplcheckout.state.data.repositories.CheckoutStateRepository;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module state {
				export module dagger {
					export class CheckoutStateModule_ProvidesCheckoutStateDaoFactory extends dagger.internal.Factory<com.paypal.pyplcheckout.state.data.daos.CheckoutStateDao> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.state.dagger.CheckoutStateModule_ProvidesCheckoutStateDaoFactory>;
						public get(): com.paypal.pyplcheckout.state.data.daos.CheckoutStateDao;
						public static create(param0: com.paypal.pyplcheckout.state.dagger.CheckoutStateModule): com.paypal.pyplcheckout.state.dagger.CheckoutStateModule_ProvidesCheckoutStateDaoFactory;
						public static providesCheckoutStateDao(param0: com.paypal.pyplcheckout.state.dagger.CheckoutStateModule): com.paypal.pyplcheckout.state.data.daos.CheckoutStateDao;
						public constructor(param0: com.paypal.pyplcheckout.state.dagger.CheckoutStateModule);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module state {
				export module dagger {
					export class CheckoutStateModule_ProvidesCheckoutStateRepositoryFactory extends dagger.internal.Factory<com.paypal.pyplcheckout.state.data.repositories.CheckoutStateRepository> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.state.dagger.CheckoutStateModule_ProvidesCheckoutStateRepositoryFactory>;
						public static providesCheckoutStateRepository(param0: com.paypal.pyplcheckout.state.dagger.CheckoutStateModule, param1: com.paypal.pyplcheckout.state.data.daos.CheckoutStateDao, param2: kotlinx.coroutines.CoroutineScope): com.paypal.pyplcheckout.state.data.repositories.CheckoutStateRepository;
						public constructor(param0: com.paypal.pyplcheckout.state.dagger.CheckoutStateModule, param1: javax.inject.Provider<com.paypal.pyplcheckout.state.data.daos.CheckoutStateDao>, param2: javax.inject.Provider<kotlinx.coroutines.CoroutineScope>);
						public static create(param0: com.paypal.pyplcheckout.state.dagger.CheckoutStateModule, param1: javax.inject.Provider<com.paypal.pyplcheckout.state.data.daos.CheckoutStateDao>, param2: javax.inject.Provider<kotlinx.coroutines.CoroutineScope>): com.paypal.pyplcheckout.state.dagger.CheckoutStateModule_ProvidesCheckoutStateRepositoryFactory;
						public get(): com.paypal.pyplcheckout.state.data.repositories.CheckoutStateRepository;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module state {
				export module data {
					export module daos {
						export class CheckoutStateDao {
							public static class: java.lang.Class<com.paypal.pyplcheckout.state.data.daos.CheckoutStateDao>;
							/**
							 * Constructs a new instance of the com.paypal.pyplcheckout.state.data.daos.CheckoutStateDao interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								setCheckoutState(param0: com.paypal.pyplcheckout.state.data.model.CheckoutState): void;
								getCheckoutState(): com.paypal.pyplcheckout.state.data.model.CheckoutState;
							});
							public constructor();
							public setCheckoutState(param0: com.paypal.pyplcheckout.state.data.model.CheckoutState): void;
							public getCheckoutState(): com.paypal.pyplcheckout.state.data.model.CheckoutState;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module state {
				export module data {
					export module daos {
						export class CheckoutStateDaoImpl extends com.paypal.pyplcheckout.state.data.daos.CheckoutStateDao {
							public static class: java.lang.Class<com.paypal.pyplcheckout.state.data.daos.CheckoutStateDaoImpl>;
							public constructor();
							public setCheckoutState(param0: com.paypal.pyplcheckout.state.data.model.CheckoutState): void;
							public getCheckoutState(): com.paypal.pyplcheckout.state.data.model.CheckoutState;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module state {
				export module data {
					export module daos {
						export class CheckoutStateDaoImpl_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.state.data.daos.CheckoutStateDaoImpl> {
							public static class: java.lang.Class<com.paypal.pyplcheckout.state.data.daos.CheckoutStateDaoImpl_Factory>;
							public constructor();
							public static create(): com.paypal.pyplcheckout.state.data.daos.CheckoutStateDaoImpl_Factory;
							public static newInstance(): com.paypal.pyplcheckout.state.data.daos.CheckoutStateDaoImpl;
							public get(): com.paypal.pyplcheckout.state.data.daos.CheckoutStateDaoImpl;
						}
						export module CheckoutStateDaoImpl_Factory {
							export class InstanceHolder {
								public static class: java.lang.Class<com.paypal.pyplcheckout.state.data.daos.CheckoutStateDaoImpl_Factory.InstanceHolder>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module state {
				export module data {
					export module model {
						export abstract class CheckoutState {
							public static class: java.lang.Class<com.paypal.pyplcheckout.state.data.model.CheckoutState>;
						}
						export module CheckoutState {
							export class PostApprove extends com.paypal.pyplcheckout.state.data.model.CheckoutState {
								public static class: java.lang.Class<com.paypal.pyplcheckout.state.data.model.CheckoutState.PostApprove>;
								public static INSTANCE: com.paypal.pyplcheckout.state.data.model.CheckoutState.PostApprove;
							}
							export class PostReview extends com.paypal.pyplcheckout.state.data.model.CheckoutState {
								public static class: java.lang.Class<com.paypal.pyplcheckout.state.data.model.CheckoutState.PostReview>;
								public static INSTANCE: com.paypal.pyplcheckout.state.data.model.CheckoutState.PostReview;
							}
							export class PreApprove extends com.paypal.pyplcheckout.state.data.model.CheckoutState {
								public static class: java.lang.Class<com.paypal.pyplcheckout.state.data.model.CheckoutState.PreApprove>;
								public static INSTANCE: com.paypal.pyplcheckout.state.data.model.CheckoutState.PreApprove;
							}
							export class PreReview extends com.paypal.pyplcheckout.state.data.model.CheckoutState {
								public static class: java.lang.Class<com.paypal.pyplcheckout.state.data.model.CheckoutState.PreReview>;
								public static INSTANCE: com.paypal.pyplcheckout.state.data.model.CheckoutState.PreReview;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module state {
				export module data {
					export module repositories {
						export class CheckoutStateRepository {
							public static class: java.lang.Class<com.paypal.pyplcheckout.state.data.repositories.CheckoutStateRepository>;
							/**
							 * Constructs a new instance of the com.paypal.pyplcheckout.state.data.repositories.CheckoutStateRepository interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								setCheckoutState(param0: com.paypal.pyplcheckout.state.data.model.CheckoutState): void;
								getCheckoutState(): kotlinx.coroutines.flow.StateFlow<com.paypal.pyplcheckout.state.data.model.CheckoutState>;
							});
							public constructor();
							public setCheckoutState(param0: com.paypal.pyplcheckout.state.data.model.CheckoutState): void;
							public getCheckoutState(): kotlinx.coroutines.flow.StateFlow<com.paypal.pyplcheckout.state.data.model.CheckoutState>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module state {
				export module data {
					export module repositories {
						export class CheckoutStateRepositoryImpl extends com.paypal.pyplcheckout.state.data.repositories.CheckoutStateRepository {
							public static class: java.lang.Class<com.paypal.pyplcheckout.state.data.repositories.CheckoutStateRepositoryImpl>;
							public setCheckoutState(param0: com.paypal.pyplcheckout.state.data.model.CheckoutState): void;
							public getState(): kotlinx.coroutines.flow.StateFlow<com.paypal.pyplcheckout.state.data.model.CheckoutState>;
							public constructor(param0: com.paypal.pyplcheckout.state.data.daos.CheckoutStateDao, param1: kotlinx.coroutines.CoroutineScope);
							public getCheckoutState(): kotlinx.coroutines.flow.StateFlow<com.paypal.pyplcheckout.state.data.model.CheckoutState>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module state {
				export module data {
					export module repositories {
						export class CheckoutStateRepositoryImpl_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.state.data.repositories.CheckoutStateRepositoryImpl> {
							public static class: java.lang.Class<com.paypal.pyplcheckout.state.data.repositories.CheckoutStateRepositoryImpl_Factory>;
							public static newInstance(param0: com.paypal.pyplcheckout.state.data.daos.CheckoutStateDao, param1: kotlinx.coroutines.CoroutineScope): com.paypal.pyplcheckout.state.data.repositories.CheckoutStateRepositoryImpl;
							public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.state.data.daos.CheckoutStateDao>, param1: javax.inject.Provider<kotlinx.coroutines.CoroutineScope>): com.paypal.pyplcheckout.state.data.repositories.CheckoutStateRepositoryImpl_Factory;
							public get(): com.paypal.pyplcheckout.state.data.repositories.CheckoutStateRepositoryImpl;
							public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.state.data.daos.CheckoutStateDao>, param1: javax.inject.Provider<kotlinx.coroutines.CoroutineScope>);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module state {
				export module usecase {
					export class GetCheckoutStateUseCase {
						public static class: java.lang.Class<com.paypal.pyplcheckout.state.usecase.GetCheckoutStateUseCase>;
						public invoke(): kotlinx.coroutines.flow.StateFlow<com.paypal.pyplcheckout.state.data.model.CheckoutState>;
						public constructor(param0: com.paypal.pyplcheckout.state.data.repositories.CheckoutStateRepository);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module state {
				export module usecase {
					export class GetCheckoutStateUseCase_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.state.usecase.GetCheckoutStateUseCase> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.state.usecase.GetCheckoutStateUseCase_Factory>;
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.state.data.repositories.CheckoutStateRepository>): com.paypal.pyplcheckout.state.usecase.GetCheckoutStateUseCase_Factory;
						public static newInstance(param0: com.paypal.pyplcheckout.state.data.repositories.CheckoutStateRepository): com.paypal.pyplcheckout.state.usecase.GetCheckoutStateUseCase;
						public get(): com.paypal.pyplcheckout.state.usecase.GetCheckoutStateUseCase;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.state.data.repositories.CheckoutStateRepository>);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module state {
				export module usecase {
					export class SetCheckoutStateUseCase {
						public static class: java.lang.Class<com.paypal.pyplcheckout.state.usecase.SetCheckoutStateUseCase>;
						public constructor(param0: com.paypal.pyplcheckout.state.data.repositories.CheckoutStateRepository);
						public invoke(param0: com.paypal.pyplcheckout.state.data.model.CheckoutState): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module state {
				export module usecase {
					export class SetCheckoutStateUseCase_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.state.usecase.SetCheckoutStateUseCase> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.state.usecase.SetCheckoutStateUseCase_Factory>;
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.state.data.repositories.CheckoutStateRepository>): com.paypal.pyplcheckout.state.usecase.SetCheckoutStateUseCase_Factory;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.state.data.repositories.CheckoutStateRepository>);
						public get(): com.paypal.pyplcheckout.state.usecase.SetCheckoutStateUseCase;
						public static newInstance(param0: com.paypal.pyplcheckout.state.data.repositories.CheckoutStateRepository): com.paypal.pyplcheckout.state.usecase.SetCheckoutStateUseCase;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module threeds {
				export class ActionCode {
					public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.ActionCode>;
					public static ERROR: com.paypal.pyplcheckout.threeds.ActionCode;
					public static SUCCESS: com.paypal.pyplcheckout.threeds.ActionCode;
					public static NOACTION: com.paypal.pyplcheckout.threeds.ActionCode;
					public static FAILURE: com.paypal.pyplcheckout.threeds.ActionCode;
					public static CANCEL: com.paypal.pyplcheckout.threeds.ActionCode;
					public static TIMEOUT: com.paypal.pyplcheckout.threeds.ActionCode;
					public static valueOf(param0: string): com.paypal.pyplcheckout.threeds.ActionCode;
					public static values(): androidNative.Array<com.paypal.pyplcheckout.threeds.ActionCode>;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module threeds {
				export class AssetUtils {
					public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.AssetUtils>;
					public static INSTANCE: com.paypal.pyplcheckout.threeds.AssetUtils;
					public generateHtmlContentWithInputParams(param0: string, param1: java.util.HashMap<string,string>): string;
					public generate3DS10HTML(param0: string, param1: string): string;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module threeds {
				export class IThreeDsDecisionFlow {
					public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.IThreeDsDecisionFlow>;
					/**
					 * Constructs a new instance of the com.paypal.pyplcheckout.threeds.IThreeDsDecisionFlow interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						init(param0: string, param1: any): any;
					});
					public constructor();
					public init(param0: string, param1: any): any;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module threeds {
				export class ThreeDS20 {
					public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.ThreeDS20>;
					public configure(param0: globalAndroid.content.Context, param1: boolean, param2: boolean): void;
					public continueChallenge(param0: string, param1: string, param2: globalAndroid.app.Activity, param3: any): any;
					public constructor(param0: com.paypal.pyplcheckout.threeds.ThreeDs20Info);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module threeds {
				export class ThreeDS20Activity {
					public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.ThreeDS20Activity>;
					public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
					public threeDS20: com.paypal.pyplcheckout.threeds.ThreeDS20;
					public events: com.paypal.pyplcheckout.events.Events;
					public static THREE_DS_20_TRANSACTION_ID: string;
					public static THREE_DS_20_PAYMENT_AUTH_REQUEST: string;
					public static THREE_DS_20_VALIDATE_RESPONSE: string;
					public static THREE_DS_20_VALIDATE_RESPONSE_ERROR_NUMBER: string;
					public static THREE_DS_20_VALIDATE_RESPONSE_ERROR_DESCRIPTION: string;
					public getThreeDS20(): com.paypal.pyplcheckout.threeds.ThreeDS20;
					public onCreate(param0: globalAndroid.os.Bundle): void;
					public _$_findCachedViewById(param0: number): globalAndroid.view.View;
					public constructor();
					public _$_clearFindViewByIdCache(): void;
					public setThreeDS20(param0: com.paypal.pyplcheckout.threeds.ThreeDS20): void;
					public getEvents(): com.paypal.pyplcheckout.events.Events;
					public setEvents(param0: com.paypal.pyplcheckout.events.Events): void;
				}
				export module ThreeDS20Activity {
					export class Companion {
						public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.ThreeDS20Activity.Companion>;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module threeds {
				export class ThreeDS20Activity_MembersInjector extends dagger.MembersInjector<com.paypal.pyplcheckout.threeds.ThreeDS20Activity> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.ThreeDS20Activity_MembersInjector>;
					public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.threeds.ThreeDS20>, param1: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>);
					public static injectEvents(param0: com.paypal.pyplcheckout.threeds.ThreeDS20Activity, param1: com.paypal.pyplcheckout.events.Events): void;
					public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.threeds.ThreeDS20>, param1: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>): dagger.MembersInjector<com.paypal.pyplcheckout.threeds.ThreeDS20Activity>;
					public injectMembers(param0: com.paypal.pyplcheckout.threeds.ThreeDS20Activity): void;
					public static injectThreeDS20(param0: com.paypal.pyplcheckout.threeds.ThreeDS20Activity, param1: com.paypal.pyplcheckout.threeds.ThreeDS20): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module threeds {
				export class ThreeDS20_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.threeds.ThreeDS20> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.ThreeDS20_Factory>;
					public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.threeds.ThreeDs20Info>);
					public get(): com.paypal.pyplcheckout.threeds.ThreeDS20;
					public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.threeds.ThreeDs20Info>): com.paypal.pyplcheckout.threeds.ThreeDS20_Factory;
					public static newInstance(param0: com.paypal.pyplcheckout.threeds.ThreeDs20Info): com.paypal.pyplcheckout.threeds.ThreeDS20;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module threeds {
				export class ThreeDSDecisionFlow {
					public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.ThreeDSDecisionFlow>;
					public threeDSAuthenticateAndComplete(param0: any<any,any>): void;
					public logException(param0: java.lang.Exception): void;
					public startThreeDsFlow(param0: globalAndroid.app.Activity, param1: com.paypal.pyplcheckout.threeds.ThreeDSSource, param2: any<any,any>): void;
					public logDecision(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param1: string, param2: com.paypal.pyplcheckout.common.instrumentation.PEnums.Outcome, param3: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode): void;
					public constructor(param0: com.paypal.pyplcheckout.events.Events, param1: com.paypal.pyplcheckout.services.Repository, param2: com.paypal.pyplcheckout.model.DebugConfigManager, param3: globalAndroid.content.Context, param4: com.paypal.pyplcheckout.threeds.ThreeDS20, param5: com.paypal.pyplcheckout.threeds.ThreeDsDecisionFlowInfo, param6: any);
					public postStepUpFinalize(param0: string, param1: string, param2: string, param3: any): any;
				}
				export module ThreeDSDecisionFlow {
					export class Companion {
						public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.ThreeDSDecisionFlow.Companion>;
						public isThreeDSFlow(param0: com.paypal.pyplcheckout.pojo.PaymentContingencies): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module threeds {
				export class ThreeDSDecisionFlow_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.threeds.ThreeDSDecisionFlow> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.ThreeDSDecisionFlow_Factory>;
					public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param1: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param2: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>, param3: javax.inject.Provider<globalAndroid.content.Context>, param4: javax.inject.Provider<com.paypal.pyplcheckout.threeds.ThreeDS20>, param5: javax.inject.Provider<com.paypal.pyplcheckout.threeds.ThreeDsDecisionFlowInfo>, param6: javax.inject.Provider<any>): com.paypal.pyplcheckout.threeds.ThreeDSDecisionFlow_Factory;
					public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param1: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param2: javax.inject.Provider<com.paypal.pyplcheckout.model.DebugConfigManager>, param3: javax.inject.Provider<globalAndroid.content.Context>, param4: javax.inject.Provider<com.paypal.pyplcheckout.threeds.ThreeDS20>, param5: javax.inject.Provider<com.paypal.pyplcheckout.threeds.ThreeDsDecisionFlowInfo>, param6: javax.inject.Provider<any>);
					public static newInstance(param0: com.paypal.pyplcheckout.events.Events, param1: com.paypal.pyplcheckout.services.Repository, param2: com.paypal.pyplcheckout.model.DebugConfigManager, param3: globalAndroid.content.Context, param4: com.paypal.pyplcheckout.threeds.ThreeDS20, param5: com.paypal.pyplcheckout.threeds.ThreeDsDecisionFlowInfo, param6: any): com.paypal.pyplcheckout.threeds.ThreeDSDecisionFlow;
					public get(): com.paypal.pyplcheckout.threeds.ThreeDSDecisionFlow;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module threeds {
				export class ThreeDSModule {
					public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.ThreeDSModule>;
					public constructor();
					public providesThreeDsDecisionFlowInfo(): com.paypal.pyplcheckout.threeds.ThreeDsDecisionFlowInfo;
					public providesThreeDS20(param0: com.paypal.pyplcheckout.threeds.ThreeDs20Info): com.paypal.pyplcheckout.threeds.ThreeDS20;
					public providesThreeDS20Info(): com.paypal.pyplcheckout.threeds.ThreeDs20Info;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module threeds {
				export class ThreeDSModule_ProvidesThreeDS20Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.threeds.ThreeDS20> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.ThreeDSModule_ProvidesThreeDS20Factory>;
					public static create(param0: com.paypal.pyplcheckout.threeds.ThreeDSModule, param1: javax.inject.Provider<com.paypal.pyplcheckout.threeds.ThreeDs20Info>): com.paypal.pyplcheckout.threeds.ThreeDSModule_ProvidesThreeDS20Factory;
					public static providesThreeDS20(param0: com.paypal.pyplcheckout.threeds.ThreeDSModule, param1: com.paypal.pyplcheckout.threeds.ThreeDs20Info): com.paypal.pyplcheckout.threeds.ThreeDS20;
					public get(): com.paypal.pyplcheckout.threeds.ThreeDS20;
					public constructor(param0: com.paypal.pyplcheckout.threeds.ThreeDSModule, param1: javax.inject.Provider<com.paypal.pyplcheckout.threeds.ThreeDs20Info>);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module threeds {
				export class ThreeDSModule_ProvidesThreeDS20InfoFactory extends dagger.internal.Factory<com.paypal.pyplcheckout.threeds.ThreeDs20Info> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.ThreeDSModule_ProvidesThreeDS20InfoFactory>;
					public static providesThreeDS20Info(param0: com.paypal.pyplcheckout.threeds.ThreeDSModule): com.paypal.pyplcheckout.threeds.ThreeDs20Info;
					public static create(param0: com.paypal.pyplcheckout.threeds.ThreeDSModule): com.paypal.pyplcheckout.threeds.ThreeDSModule_ProvidesThreeDS20InfoFactory;
					public constructor(param0: com.paypal.pyplcheckout.threeds.ThreeDSModule);
					public get(): com.paypal.pyplcheckout.threeds.ThreeDs20Info;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module threeds {
				export class ThreeDSModule_ProvidesThreeDsDecisionFlowInfoFactory extends dagger.internal.Factory<com.paypal.pyplcheckout.threeds.ThreeDsDecisionFlowInfo> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.ThreeDSModule_ProvidesThreeDsDecisionFlowInfoFactory>;
					public get(): com.paypal.pyplcheckout.threeds.ThreeDsDecisionFlowInfo;
					public static create(param0: com.paypal.pyplcheckout.threeds.ThreeDSModule): com.paypal.pyplcheckout.threeds.ThreeDSModule_ProvidesThreeDsDecisionFlowInfoFactory;
					public constructor(param0: com.paypal.pyplcheckout.threeds.ThreeDSModule);
					public static providesThreeDsDecisionFlowInfo(param0: com.paypal.pyplcheckout.threeds.ThreeDSModule): com.paypal.pyplcheckout.threeds.ThreeDsDecisionFlowInfo;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module threeds {
				export class ThreeDSSource {
					public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.ThreeDSSource>;
					public static ADD_CARD: com.paypal.pyplcheckout.threeds.ThreeDSSource;
					public static CTA: com.paypal.pyplcheckout.threeds.ThreeDSSource;
					public static NONE: com.paypal.pyplcheckout.threeds.ThreeDSSource;
					public static values(): androidNative.Array<com.paypal.pyplcheckout.threeds.ThreeDSSource>;
					public static valueOf(param0: string): com.paypal.pyplcheckout.threeds.ThreeDSSource;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module threeds {
				export abstract class ThreeDSState {
					public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.ThreeDSState>;
					public getSource(): com.paypal.pyplcheckout.threeds.ThreeDSSource;
				}
				export module ThreeDSState {
					export class Error extends com.paypal.pyplcheckout.threeds.ThreeDSState {
						public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.ThreeDSState.Error>;
						public copy(param0: com.paypal.pyplcheckout.threeds.ThreeDSSource): com.paypal.pyplcheckout.threeds.ThreeDSState.Error;
						public constructor(param0: com.paypal.pyplcheckout.threeds.ThreeDSSource);
						public component1(): com.paypal.pyplcheckout.threeds.ThreeDSSource;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getSource(): com.paypal.pyplcheckout.threeds.ThreeDSSource;
						public toString(): string;
					}
					export class Finished extends com.paypal.pyplcheckout.threeds.ThreeDSState {
						public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.ThreeDSState.Finished>;
						public constructor(param0: com.paypal.pyplcheckout.threeds.ThreeDSSource);
						public component1(): com.paypal.pyplcheckout.threeds.ThreeDSSource;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getSource(): com.paypal.pyplcheckout.threeds.ThreeDSSource;
						public copy(param0: com.paypal.pyplcheckout.threeds.ThreeDSSource): com.paypal.pyplcheckout.threeds.ThreeDSState.Finished;
						public toString(): string;
					}
					export class Loading extends com.paypal.pyplcheckout.threeds.ThreeDSState {
						public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.ThreeDSState.Loading>;
						public constructor(param0: com.paypal.pyplcheckout.threeds.ThreeDSSource);
						public component1(): com.paypal.pyplcheckout.threeds.ThreeDSSource;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getSource(): com.paypal.pyplcheckout.threeds.ThreeDSSource;
						public copy(param0: com.paypal.pyplcheckout.threeds.ThreeDSSource): com.paypal.pyplcheckout.threeds.ThreeDSState.Loading;
						public toString(): string;
					}
					export class None extends com.paypal.pyplcheckout.threeds.ThreeDSState {
						public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.ThreeDSState.None>;
						public static INSTANCE: com.paypal.pyplcheckout.threeds.ThreeDSState.None;
					}
					export class Started extends com.paypal.pyplcheckout.threeds.ThreeDSState {
						public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.ThreeDSState.Started>;
						public constructor(param0: com.paypal.pyplcheckout.threeds.ThreeDSSource);
						public copy(param0: com.paypal.pyplcheckout.threeds.ThreeDSSource): com.paypal.pyplcheckout.threeds.ThreeDSState.Started;
						public component1(): com.paypal.pyplcheckout.threeds.ThreeDSSource;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getSource(): com.paypal.pyplcheckout.threeds.ThreeDSSource;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module threeds {
				export class ThreeDs20Info {
					public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.ThreeDs20Info>;
					public constructor();
					public continueChallenge(param0: string, param1: string, param2: globalAndroid.app.Activity, param3: any): any;
					public setUp(param0: globalAndroid.content.Context, param1: boolean, param2: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module threeds {
				export class ThreeDsDecisionFlowInfo extends com.paypal.pyplcheckout.threeds.IThreeDsDecisionFlow {
					public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.ThreeDsDecisionFlowInfo>;
					public constructor();
					public init(param0: string, param1: any): any;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module threeds {
				export abstract class ThreeDsException {
					public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.ThreeDsException>;
					public getExtras(): com.paypal.pyplcheckout.threeds.ThreeDsExceptionData;
				}
				export module ThreeDsException {
					export class ThreeDSAuthenticateException extends com.paypal.pyplcheckout.threeds.ThreeDsException {
						public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.ThreeDsException.ThreeDSAuthenticateException>;
						public constructor(param0: com.paypal.pyplcheckout.threeds.ThreeDsExceptionData);
					}
					export class ThreeDSCardinalStepUpFailure extends com.paypal.pyplcheckout.threeds.ThreeDsException {
						public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.ThreeDsException.ThreeDSCardinalStepUpFailure>;
						public constructor(param0: com.paypal.pyplcheckout.threeds.ThreeDsExceptionData);
					}
					export class ThreeDSJwtException extends com.paypal.pyplcheckout.threeds.ThreeDsException {
						public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.ThreeDsException.ThreeDSJwtException>;
						public constructor(param0: com.paypal.pyplcheckout.threeds.ThreeDsExceptionData);
					}
					export class ThreeDSLookUpException extends com.paypal.pyplcheckout.threeds.ThreeDsException {
						public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.ThreeDsException.ThreeDSLookUpException>;
						public constructor(param0: com.paypal.pyplcheckout.threeds.ThreeDsExceptionData);
					}
					export class ThreeDSResolveContingencyException extends com.paypal.pyplcheckout.threeds.ThreeDsException {
						public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.ThreeDsException.ThreeDSResolveContingencyException>;
						public constructor(param0: com.paypal.pyplcheckout.threeds.ThreeDsExceptionData);
					}
					export class ThreeDSUnsupportedFlowException extends com.paypal.pyplcheckout.threeds.ThreeDsException {
						public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.ThreeDsException.ThreeDSUnsupportedFlowException>;
						public constructor(param0: com.paypal.pyplcheckout.threeds.ThreeDsExceptionData);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module threeds {
				export class ThreeDsExceptionData {
					public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.ThreeDsExceptionData>;
					public component3(): com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
					public component5(): string;
					public getTransitionName(): com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName;
					public component2(): com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
					public component7(): string;
					public copy(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.ErrorType, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param2: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param3: java.lang.Exception, param4: string, param5: string, param6: string): com.paypal.pyplcheckout.threeds.ThreeDsExceptionData;
					public getErrorType(): com.paypal.pyplcheckout.common.instrumentation.PEnums.ErrorType;
					public equals(param0: any): boolean;
					public toString(): string;
					public getCode(): com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
					public component1(): com.paypal.pyplcheckout.common.instrumentation.PEnums.ErrorType;
					public component6(): string;
					public constructor(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.ErrorType, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param2: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param3: java.lang.Exception, param4: string, param5: string, param6: string);
					public getException(): java.lang.Exception;
					public getMessage(): string;
					public hashCode(): number;
					public getDetails(): string;
					public getInfoMessage(): string;
					public component4(): java.lang.Exception;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module threeds {
				export class ValidateResponseAlias {
					public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.ValidateResponseAlias>;
					public getErrorDescription(): string;
					public copy(param0: string, param1: number, param2: string): com.paypal.pyplcheckout.threeds.ValidateResponseAlias;
					public constructor(param0: string, param1: number, param2: string);
					public describeContents(): number;
					public getErrorNumber(): number;
					public component3(): string;
					public equals(param0: any): boolean;
					public constructor(param0: globalAndroid.os.Parcel);
					public toString(): string;
					public component1(): string;
					public component2(): number;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public hashCode(): number;
					public getActionCode(): string;
				}
				export module ValidateResponseAlias {
					export class CREATOR extends globalAndroid.os.Parcelable.Creator<com.paypal.pyplcheckout.threeds.ValidateResponseAlias> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.ValidateResponseAlias.CREATOR>;
						public newArray(param0: number): androidNative.Array<com.paypal.pyplcheckout.threeds.ValidateResponseAlias>;
						public createFromParcel(param0: globalAndroid.os.Parcel): com.paypal.pyplcheckout.threeds.ValidateResponseAlias;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module threeds {
				export module model {
					export class PayPalThreeDSV1ViewContentPageConfig extends com.paypal.pyplcheckout.navigation.ContentPage {
						public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.model.PayPalThreeDSV1ViewContentPageConfig>;
						public setFooterContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
						public constructor();
						public getBodyContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public setHeaderContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
						public getHeaderContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
						public setBodyContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
						public getHeaderContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public getTopBannerContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public constructor(param0: globalAndroid.content.Context, param1: androidx.fragment.app.Fragment, param2: com.paypal.pyplcheckout.threeds.model.PayPalThreeDSV1ViewListenerImpl, param3: com.paypal.pyplcheckout.navigation.ContentPage);
						public removeContentViewListeners(): void;
						public getBodyContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
						public addViewsToContainer(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param1: globalAndroid.view.ViewGroup): void;
						public removeViewsFromContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup): void;
						public getFooterContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public addViewsToContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup): void;
						public getFooterContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
						public removeViewsFromContainer(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param1: globalAndroid.view.ViewGroup): void;
						public constructor(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param1: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param2: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param3: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>);
						public addViewsToContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup, param2: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module threeds {
				export module model {
					export class PayPalThreeDSV1ViewListenerImpl extends com.paypal.pyplcheckout.threeds.view.interfaces.PayPalThreeDSV1ViewListener {
						public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.model.PayPalThreeDSV1ViewListenerImpl>;
						public onPayPalBackArrowClick(): void;
						public constructor();
						public constructor(param0: com.paypal.pyplcheckout.threeds.view.interfaces.PayPalThreeDSV1HeaderViewListener, param1: com.paypal.pyplcheckout.threeds.view.interfaces.PayPalThreeDSV1StepUpViewListener);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module threeds {
				export module model {
					export class ThreeDSTopBanner {
						public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.model.ThreeDSTopBanner>;
						public constructor();
						public hashCode(): number;
						public equals(param0: any): boolean;
						public constructor(param0: boolean);
						public getHasExtraFI(): boolean;
						public component1(): boolean;
						public copy(param0: boolean): com.paypal.pyplcheckout.threeds.model.ThreeDSTopBanner;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module threeds {
				export module usecase {
					export class AddCardThreeDsException {
						public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.usecase.AddCardThreeDsException>;
						public getMessage(): string;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module threeds {
				export module usecase {
					export abstract class AddCardThreeDsState {
						public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.usecase.AddCardThreeDsState>;
					}
					export module AddCardThreeDsState {
						export class Error extends com.paypal.pyplcheckout.threeds.usecase.AddCardThreeDsState {
							public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.usecase.AddCardThreeDsState.Error>;
							public component1(): java.lang.Exception;
							public hashCode(): number;
							public constructor(param0: java.lang.Exception);
							public toString(): string;
							public equals(param0: any): boolean;
							public getError(): java.lang.Exception;
							public copy(param0: java.lang.Exception): com.paypal.pyplcheckout.threeds.usecase.AddCardThreeDsState.Error;
						}
						export class Loading extends com.paypal.pyplcheckout.threeds.usecase.AddCardThreeDsState {
							public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.usecase.AddCardThreeDsState.Loading>;
							public static INSTANCE: com.paypal.pyplcheckout.threeds.usecase.AddCardThreeDsState.Loading;
						}
						export class ResolvingThreeDs extends com.paypal.pyplcheckout.threeds.usecase.AddCardThreeDsState {
							public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.usecase.AddCardThreeDsState.ResolvingThreeDs>;
							public static INSTANCE: com.paypal.pyplcheckout.threeds.usecase.AddCardThreeDsState.ResolvingThreeDs;
						}
						export class Success extends com.paypal.pyplcheckout.threeds.usecase.AddCardThreeDsState {
							public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.usecase.AddCardThreeDsState.Success>;
							public static INSTANCE: com.paypal.pyplcheckout.threeds.usecase.AddCardThreeDsState.Success;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module threeds {
				export module usecase {
					export class DuplicatedContingencyException {
						public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.usecase.DuplicatedContingencyException>;
						public getMessage(): string;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module threeds {
				export module usecase {
					export class StartAddCardThreeDsUseCase {
						public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.usecase.StartAddCardThreeDsUseCase>;
						public invoke(param0: globalAndroid.app.Activity, param1: string, param2: any): any;
						public constructor(param0: com.paypal.pyplcheckout.services.Repository, param1: com.paypal.pyplcheckout.threeds.usecase.ThreeDSUseCase, param2: kotlinx.coroutines.CoroutineScope);
					}
					export module StartAddCardThreeDsUseCase {
						export class Companion {
							public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.usecase.StartAddCardThreeDsUseCase.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module threeds {
				export module usecase {
					export class StartAddCardThreeDsUseCase_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.threeds.usecase.StartAddCardThreeDsUseCase> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.usecase.StartAddCardThreeDsUseCase_Factory>;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param1: javax.inject.Provider<com.paypal.pyplcheckout.threeds.usecase.ThreeDSUseCase>, param2: javax.inject.Provider<kotlinx.coroutines.CoroutineScope>);
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param1: javax.inject.Provider<com.paypal.pyplcheckout.threeds.usecase.ThreeDSUseCase>, param2: javax.inject.Provider<kotlinx.coroutines.CoroutineScope>): com.paypal.pyplcheckout.threeds.usecase.StartAddCardThreeDsUseCase_Factory;
						public static newInstance(param0: com.paypal.pyplcheckout.services.Repository, param1: com.paypal.pyplcheckout.threeds.usecase.ThreeDSUseCase, param2: kotlinx.coroutines.CoroutineScope): com.paypal.pyplcheckout.threeds.usecase.StartAddCardThreeDsUseCase;
						public get(): com.paypal.pyplcheckout.threeds.usecase.StartAddCardThreeDsUseCase;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module threeds {
				export module usecase {
					export class ThreeDSUseCase {
						public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.usecase.ThreeDSUseCase>;
						public launch3DS(param0: globalAndroid.app.Activity, param1: com.paypal.pyplcheckout.threeds.ThreeDSSource): kotlinx.coroutines.flow.StateFlow<com.paypal.pyplcheckout.threeds.ThreeDSState>;
						public constructor(param0: com.paypal.pyplcheckout.events.Events, param1: kotlinx.coroutines.CoroutineScope, param2: com.paypal.pyplcheckout.threeds.ThreeDSDecisionFlow, param3: com.paypal.pyplcheckout.services.Repository);
						public invoke(): kotlinx.coroutines.flow.StateFlow<com.paypal.pyplcheckout.threeds.ThreeDSState>;
					}
					export module ThreeDSUseCase {
						export class Companion {
							public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.usecase.ThreeDSUseCase.Companion>;
						}
						export class WhenMappings {
							public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.usecase.ThreeDSUseCase.WhenMappings>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module threeds {
				export module usecase {
					export class ThreeDSUseCase_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.threeds.usecase.ThreeDSUseCase> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.usecase.ThreeDSUseCase_Factory>;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param1: javax.inject.Provider<kotlinx.coroutines.CoroutineScope>, param2: javax.inject.Provider<com.paypal.pyplcheckout.threeds.ThreeDSDecisionFlow>, param3: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>);
						public get(): com.paypal.pyplcheckout.threeds.usecase.ThreeDSUseCase;
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param1: javax.inject.Provider<kotlinx.coroutines.CoroutineScope>, param2: javax.inject.Provider<com.paypal.pyplcheckout.threeds.ThreeDSDecisionFlow>, param3: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>): com.paypal.pyplcheckout.threeds.usecase.ThreeDSUseCase_Factory;
						public static newInstance(param0: com.paypal.pyplcheckout.events.Events, param1: kotlinx.coroutines.CoroutineScope, param2: com.paypal.pyplcheckout.threeds.ThreeDSDecisionFlow, param3: com.paypal.pyplcheckout.services.Repository): com.paypal.pyplcheckout.threeds.usecase.ThreeDSUseCase;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module threeds {
				export module view {
					export module customviews {
						export class PayPalThreeDSV1HeaderView implements com.paypal.pyplcheckout.navigation.interfaces.ContentView {
							public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.view.customviews.PayPalThreeDSV1HeaderView>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public static TAG: string;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment);
							public getContentViewMinHeight(): number;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment, param4: com.paypal.pyplcheckout.threeds.view.interfaces.PayPalThreeDSV1HeaderViewListener);
							public removeListeners(): void;
							public getViewId(): string;
							public getIsAnchoredToBottomSheet(): boolean;
							public onClick(param0: globalAndroid.view.View): void;
							public getFragment(): androidx.fragment.app.Fragment;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public _$_clearFindViewByIdCache(): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public constructor(param0: globalAndroid.content.Context);
							public setContentViewVisibility(param0: number): void;
						}
						export module PayPalThreeDSV1HeaderView {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.view.customviews.PayPalThreeDSV1HeaderView.Companion>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module threeds {
				export module view {
					export module customviews {
						export class PayPalThreeDSV1StepUpView implements com.paypal.pyplcheckout.navigation.interfaces.ContentView {
							public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.view.customviews.PayPalThreeDSV1StepUpView>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public static TAG: string;
							public getViewId(): string;
							public getIsAnchoredToBottomSheet(): boolean;
							public getFragment(): androidx.fragment.app.Fragment;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public getContentViewMinHeight(): number;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment, param4: com.paypal.pyplcheckout.threeds.view.interfaces.PayPalThreeDSV1StepUpViewListener);
							public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							public _$_clearFindViewByIdCache(): void;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public removeListeners(): void;
							public setContentViewVisibility(param0: number): void;
						}
						export module PayPalThreeDSV1StepUpView {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.view.customviews.PayPalThreeDSV1StepUpView.Companion>;
							}
							export class ThreeDsJavascriptInterface {
								public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.view.customviews.PayPalThreeDSV1StepUpView.ThreeDsJavascriptInterface>;
								public onSubmitClicked(): void;
								public constructor(param0: com.paypal.pyplcheckout.threeds.view.customviews.PayPalThreeDSV1StepUpView);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module threeds {
				export module view {
					export module fragments {
						export class PYPLThreeDSV1Fragment extends com.paypal.pyplcheckout.home.view.BaseFragment {
							public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.view.fragments.PYPLThreeDSV1Fragment>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public static TAG: string;
							public constructor();
							public onDestroyView(): void;
							public getViewId(): string;
							public onActivityCreated(param0: globalAndroid.os.Bundle): void;
							public static newInstance(): com.paypal.pyplcheckout.threeds.view.fragments.PYPLThreeDSV1Fragment;
							public onCreateView(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: globalAndroid.os.Bundle): globalAndroid.view.View;
							public _$_clearFindViewByIdCache(): void;
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
						}
						export module PYPLThreeDSV1Fragment {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.view.fragments.PYPLThreeDSV1Fragment.Companion>;
								public newInstance(): com.paypal.pyplcheckout.threeds.view.fragments.PYPLThreeDSV1Fragment;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module threeds {
				export module view {
					export module interfaces {
						export class PayPalThreeDSV1HeaderViewListener {
							public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.view.interfaces.PayPalThreeDSV1HeaderViewListener>;
							/**
							 * Constructs a new instance of the com.paypal.pyplcheckout.threeds.view.interfaces.PayPalThreeDSV1HeaderViewListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onPayPalBackArrowClick(): void;
							});
							public constructor();
							public onPayPalBackArrowClick(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module threeds {
				export module view {
					export module interfaces {
						export class PayPalThreeDSV1StepUpViewListener {
							public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.view.interfaces.PayPalThreeDSV1StepUpViewListener>;
							/**
							 * Constructs a new instance of the com.paypal.pyplcheckout.threeds.view.interfaces.PayPalThreeDSV1StepUpViewListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module threeds {
				export module view {
					export module interfaces {
						export class PayPalThreeDSV1ViewListener implements com.paypal.pyplcheckout.threeds.view.interfaces.PayPalThreeDSV1StepUpViewListener, com.paypal.pyplcheckout.threeds.view.interfaces.PayPalThreeDSV1HeaderViewListener {
							public static class: java.lang.Class<com.paypal.pyplcheckout.threeds.view.interfaces.PayPalThreeDSV1ViewListener>;
							/**
							 * Constructs a new instance of the com.paypal.pyplcheckout.threeds.view.interfaces.PayPalThreeDSV1ViewListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onPayPalBackArrowClick(): void;
							});
							public constructor();
							public onPayPalBackArrowClick(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module userprofile {
				export module dao {
					export class ClientIdRepository {
						public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.dao.ClientIdRepository>;
						public constructor();
						public cacheClientIdChanged(): void;
						public getCachedClientId(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module userprofile {
				export module dao {
					export class ClientIdRepository_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.userprofile.dao.ClientIdRepository> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.dao.ClientIdRepository_Factory>;
						public constructor();
						public get(): com.paypal.pyplcheckout.userprofile.dao.ClientIdRepository;
						public static create(): com.paypal.pyplcheckout.userprofile.dao.ClientIdRepository_Factory;
						public static newInstance(): com.paypal.pyplcheckout.userprofile.dao.ClientIdRepository;
					}
					export module ClientIdRepository_Factory {
						export class InstanceHolder {
							public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.dao.ClientIdRepository_Factory.InstanceHolder>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module userprofile {
				export module dao {
					export class SharedPrefsUserDao extends com.paypal.pyplcheckout.userprofile.dao.UserDao {
						public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.dao.SharedPrefsUserDao>;
						public constructor(param0: globalAndroid.content.Context, param1: com.google.gson.Gson);
						public getLoggedUser(): com.paypal.pyplcheckout.pojo.User;
						public cacheLoggedUser(param0: com.paypal.pyplcheckout.pojo.User): void;
						public clearUser(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module userprofile {
				export module dao {
					export class SharedPrefsUserDao_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.userprofile.dao.SharedPrefsUserDao> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.dao.SharedPrefsUserDao_Factory>;
						public static newInstance(param0: globalAndroid.content.Context, param1: com.google.gson.Gson): com.paypal.pyplcheckout.userprofile.dao.SharedPrefsUserDao;
						public constructor(param0: javax.inject.Provider<globalAndroid.content.Context>, param1: javax.inject.Provider<com.google.gson.Gson>);
						public get(): com.paypal.pyplcheckout.userprofile.dao.SharedPrefsUserDao;
						public static create(param0: javax.inject.Provider<globalAndroid.content.Context>, param1: javax.inject.Provider<com.google.gson.Gson>): com.paypal.pyplcheckout.userprofile.dao.SharedPrefsUserDao_Factory;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module userprofile {
				export module dao {
					export class UserDao {
						public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.dao.UserDao>;
						/**
						 * Constructs a new instance of the com.paypal.pyplcheckout.userprofile.dao.UserDao interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							cacheLoggedUser(param0: com.paypal.pyplcheckout.pojo.User): void;
							getLoggedUser(): com.paypal.pyplcheckout.pojo.User;
							clearUser(): void;
						});
						public constructor();
						public getLoggedUser(): com.paypal.pyplcheckout.pojo.User;
						public cacheLoggedUser(param0: com.paypal.pyplcheckout.pojo.User): void;
						public clearUser(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module userprofile {
				export module di {
					export class UserModule {
						public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.di.UserModule>;
						/**
						 * Constructs a new instance of the com.paypal.pyplcheckout.userprofile.di.UserModule interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							provideUserDao(param0: com.paypal.pyplcheckout.userprofile.dao.SharedPrefsUserDao): com.paypal.pyplcheckout.userprofile.dao.UserDao;
						});
						public constructor();
						public provideUserDao(param0: com.paypal.pyplcheckout.userprofile.dao.SharedPrefsUserDao): com.paypal.pyplcheckout.userprofile.dao.UserDao;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module userprofile {
				export module model {
					export abstract class UserCountry {
						public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.model.UserCountry>;
						public getCountry(): string;
						public getLocale(): string;
					}
					export module UserCountry {
						export class EU extends com.paypal.pyplcheckout.userprofile.model.UserCountry {
							public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.model.UserCountry.EU>;
							public component2(): string;
							public hashCode(): number;
							public constructor(param0: string, param1: string);
							public getLocale(): string;
							public toString(): string;
							public equals(param0: any): boolean;
							public copy(param0: string, param1: string): com.paypal.pyplcheckout.userprofile.model.UserCountry.EU;
							public getCountry(): string;
							public component1(): string;
						}
						export class Other extends com.paypal.pyplcheckout.userprofile.model.UserCountry {
							public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.model.UserCountry.Other>;
							public component2(): string;
							public hashCode(): number;
							public constructor(param0: string, param1: string);
							public getLocale(): string;
							public toString(): string;
							public equals(param0: any): boolean;
							public getCountry(): string;
							public component1(): string;
							public copy(param0: string, param1: string): com.paypal.pyplcheckout.userprofile.model.UserCountry.Other;
						}
						export class US extends com.paypal.pyplcheckout.userprofile.model.UserCountry {
							public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.model.UserCountry.US>;
							public hashCode(): number;
							public constructor(param0: string);
							public getLocale(): string;
							public toString(): string;
							public copy(param0: string): com.paypal.pyplcheckout.userprofile.model.UserCountry.US;
							public equals(param0: any): boolean;
							public component1(): string;
						}
						export class Unknown extends com.paypal.pyplcheckout.userprofile.model.UserCountry {
							public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.model.UserCountry.Unknown>;
							public static INSTANCE: com.paypal.pyplcheckout.userprofile.model.UserCountry.Unknown;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module userprofile {
				export module model {
					export class UserProfileViewContentPageConfig extends com.paypal.pyplcheckout.navigation.ContentPage {
						public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.model.UserProfileViewContentPageConfig>;
						public setFooterContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
						public constructor();
						public getBodyContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public setHeaderContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
						public getHeaderContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
						public setBodyContentViewsList(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>): void;
						public getHeaderContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public constructor(param0: globalAndroid.content.Context, param1: androidx.fragment.app.Fragment, param2: com.paypal.pyplcheckout.userprofile.model.UserProfileViewListenerImpl, param3: com.paypal.pyplcheckout.navigation.ContentPage);
						public getTopBannerContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public getBodyContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
						public addViewsToContainer(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param1: globalAndroid.view.ViewGroup): void;
						public removeViewsFromContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup): void;
						public getFooterContentViewsList(): java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>;
						public addViewsToContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup): void;
						public getFooterContentViewById(param0: string): com.paypal.pyplcheckout.navigation.interfaces.ContentView;
						public removeViewsFromContainer(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param1: globalAndroid.view.ViewGroup): void;
						public constructor(param0: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param1: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param2: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>, param3: java.util.List<com.paypal.pyplcheckout.navigation.interfaces.ContentView>);
						public addViewsToContainer(param0: com.paypal.pyplcheckout.navigation.interfaces.ContentView, param1: globalAndroid.view.ViewGroup, param2: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module userprofile {
				export module model {
					export class UserProfileViewListenerImpl extends com.paypal.pyplcheckout.userprofile.view.interfaces.UserProfileViewListener {
						public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.model.UserProfileViewListenerImpl>;
						public onPayPalBackArrowClick(): void;
						public onPayPalLogoutClick(): void;
						public constructor();
						public onPayPalTermsClick(): void;
						public onPayPalPrivacyClick(): void;
						public constructor(param0: com.paypal.pyplcheckout.userprofile.view.interfaces.PayPalLogoutViewListener, param1: com.paypal.pyplcheckout.userprofile.view.interfaces.PayPalPoliciesViewListener, param2: com.paypal.pyplcheckout.userprofile.view.interfaces.PayPalPrivacyViewListener, param3: com.paypal.pyplcheckout.userprofile.view.interfaces.PayPalProfileHeaderViewListener, param4: com.paypal.pyplcheckout.userprofile.view.interfaces.PayPalTermsViewListener);
						public onPayPalPoliciesClick(): void;
						public onPayPalProfileImageClick(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module userprofile {
				export module model {
					export abstract class UserState {
						public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.model.UserState>;
					}
					export module UserState {
						export class Empty extends com.paypal.pyplcheckout.userprofile.model.UserState {
							public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.model.UserState.Empty>;
							public static INSTANCE: com.paypal.pyplcheckout.userprofile.model.UserState.Empty;
						}
						export class Error extends com.paypal.pyplcheckout.userprofile.model.UserState {
							public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.model.UserState.Error>;
							public component1(): java.lang.Exception;
							public hashCode(): number;
							public constructor(param0: java.lang.Exception);
							public toString(): string;
							public equals(param0: any): boolean;
							public getException(): java.lang.Exception;
							public copy(param0: java.lang.Exception): com.paypal.pyplcheckout.userprofile.model.UserState.Error;
						}
						export class Success extends com.paypal.pyplcheckout.userprofile.model.UserState {
							public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.model.UserState.Success>;
							public constructor(param0: com.paypal.pyplcheckout.pojo.User);
							public getUser(): com.paypal.pyplcheckout.pojo.User;
							public copy(param0: com.paypal.pyplcheckout.pojo.User): com.paypal.pyplcheckout.userprofile.model.UserState.Success;
							public hashCode(): number;
							public component1(): com.paypal.pyplcheckout.pojo.User;
							public toString(): string;
							public equals(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module userprofile {
				export module usecase {
					export class CacheClientIdUseCase {
						public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.usecase.CacheClientIdUseCase>;
						public invoke(): void;
						public constructor(param0: com.paypal.pyplcheckout.userprofile.dao.ClientIdRepository);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module userprofile {
				export module usecase {
					export class CacheClientIdUseCase_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.userprofile.usecase.CacheClientIdUseCase> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.usecase.CacheClientIdUseCase_Factory>;
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.userprofile.dao.ClientIdRepository>): com.paypal.pyplcheckout.userprofile.usecase.CacheClientIdUseCase_Factory;
						public get(): com.paypal.pyplcheckout.userprofile.usecase.CacheClientIdUseCase;
						public static newInstance(param0: com.paypal.pyplcheckout.userprofile.dao.ClientIdRepository): com.paypal.pyplcheckout.userprofile.usecase.CacheClientIdUseCase;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.userprofile.dao.ClientIdRepository>);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module userprofile {
				export module usecase {
					export class GetCachedClientIdUseCase {
						public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.usecase.GetCachedClientIdUseCase>;
						public invoke(): boolean;
						public constructor(param0: com.paypal.pyplcheckout.userprofile.dao.ClientIdRepository);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module userprofile {
				export module usecase {
					export class GetCachedClientIdUseCase_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.userprofile.usecase.GetCachedClientIdUseCase> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.usecase.GetCachedClientIdUseCase_Factory>;
						public get(): com.paypal.pyplcheckout.userprofile.usecase.GetCachedClientIdUseCase;
						public static newInstance(param0: com.paypal.pyplcheckout.userprofile.dao.ClientIdRepository): com.paypal.pyplcheckout.userprofile.usecase.GetCachedClientIdUseCase;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.userprofile.dao.ClientIdRepository>);
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.userprofile.dao.ClientIdRepository>): com.paypal.pyplcheckout.userprofile.usecase.GetCachedClientIdUseCase_Factory;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module userprofile {
				export module usecase {
					export class GetUserCountryUseCase {
						public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.usecase.GetUserCountryUseCase>;
						public constructor(param0: com.paypal.pyplcheckout.userprofile.usecase.GetUserUseCase, param1: kotlinx.coroutines.CoroutineScope);
						public invoke(): kotlinx.coroutines.flow.StateFlow<com.paypal.pyplcheckout.userprofile.model.UserCountry>;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module userprofile {
				export module usecase {
					export class GetUserCountryUseCase_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.userprofile.usecase.GetUserCountryUseCase> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.usecase.GetUserCountryUseCase_Factory>;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.userprofile.usecase.GetUserUseCase>, param1: javax.inject.Provider<kotlinx.coroutines.CoroutineScope>);
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.userprofile.usecase.GetUserUseCase>, param1: javax.inject.Provider<kotlinx.coroutines.CoroutineScope>): com.paypal.pyplcheckout.userprofile.usecase.GetUserCountryUseCase_Factory;
						public static newInstance(param0: com.paypal.pyplcheckout.userprofile.usecase.GetUserUseCase, param1: kotlinx.coroutines.CoroutineScope): com.paypal.pyplcheckout.userprofile.usecase.GetUserCountryUseCase;
						public get(): com.paypal.pyplcheckout.userprofile.usecase.GetUserCountryUseCase;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module userprofile {
				export module usecase {
					export class GetUserUseCase {
						public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.usecase.GetUserUseCase>;
						public constructor(param0: com.paypal.pyplcheckout.services.Repository, param1: com.paypal.pyplcheckout.events.Events, param2: kotlinx.coroutines.CoroutineScope);
						public invoke(): kotlinx.coroutines.flow.StateFlow<com.paypal.pyplcheckout.userprofile.model.UserState>;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module userprofile {
				export module usecase {
					export class GetUserUseCase_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.userprofile.usecase.GetUserUseCase> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.usecase.GetUserUseCase_Factory>;
						public static newInstance(param0: com.paypal.pyplcheckout.services.Repository, param1: com.paypal.pyplcheckout.events.Events, param2: kotlinx.coroutines.CoroutineScope): com.paypal.pyplcheckout.userprofile.usecase.GetUserUseCase;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param1: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param2: javax.inject.Provider<kotlinx.coroutines.CoroutineScope>);
						public get(): com.paypal.pyplcheckout.userprofile.usecase.GetUserUseCase;
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param1: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param2: javax.inject.Provider<kotlinx.coroutines.CoroutineScope>): com.paypal.pyplcheckout.userprofile.usecase.GetUserUseCase_Factory;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module userprofile {
				export module view {
					export module customviews {
						export class PayPalLegalAgreementsView implements com.paypal.pyplcheckout.navigation.interfaces.ContentView {
							public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.view.customviews.PayPalLegalAgreementsView>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public static TAG: string;
							public getContentViewMinHeight(): number;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public removeListeners(): void;
							public getViewId(): string;
							public getIsAnchoredToBottomSheet(): boolean;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
							public _$_clearFindViewByIdCache(): void;
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public constructor(param0: globalAndroid.content.Context);
							public setContentViewVisibility(param0: number): void;
						}
						export module PayPalLegalAgreementsView {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.view.customviews.PayPalLegalAgreementsView.Companion>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module userprofile {
				export module view {
					export module customviews {
						export class PayPalLogoutView implements com.paypal.pyplcheckout.navigation.interfaces.ContentView, com.paypal.pyplcheckout.navigation.interfaces.ICustomViewsViewModel {
							public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.view.customviews.PayPalLogoutView>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public static TAG: string;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment);
							public getContentViewMinHeight(): number;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public initViewModelObservers(): void;
							public removeListeners(): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment, param4: com.paypal.pyplcheckout.userprofile.view.interfaces.PayPalLogoutViewListener);
							public getViewId(): string;
							public getIsAnchoredToBottomSheet(): boolean;
							public onClick(param0: globalAndroid.view.View): void;
							public getFragment(): androidx.fragment.app.Fragment;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public getLifecycleOwner(param0: globalAndroid.view.View): androidx.lifecycle.LifecycleOwner;
							public _$_clearFindViewByIdCache(): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public getComponentActivity(param0: globalAndroid.content.Context): androidx.activity.ComponentActivity;
							public constructor(param0: globalAndroid.content.Context);
							public setContentViewVisibility(param0: number): void;
						}
						export module PayPalLogoutView {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.view.customviews.PayPalLogoutView.Companion>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module userprofile {
				export module view {
					export module customviews {
						export class PayPalPoliciesView implements com.paypal.pyplcheckout.navigation.interfaces.ContentView, com.paypal.pyplcheckout.navigation.interfaces.ICustomViewsViewModel {
							public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.view.customviews.PayPalPoliciesView>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public static TAG: string;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment);
							public getContentViewMinHeight(): number;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public initViewModelObservers(): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment, param4: com.paypal.pyplcheckout.userprofile.view.interfaces.PayPalPoliciesViewListener);
							public removeListeners(): void;
							public getViewId(): string;
							public getIsAnchoredToBottomSheet(): boolean;
							public onClick(param0: globalAndroid.view.View): void;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public getLifecycleOwner(param0: globalAndroid.view.View): androidx.lifecycle.LifecycleOwner;
							public _$_clearFindViewByIdCache(): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public getComponentActivity(param0: globalAndroid.content.Context): androidx.activity.ComponentActivity;
							public constructor(param0: globalAndroid.content.Context);
							public setContentViewVisibility(param0: number): void;
						}
						export module PayPalPoliciesView {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.view.customviews.PayPalPoliciesView.Companion>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module userprofile {
				export module view {
					export module customviews {
						export class PayPalPrivacyView implements com.paypal.pyplcheckout.navigation.interfaces.ContentView, com.paypal.pyplcheckout.navigation.interfaces.ICustomViewsViewModel {
							public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.view.customviews.PayPalPrivacyView>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public static TAG: string;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment);
							public getContentViewMinHeight(): number;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public initViewModelObservers(): void;
							public removeListeners(): void;
							public getViewId(): string;
							public getIsAnchoredToBottomSheet(): boolean;
							public onClick(param0: globalAndroid.view.View): void;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment, param4: com.paypal.pyplcheckout.userprofile.view.interfaces.PayPalPrivacyViewListener);
							public getLifecycleOwner(param0: globalAndroid.view.View): androidx.lifecycle.LifecycleOwner;
							public _$_clearFindViewByIdCache(): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public getComponentActivity(param0: globalAndroid.content.Context): androidx.activity.ComponentActivity;
							public constructor(param0: globalAndroid.content.Context);
							public setContentViewVisibility(param0: number): void;
						}
						export module PayPalPrivacyView {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.view.customviews.PayPalPrivacyView.Companion>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module userprofile {
				export module view {
					export module customviews {
						export class PayPalProfileHeaderView implements com.paypal.pyplcheckout.navigation.interfaces.ContentView, com.paypal.pyplcheckout.navigation.interfaces.ICustomViewsViewModel {
							public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.view.customviews.PayPalProfileHeaderView>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public static TAG: string;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment);
							public getContentViewMinHeight(): number;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public initViewModelObservers(): void;
							public removeListeners(): void;
							public getViewId(): string;
							public getIsAnchoredToBottomSheet(): boolean;
							public onClick(param0: globalAndroid.view.View): void;
							public getFragment(): androidx.fragment.app.Fragment;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public getLifecycleOwner(param0: globalAndroid.view.View): androidx.lifecycle.LifecycleOwner;
							public _$_clearFindViewByIdCache(): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public getComponentActivity(param0: globalAndroid.content.Context): androidx.activity.ComponentActivity;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment, param4: com.paypal.pyplcheckout.userprofile.view.interfaces.PayPalProfileHeaderViewListener);
							public constructor(param0: globalAndroid.content.Context);
							public setContentViewVisibility(param0: number): void;
						}
						export module PayPalProfileHeaderView {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.view.customviews.PayPalProfileHeaderView.Companion>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module userprofile {
				export module view {
					export module customviews {
						export class PayPalProfileInfoView implements com.paypal.pyplcheckout.navigation.interfaces.ContentView, com.paypal.pyplcheckout.navigation.interfaces.ICustomViewsViewModel {
							public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.view.customviews.PayPalProfileInfoView>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public static TAG: string;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment);
							public getContentViewMinHeight(): number;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public initViewModelObservers(): void;
							public removeListeners(): void;
							public getViewId(): string;
							public getIsAnchoredToBottomSheet(): boolean;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public getLifecycleOwner(param0: globalAndroid.view.View): androidx.lifecycle.LifecycleOwner;
							public _$_clearFindViewByIdCache(): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public getComponentActivity(param0: globalAndroid.content.Context): androidx.activity.ComponentActivity;
							public constructor(param0: globalAndroid.content.Context);
							public setContentViewVisibility(param0: number): void;
						}
						export module PayPalProfileInfoView {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.view.customviews.PayPalProfileInfoView.Companion>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module userprofile {
				export module view {
					export module customviews {
						export class PayPalTermsView implements com.paypal.pyplcheckout.navigation.interfaces.ContentView {
							public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.view.customviews.PayPalTermsView>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public static TAG: string;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment);
							public getContentViewMinHeight(): number;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public listenToEvent(): com.paypal.pyplcheckout.events.EventType;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public removeListeners(): void;
							public getViewId(): string;
							public getIsAnchoredToBottomSheet(): boolean;
							public onClick(param0: globalAndroid.view.View): void;
							public getView(param0: com.paypal.pyplcheckout.model.GenericViewData<any>): globalAndroid.view.View;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: androidx.fragment.app.Fragment, param4: com.paypal.pyplcheckout.userprofile.view.interfaces.PayPalTermsViewListener);
							public _$_clearFindViewByIdCache(): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public constructor(param0: globalAndroid.content.Context);
							public setContentViewVisibility(param0: number): void;
						}
						export module PayPalTermsView {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.view.customviews.PayPalTermsView.Companion>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module userprofile {
				export module view {
					export module fragments {
						export class PYPLUserProfileFragment extends com.paypal.pyplcheckout.home.view.BaseFragment {
							public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.view.fragments.PYPLUserProfileFragment>;
							public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
							public static TAG: string;
							public constructor();
							public getViewId(): string;
							public static newInstance(): com.paypal.pyplcheckout.userprofile.view.fragments.PYPLUserProfileFragment;
							public onActivityCreated(param0: globalAndroid.os.Bundle): void;
							public onCreateView(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: globalAndroid.os.Bundle): globalAndroid.view.View;
							public _$_clearFindViewByIdCache(): void;
							public _$_findCachedViewById(param0: number): globalAndroid.view.View;
							public onResume(): void;
						}
						export module PYPLUserProfileFragment {
							export class Companion {
								public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.view.fragments.PYPLUserProfileFragment.Companion>;
								public newInstance(): com.paypal.pyplcheckout.userprofile.view.fragments.PYPLUserProfileFragment;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module userprofile {
				export module view {
					export module interfaces {
						export class PayPalLogoutViewListener {
							public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.view.interfaces.PayPalLogoutViewListener>;
							/**
							 * Constructs a new instance of the com.paypal.pyplcheckout.userprofile.view.interfaces.PayPalLogoutViewListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onPayPalLogoutClick(): void;
							});
							public constructor();
							public onPayPalLogoutClick(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module userprofile {
				export module view {
					export module interfaces {
						export class PayPalPoliciesViewListener {
							public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.view.interfaces.PayPalPoliciesViewListener>;
							/**
							 * Constructs a new instance of the com.paypal.pyplcheckout.userprofile.view.interfaces.PayPalPoliciesViewListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onPayPalPoliciesClick(): void;
							});
							public constructor();
							public onPayPalPoliciesClick(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module userprofile {
				export module view {
					export module interfaces {
						export class PayPalPrivacyViewListener {
							public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.view.interfaces.PayPalPrivacyViewListener>;
							/**
							 * Constructs a new instance of the com.paypal.pyplcheckout.userprofile.view.interfaces.PayPalPrivacyViewListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onPayPalPrivacyClick(): void;
							});
							public constructor();
							public onPayPalPrivacyClick(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module userprofile {
				export module view {
					export module interfaces {
						export class PayPalProfileHeaderViewListener {
							public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.view.interfaces.PayPalProfileHeaderViewListener>;
							/**
							 * Constructs a new instance of the com.paypal.pyplcheckout.userprofile.view.interfaces.PayPalProfileHeaderViewListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onPayPalProfileImageClick(): void;
								onPayPalBackArrowClick(): void;
							});
							public constructor();
							public onPayPalBackArrowClick(): void;
							public onPayPalProfileImageClick(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module userprofile {
				export module view {
					export module interfaces {
						export class PayPalTermsViewListener {
							public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.view.interfaces.PayPalTermsViewListener>;
							/**
							 * Constructs a new instance of the com.paypal.pyplcheckout.userprofile.view.interfaces.PayPalTermsViewListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onPayPalTermsClick(): void;
							});
							public constructor();
							public onPayPalTermsClick(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module userprofile {
				export module view {
					export module interfaces {
						export class UserProfileViewListener implements com.paypal.pyplcheckout.userprofile.view.interfaces.PayPalLogoutViewListener, com.paypal.pyplcheckout.userprofile.view.interfaces.PayPalPoliciesViewListener, com.paypal.pyplcheckout.userprofile.view.interfaces.PayPalPrivacyViewListener, com.paypal.pyplcheckout.userprofile.view.interfaces.PayPalProfileHeaderViewListener, com.paypal.pyplcheckout.userprofile.view.interfaces.PayPalTermsViewListener {
							public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.view.interfaces.UserProfileViewListener>;
							/**
							 * Constructs a new instance of the com.paypal.pyplcheckout.userprofile.view.interfaces.UserProfileViewListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onPayPalLogoutClick(): void;
								onPayPalPoliciesClick(): void;
								onPayPalPrivacyClick(): void;
								onPayPalProfileImageClick(): void;
								onPayPalBackArrowClick(): void;
								onPayPalTermsClick(): void;
							});
							public constructor();
							public onPayPalBackArrowClick(): void;
							public onPayPalProfileImageClick(): void;
							public onPayPalPoliciesClick(): void;
							public onPayPalPrivacyClick(): void;
							public onPayPalLogoutClick(): void;
							public onPayPalTermsClick(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module userprofile {
				export module viewModel {
					export class UserViewModel {
						public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.viewModel.UserViewModel>;
						public getUser(): com.paypal.pyplcheckout.pojo.User;
						public getUserState(): androidx.lifecycle.LiveData<com.paypal.pyplcheckout.userprofile.model.UserState>;
						public initialize(): void;
						public constructor(param0: com.paypal.pyplcheckout.events.Events, param1: com.paypal.pyplcheckout.services.Repository, param2: com.paypal.pyplcheckout.utils.PYPLCheckoutUtils);
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module userprofile {
				export module viewModel {
					export class UserViewModel_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.userprofile.viewModel.UserViewModel> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.userprofile.viewModel.UserViewModel_Factory>;
						public static newInstance(param0: com.paypal.pyplcheckout.events.Events, param1: com.paypal.pyplcheckout.services.Repository, param2: com.paypal.pyplcheckout.utils.PYPLCheckoutUtils): com.paypal.pyplcheckout.userprofile.viewModel.UserViewModel;
						public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param1: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param2: javax.inject.Provider<com.paypal.pyplcheckout.utils.PYPLCheckoutUtils>);
						public get(): com.paypal.pyplcheckout.userprofile.viewModel.UserViewModel;
						public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.events.Events>, param1: javax.inject.Provider<com.paypal.pyplcheckout.services.Repository>, param2: javax.inject.Provider<com.paypal.pyplcheckout.utils.PYPLCheckoutUtils>): com.paypal.pyplcheckout.userprofile.viewModel.UserViewModel_Factory;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module utils {
				export class AmplitudeUtils {
					public static class: java.lang.Class<com.paypal.pyplcheckout.utils.AmplitudeUtils>;
					public getClient(): com.amplitude.api.AmplitudeClient;
					public returnKeyByEnv(): string;
					public constructor(param0: globalAndroid.content.Context, param1: boolean, param2: boolean);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module utils {
				export class AmplitudeUtils_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.utils.AmplitudeUtils> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.utils.AmplitudeUtils_Factory>;
					public static create(param0: javax.inject.Provider<globalAndroid.content.Context>, param1: javax.inject.Provider<java.lang.Boolean>, param2: javax.inject.Provider<java.lang.Boolean>): com.paypal.pyplcheckout.utils.AmplitudeUtils_Factory;
					public get(): com.paypal.pyplcheckout.utils.AmplitudeUtils;
					public static newInstance(param0: globalAndroid.content.Context, param1: boolean, param2: boolean): com.paypal.pyplcheckout.utils.AmplitudeUtils;
					public constructor(param0: javax.inject.Provider<globalAndroid.content.Context>, param1: javax.inject.Provider<java.lang.Boolean>, param2: javax.inject.Provider<java.lang.Boolean>);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module utils {
				export class AnimationsDelegate {
					public static class: java.lang.Class<com.paypal.pyplcheckout.utils.AnimationsDelegate>;
					public shrink(): void;
					public constructor(param0: globalAndroid.view.View);
					public expand(): void;
				}
				export module AnimationsDelegate {
					export class AnimationType {
						public static class: java.lang.Class<com.paypal.pyplcheckout.utils.AnimationsDelegate.AnimationType>;
						public static EXPAND: com.paypal.pyplcheckout.utils.AnimationsDelegate.AnimationType;
						public static SHRINK: com.paypal.pyplcheckout.utils.AnimationsDelegate.AnimationType;
						public static valueOf(param0: string): com.paypal.pyplcheckout.utils.AnimationsDelegate.AnimationType;
						public static values(): androidNative.Array<com.paypal.pyplcheckout.utils.AnimationsDelegate.AnimationType>;
					}
					export class WhenMappings {
						public static class: java.lang.Class<com.paypal.pyplcheckout.utils.AnimationsDelegate.WhenMappings>;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module utils {
				export class AppBuildConfig {
					public static class: java.lang.Class<com.paypal.pyplcheckout.utils.AppBuildConfig>;
					public static INSTANCE: com.paypal.pyplcheckout.utils.AppBuildConfig;
					public getIsShippingCallbackEnabled(): boolean;
					public static isThreeDsVariant(): boolean;
					public getDebug(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module utils {
				export class BitmapColorUtils {
					public static class: java.lang.Class<com.paypal.pyplcheckout.utils.BitmapColorUtils>;
					public static INSTANCE: com.paypal.pyplcheckout.utils.BitmapColorUtils;
					public getBestTextContrastingColor(param0: globalAndroid.graphics.Bitmap, param1: string, param2: number, param3: number, param4: number, param5: number, param6: boolean, param7: any<any,any>): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module utils {
				export class BrowserPackages {
					public static class: java.lang.Class<com.paypal.pyplcheckout.utils.BrowserPackages>;
					public static INSTANCE: com.paypal.pyplcheckout.utils.BrowserPackages;
					public static CHROME_PACKAGE: string;
					public static SAMSUNG_BROWSER: string;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module utils {
				export module CardNumberFormatterUtilKt {
export module  {
					export class WhenMappings {
						public static class: java.lang.Class<com.paypal.pyplcheckout.utils.CardNumberFormatterUtilKt.WhenMappings>;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module utils {
				export module CardValidationUtilKt {
export module  {
					export class WhenMappings {
						public static class: java.lang.Class<com.paypal.pyplcheckout.utils.CardValidationUtilKt.WhenMappings>;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module utils {
				export class CheckoutCrashLogger {
					public static class: java.lang.Class<com.paypal.pyplcheckout.utils.CheckoutCrashLogger>;
					/**
					 * Constructs a new instance of the com.paypal.pyplcheckout.utils.CheckoutCrashLogger interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						logException(param0: java.lang.Throwable): void;
						addBreadcrumb(param0: string): void;
						setKey(param0: string, param1: string): void;
					});
					public constructor();
					public logException(param0: java.lang.Throwable): void;
					public addBreadcrumb(param0: string): void;
					public setKey(param0: string, param1: string): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module utils {
				export class CheckoutIdlingResource {
					public static class: java.lang.Class<com.paypal.pyplcheckout.utils.CheckoutIdlingResource>;
					public decrement(): void;
					public increment(): void;
					public registerIdleTransitionCallback(param0: androidx.test.espresso.IdlingResource.ResourceCallback): void;
					public constructor();
					public getName(): string;
					public setResourceCounter(param0: number): void;
					public getCountingIdlingResource(): androidx.test.espresso.idling.CountingIdlingResource;
					public getResourceCounter(): number;
					public static getInstance(): com.paypal.pyplcheckout.utils.CheckoutIdlingResource;
					public isIdleNow(): boolean;
				}
				export module CheckoutIdlingResource {
					export class Companion {
						public static class: java.lang.Class<com.paypal.pyplcheckout.utils.CheckoutIdlingResource.Companion>;
						public get_instance(): com.paypal.pyplcheckout.utils.CheckoutIdlingResource;
						public getInstance(): com.paypal.pyplcheckout.utils.CheckoutIdlingResource;
						public set_instance(param0: com.paypal.pyplcheckout.utils.CheckoutIdlingResource): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module utils {
				export class ConnectivityUtils {
					public static class: java.lang.Class<com.paypal.pyplcheckout.utils.ConnectivityUtils>;
					public static INSTANCE: com.paypal.pyplcheckout.utils.ConnectivityUtils;
					public getConnectionName(param0: globalAndroid.content.Context): string;
				}
				export module ConnectivityUtils {
					export class Connection {
						public static class: java.lang.Class<com.paypal.pyplcheckout.utils.ConnectivityUtils.Connection>;
						public static CELLULAR: com.paypal.pyplcheckout.utils.ConnectivityUtils.Connection;
						public static ETHERNET: com.paypal.pyplcheckout.utils.ConnectivityUtils.Connection;
						public static WIFI: com.paypal.pyplcheckout.utils.ConnectivityUtils.Connection;
						public static values(): androidNative.Array<com.paypal.pyplcheckout.utils.ConnectivityUtils.Connection>;
						public static valueOf(param0: string): com.paypal.pyplcheckout.utils.ConnectivityUtils.Connection;
					}
					export class WhenMappings {
						public static class: java.lang.Class<com.paypal.pyplcheckout.utils.ConnectivityUtils.WhenMappings>;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module utils {
				export class CrashLogger {
					public static class: java.lang.Class<com.paypal.pyplcheckout.utils.CrashLogger>;
					public static INSTANCE: com.paypal.pyplcheckout.utils.CrashLogger;
					public clear(): void;
					public static getInstance(): com.paypal.pyplcheckout.utils.CheckoutCrashLogger;
					public static create(param0: com.paypal.pyplcheckout.utils.CheckoutCrashLogger): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module utils {
				export class CrashLoggerKey {
					public static class: java.lang.Class<com.paypal.pyplcheckout.utils.CrashLoggerKey>;
					public static BUTTON_SESSION_ID: com.paypal.pyplcheckout.utils.CrashLoggerKey;
					public static BUYER_COUNTRY: com.paypal.pyplcheckout.utils.CrashLoggerKey;
					public static CACHED_BUTTON_SESSION_ID: com.paypal.pyplcheckout.utils.CrashLoggerKey;
					public getKey(): string;
					public static valueOf(param0: string): com.paypal.pyplcheckout.utils.CrashLoggerKey;
					public static values(): androidNative.Array<com.paypal.pyplcheckout.utils.CrashLoggerKey>;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module utils {
				export class CurrencyConversionType {
					public static class: java.lang.Class<com.paypal.pyplcheckout.utils.CurrencyConversionType>;
					public static VENDOR: com.paypal.pyplcheckout.utils.CurrencyConversionType;
					public static PAYPAL: com.paypal.pyplcheckout.utils.CurrencyConversionType;
					public static valueOf(param0: string): com.paypal.pyplcheckout.utils.CurrencyConversionType;
					public toString(): string;
					public static values(): androidNative.Array<com.paypal.pyplcheckout.utils.CurrencyConversionType>;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module utils {
				export class DebounceUtils {
					public static class: java.lang.Class<com.paypal.pyplcheckout.utils.DebounceUtils>;
					public static INSTANCE: com.paypal.pyplcheckout.utils.DebounceUtils;
					public throttleLatest(param0: number, param1: kotlinx.coroutines.CoroutineScope, param2: any): any;
					public debounce(param0: number, param1: any): any;
					public throttleLatest(param0: any): any;
					public debounce(param0: number, param1: kotlinx.coroutines.CoroutineScope, param2: any): any;
					public throttleLatestUnique(param0: number, param1: kotlinx.coroutines.CoroutineScope, param2: any): any;
					public throttleLatestUnique(param0: number, param1: any): any;
					public debounce(param0: any): any;
					public throttleLatestUnique(param0: any): any;
					public throttleLatest(param0: number, param1: any): any;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module utils {
				export class DialogMaker {
					public static class: java.lang.Class<com.paypal.pyplcheckout.utils.DialogMaker>;
					public onStart(): void;
					public constructor();
					public onCreateView(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: globalAndroid.os.Bundle): globalAndroid.view.View;
					public show(param0: androidx.fragment.app.FragmentActivity): void;
					public getFeedbackMessage(): string;
					public onResume(): void;
				}
				export module DialogMaker {
					export class Builder {
						public static class: java.lang.Class<com.paypal.pyplcheckout.utils.DialogMaker.Builder>;
						public setTitle(param0: number): com.paypal.pyplcheckout.utils.DialogMaker.Builder;
						public showSpinner(param0: boolean): com.paypal.pyplcheckout.utils.DialogMaker.Builder;
						public constructor();
						public setFeedbackRadioButtons(param0: boolean): com.paypal.pyplcheckout.utils.DialogMaker.Builder;
						public setDescription(param0: number): com.paypal.pyplcheckout.utils.DialogMaker.Builder;
						public setPositiveButton(param0: number, param1: com.paypal.pyplcheckout.utils.DialogMaker.PositiveClickListener): com.paypal.pyplcheckout.utils.DialogMaker.Builder;
						public setNegativeButton(param0: number, param1: com.paypal.pyplcheckout.utils.DialogMaker.NegativeClickListener): com.paypal.pyplcheckout.utils.DialogMaker.Builder;
						public build(): com.paypal.pyplcheckout.utils.DialogMaker;
					}
					export class NegativeClickListener {
						public static class: java.lang.Class<com.paypal.pyplcheckout.utils.DialogMaker.NegativeClickListener>;
						/**
						 * Constructs a new instance of the com.paypal.pyplcheckout.utils.DialogMaker$NegativeClickListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onNegativeClick(param0: com.paypal.pyplcheckout.utils.DialogMaker): void;
						});
						public constructor();
						public onNegativeClick(param0: com.paypal.pyplcheckout.utils.DialogMaker): void;
					}
					export class PositiveClickListener {
						public static class: java.lang.Class<com.paypal.pyplcheckout.utils.DialogMaker.PositiveClickListener>;
						/**
						 * Constructs a new instance of the com.paypal.pyplcheckout.utils.DialogMaker$PositiveClickListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onPositiveClick(param0: com.paypal.pyplcheckout.utils.DialogMaker): void;
						});
						public constructor();
						public onPositiveClick(param0: com.paypal.pyplcheckout.utils.DialogMaker): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module utils {
				export class DialogPresets {
					public static class: java.lang.Class<com.paypal.pyplcheckout.utils.DialogPresets>;
					public static INSTANCE: com.paypal.pyplcheckout.utils.DialogPresets;
					public showExitSurveyDialog(param0: globalAndroid.content.Context, param1: any): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module utils {
				export class ErrorPaddingInputLayout {
					public static class: java.lang.Class<com.paypal.pyplcheckout.utils.ErrorPaddingInputLayout>;
					public _$_findViewCache: java.util.Map<java.lang.Integer,globalAndroid.view.View>;
					public constructor(param0: globalAndroid.content.Context);
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public _$_findCachedViewById(param0: number): globalAndroid.view.View;
					public _$_clearFindViewByIdCache(): void;
					public setErrorEnabled(param0: boolean): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module utils {
				export class ErrorUtils {
					public static class: java.lang.Class<com.paypal.pyplcheckout.utils.ErrorUtils>;
					public static INSTANCE: com.paypal.pyplcheckout.utils.ErrorUtils;
					public static sendOnErrorMessageToFireBase(param0: com.paypal.pyplcheckout.flavorfirebasedb.RealTimeDB, param1: string, param2: string, param3: com.paypal.pyplcheckout.pojo.firebase.FirebaseMessageData, param4: string, param5: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode): void;
					public getOnErrorMessageToFireBase(param0: com.paypal.pyplcheckout.pojo.firebase.FirebaseMessageData, param1: string, param2: string, param3: string): string;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module utils {
				export class ExpandableView {
					public static class: java.lang.Class<com.paypal.pyplcheckout.utils.ExpandableView>;
					/**
					 * Constructs a new instance of the com.paypal.pyplcheckout.utils.ExpandableView interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onViewExpansionStateUpdateStarted(param0: globalAndroid.view.View): void;
						onViewExpansionStateUpdateCompleted(param0: globalAndroid.view.View): void;
						getViewTransitionProperties(param0: globalAndroid.view.View, param1: com.paypal.pyplcheckout.utils.ExpandableViewState): com.paypal.pyplcheckout.utils.ExpandableViewTransitionProperties;
					});
					public constructor();
					public getViewTransitionProperties(param0: globalAndroid.view.View, param1: com.paypal.pyplcheckout.utils.ExpandableViewState): com.paypal.pyplcheckout.utils.ExpandableViewTransitionProperties;
					public onViewExpansionStateUpdateCompleted(param0: globalAndroid.view.View): void;
					public onViewExpansionStateUpdateStarted(param0: globalAndroid.view.View): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module utils {
				export class ExpandableViewHelper {
					public static class: java.lang.Class<com.paypal.pyplcheckout.utils.ExpandableViewHelper>;
					public constructor(param0: com.paypal.pyplcheckout.utils.ExpandableView);
					public getViewExpansionState(param0: globalAndroid.view.View): com.paypal.pyplcheckout.utils.ExpandableViewState;
					public updateViewExpansionStateConditionally(param0: globalAndroid.view.View, param1: com.paypal.pyplcheckout.utils.ExpandableViewState, param2: boolean, param3: any, param4: any, param5: any): void;
					public hasViewPreviouslyExpanded(param0: globalAndroid.view.View): boolean;
					public updateViewExpansionState(param0: globalAndroid.view.View, param1: com.paypal.pyplcheckout.utils.ExpandableViewState, param2: any): boolean;
				}
				export module ExpandableViewHelper {
					export class Companion {
						public static class: java.lang.Class<com.paypal.pyplcheckout.utils.ExpandableViewHelper.Companion>;
					}
					export class WhenMappings {
						public static class: java.lang.Class<com.paypal.pyplcheckout.utils.ExpandableViewHelper.WhenMappings>;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module utils {
				export class ExpandableViewState {
					public static class: java.lang.Class<com.paypal.pyplcheckout.utils.ExpandableViewState>;
					public static Expanded: com.paypal.pyplcheckout.utils.ExpandableViewState;
					public static Collapsed: com.paypal.pyplcheckout.utils.ExpandableViewState;
					public static values(): androidNative.Array<com.paypal.pyplcheckout.utils.ExpandableViewState>;
					public toString(): string;
					public static valueOf(param0: string): com.paypal.pyplcheckout.utils.ExpandableViewState;
				}
				export module ExpandableViewState {
					export class WhenMappings {
						public static class: java.lang.Class<com.paypal.pyplcheckout.utils.ExpandableViewState.WhenMappings>;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module utils {
				export class ExpandableViewTransitionProperties {
					public static class: java.lang.Class<com.paypal.pyplcheckout.utils.ExpandableViewTransitionProperties>;
					public equals(param0: any): boolean;
					public getDuration(): number;
					public toString(): string;
					public getDelay(): number;
					public copy(param0: number, param1: number): com.paypal.pyplcheckout.utils.ExpandableViewTransitionProperties;
					public component1(): number;
					public component2(): number;
					public hashCode(): number;
					public constructor(param0: number, param1: number);
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module utils {
				export class IgnoreGeneratedTestReport {
					public static class: java.lang.Class<com.paypal.pyplcheckout.utils.IgnoreGeneratedTestReport>;
					/**
					 * Constructs a new instance of the com.paypal.pyplcheckout.utils.IgnoreGeneratedTestReport interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
					});
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module utils {
				export class NativeUsageTrackerListener {
					public static class: java.lang.Class<com.paypal.pyplcheckout.utils.NativeUsageTrackerListener>;
					/**
					 * Constructs a new instance of the com.paypal.pyplcheckout.utils.NativeUsageTrackerListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onTrack(param0: string, param1: java.util.Map<string,any>): void;
					});
					public constructor();
					public onTrack(param0: string, param1: java.util.Map<string,any>): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module utils {
				export class NetworkUtils {
					public static class: java.lang.Class<com.paypal.pyplcheckout.utils.NetworkUtils>;
					public static INSTANCE: com.paypal.pyplcheckout.utils.NetworkUtils;
					public isNetworkConnected(): boolean;
					public getConnectionType(): string;
					public setNetworkConnected(param0: boolean): void;
					public setConnectionType(param0: string): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module utils {
				export class PYPLCheckoutUtils {
					public static class: java.lang.Class<com.paypal.pyplcheckout.utils.PYPLCheckoutUtils>;
					public static SHIPPING_OPTION: string;
					public static PAYMENT_MODE_TYPE: string;
					public static EMPTY_STRING: string;
					public static TAG: string;
					public setAccessToken(param0: string): void;
					public cancelCheckoutFlow(param0: string, param1: string): void;
					public getIndefiniteFallbackRequest(): com.paypal.pyplcheckout.common.firebase.firebasemodels.GetPropsRequest;
					public clearAllInstances(): void;
					public getLeavingCheckoutMessage(): number;
					public waitFor(param0: any, param1: number): java.util.Timer;
					public isZeroString(param0: string): boolean;
					public getCheckoutLiteUrl(param0: com.paypal.pyplcheckout.utils.PYPLCheckoutUtils.FallbackScenario): globalAndroid.net.Uri;
					public openChromeCustomTab(param0: globalAndroid.app.Activity, param1: com.paypal.pyplcheckout.auth.NativeSSOListener, param2: com.paypal.pyplcheckout.utils.PYPLCheckoutUtils.FallbackScenario): void;
					public hashMapToJSON(param0: java.util.Map<string,any>): string;
					public returnToProvider(param0: string, param1: com.paypal.pyplcheckout.utils.ReturnToProviderOperationType, param2: string): void;
					public clearRepositories(): void;
					public setBrowserType(param0: string): void;
					public constructor();
					public setFallback(param0: boolean): void;
					public terminateActivity(param0: string, param1: string): void;
					/** @deprecated */
					public getHermesUrl(): globalAndroid.net.Uri;
					public cancelCheckoutAndExit(param0: com.paypal.pyplcheckout.exception.CheckoutCancelReason, param1: string): void;
					public evaluateDebug(): boolean;
					public showErrorDialogOnUiThread(param0: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param1: string): void;
					public getSelectedShippingMethodType(): com.paypal.pyplcheckout.pojo.ShippingMethodType;
					public showDebugErrorDialog(param0: globalAndroid.app.Activity, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param2: string): void;
					public getLocale(param0: globalAndroid.content.Context): string;
					public isFallback(): boolean;
					public setSelectedShippingMethodType(param0: com.paypal.pyplcheckout.pojo.ShippingMethodType): void;
					public createFinalResponseObject(param0: string, param1: com.paypal.pyplcheckout.utils.ReturnToProviderOperationType): com.paypal.pyplcheckout.pojo.firebase.FirebaseMessageData;
					public findTriggeredApp(param0: globalAndroid.content.Context): string;
					public returnToProviderWithResponse(param0: com.paypal.pyplcheckout.pojo.ApprovePaymentResponse, param1: com.paypal.pyplcheckout.utils.ReturnToProviderOperationType, param2: string): void;
					public generateSecureRandomString(): string;
					public getRandomAlphaNumeric(): string;
					public getLocationOfViewOnScreen(param0: globalAndroid.view.View): globalAndroid.graphics.Point;
					public openChromeCustomTabs(param0: globalAndroid.net.Uri, param1: globalAndroid.app.Activity): void;
					public static getInstance(): com.paypal.pyplcheckout.utils.PYPLCheckoutUtils;
					public fallBack(param0: string, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason, param2: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackCategory, param3: string, param4: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param5: com.paypal.checkout.error.ErrorReason, param6: java.lang.Exception): void;
					public showErrorDialogOnUiThread(param0: globalAndroid.app.Activity, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param2: string): void;
					public getBrowserType(): string;
					public fallbackIndefinite(param0: string, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackReason, param2: com.paypal.pyplcheckout.common.instrumentation.PEnums.FallbackCategory, param3: string, param4: com.paypal.pyplcheckout.common.instrumentation.PEnums.TransitionName, param5: com.paypal.checkout.error.ErrorReason, param6: java.lang.Exception, param7: boolean): void;
				}
				export module PYPLCheckoutUtils {
					export class Companion {
						public static class: java.lang.Class<com.paypal.pyplcheckout.utils.PYPLCheckoutUtils.Companion>;
						public getInstance(): com.paypal.pyplcheckout.utils.PYPLCheckoutUtils;
					}
					export class FallbackScenario {
						public static class: java.lang.Class<com.paypal.pyplcheckout.utils.PYPLCheckoutUtils.FallbackScenario>;
						public static ADD_CARD: com.paypal.pyplcheckout.utils.PYPLCheckoutUtils.FallbackScenario;
						public static ADD_SHIPPING: com.paypal.pyplcheckout.utils.PYPLCheckoutUtils.FallbackScenario;
						public static PAYPAL_CREDIT: com.paypal.pyplcheckout.utils.PYPLCheckoutUtils.FallbackScenario;
						public static GLOBAL_PAY_LATER: com.paypal.pyplcheckout.utils.PYPLCheckoutUtils.FallbackScenario;
						public static valueOf(param0: string): com.paypal.pyplcheckout.utils.PYPLCheckoutUtils.FallbackScenario;
						public static values(): androidNative.Array<com.paypal.pyplcheckout.utils.PYPLCheckoutUtils.FallbackScenario>;
					}
					export class WhenMappings {
						public static class: java.lang.Class<com.paypal.pyplcheckout.utils.PYPLCheckoutUtils.WhenMappings>;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module utils {
				export class PayPalConstants {
					public static class: java.lang.Class<com.paypal.pyplcheckout.utils.PayPalConstants>;
					public static INSTANCE: com.paypal.pyplcheckout.utils.PayPalConstants;
					public static getUserAgreementUrl(param0: string, param1: string): string;
					public static getPrivacyUrl(param0: string, param1: string): string;
					public static getPolicyUrl(param0: string, param1: string): string;
					public static getCryptoPolicyUrl(param0: string, param1: string): string;
					public static getCryptoRatesAndFeesUrl(param0: string, param1: string): string;
					public static getTermsUrl(param0: string, param1: string): string;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module utils {
				export class PaymentTypes {
					public static class: java.lang.Class<com.paypal.pyplcheckout.utils.PaymentTypes>;
					public static AMERICAN_EXPRESS: com.paypal.pyplcheckout.utils.PaymentTypes;
					public static AMEX: com.paypal.pyplcheckout.utils.PaymentTypes;
					public static BALANCE_USD: com.paypal.pyplcheckout.utils.PaymentTypes;
					public static ADD_CARD: com.paypal.pyplcheckout.utils.PaymentTypes;
					public static PAYPAL_CREDIT_OFFER: com.paypal.pyplcheckout.utils.PaymentTypes;
					public static GLOBAL_PAY_LATER: com.paypal.pyplcheckout.utils.PaymentTypes;
					public static PAYPAL_CREDIT: com.paypal.pyplcheckout.utils.PaymentTypes;
					public static BALANCE: com.paypal.pyplcheckout.utils.PaymentTypes;
					public static CREDIT_CARD: com.paypal.pyplcheckout.utils.PaymentTypes;
					public static BANK_ACCOUNT: com.paypal.pyplcheckout.utils.PaymentTypes;
					public static PAYPAL_BALANCE: com.paypal.pyplcheckout.utils.PaymentTypes;
					public static CRYPTOCURRENCY: com.paypal.pyplcheckout.utils.PaymentTypes;
					public toString(): string;
					public static values(): androidNative.Array<com.paypal.pyplcheckout.utils.PaymentTypes>;
					public static valueOf(param0: string): com.paypal.pyplcheckout.utils.PaymentTypes;
					public equals(param0: string, param1: boolean): boolean;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module utils {
				export class ProviderApps {
					public static class: java.lang.Class<com.paypal.pyplcheckout.utils.ProviderApps>;
					public static VENICE: com.paypal.pyplcheckout.utils.ProviderApps;
					public getProviderApp(): string;
					public static valueOf(param0: string): com.paypal.pyplcheckout.utils.ProviderApps;
					public static values(): androidNative.Array<com.paypal.pyplcheckout.utils.ProviderApps>;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module utils {
				export class RequestCode {
					public static class: java.lang.Class<com.paypal.pyplcheckout.utils.RequestCode>;
					public static HOME_ACTIVITY: com.paypal.pyplcheckout.utils.RequestCode;
					public static THREE_DS_ACTIVITY: com.paypal.pyplcheckout.utils.RequestCode;
					public static values(): androidNative.Array<com.paypal.pyplcheckout.utils.RequestCode>;
					public static valueOf(param0: string): com.paypal.pyplcheckout.utils.RequestCode;
					public getCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module utils {
				export abstract class Result<T>  extends java.lang.Object {
					public static class: java.lang.Class<com.paypal.pyplcheckout.utils.Result<any>>;
				}
				export module Result {
					export class Error<T>  extends com.paypal.pyplcheckout.utils.Result<any> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.utils.Result.Error<any>>;
						public copy(param0: java.lang.Exception): com.paypal.pyplcheckout.utils.Result.Error<any>;
						public constructor(param0: java.lang.Exception);
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getException(): java.lang.Exception;
						public toString(): string;
						public component1(): java.lang.Exception;
					}
					export class Success<T>  extends com.paypal.pyplcheckout.utils.Result<any> {
						public static class: java.lang.Class<com.paypal.pyplcheckout.utils.Result.Success<any>>;
						public getValue(): any;
						public copy(param0: any): com.paypal.pyplcheckout.utils.Result.Success<any>;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public component1(): any;
						public constructor(param0: any);
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module utils {
				export abstract class ReturnToProviderOperationType {
					public static class: java.lang.Class<com.paypal.pyplcheckout.utils.ReturnToProviderOperationType>;
				}
				export module ReturnToProviderOperationType {
					export class Cancel extends com.paypal.pyplcheckout.utils.ReturnToProviderOperationType {
						public static class: java.lang.Class<com.paypal.pyplcheckout.utils.ReturnToProviderOperationType.Cancel>;
						public static INSTANCE: com.paypal.pyplcheckout.utils.ReturnToProviderOperationType.Cancel;
						public toString(): string;
					}
					export class Failure extends com.paypal.pyplcheckout.utils.ReturnToProviderOperationType {
						public static class: java.lang.Class<com.paypal.pyplcheckout.utils.ReturnToProviderOperationType.Failure>;
						public getErrorCode(): com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode;
						public constructor(param0: java.lang.Exception, param1: com.paypal.pyplcheckout.common.instrumentation.PEnums.EventCode, param2: com.paypal.checkout.error.ErrorReason, param3: com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName, param4: boolean);
						public getInvokeOnErrorCallback(): boolean;
						public getException(): java.lang.Exception;
						public toString(): string;
						public getErrorReason(): com.paypal.checkout.error.ErrorReason;
						public getStateName(): com.paypal.pyplcheckout.common.instrumentation.PEnums.StateName;
					}
					export class Payment extends com.paypal.pyplcheckout.utils.ReturnToProviderOperationType {
						public static class: java.lang.Class<com.paypal.pyplcheckout.utils.ReturnToProviderOperationType.Payment>;
						public static INSTANCE: com.paypal.pyplcheckout.utils.ReturnToProviderOperationType.Payment;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module utils {
				export class RunOnceDelegate {
					public static class: java.lang.Class<com.paypal.pyplcheckout.utils.RunOnceDelegate>;
					public run(param0: any): void;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module utils {
				export class ScreenMetricsCompat {
					public static class: java.lang.Class<com.paypal.pyplcheckout.utils.ScreenMetricsCompat>;
					public static INSTANCE: com.paypal.pyplcheckout.utils.ScreenMetricsCompat;
					public getScreenSize(param0: globalAndroid.content.Context): any;
				}
				export module ScreenMetricsCompat {
					export class Api {
						public static class: java.lang.Class<com.paypal.pyplcheckout.utils.ScreenMetricsCompat.Api>;
						public getScreenSize(param0: globalAndroid.content.Context): any;
						public constructor();
					}
					export class ApiLevel23 extends com.paypal.pyplcheckout.utils.ScreenMetricsCompat.Api {
						public static class: java.lang.Class<com.paypal.pyplcheckout.utils.ScreenMetricsCompat.ApiLevel23>;
						public getScreenSize(param0: globalAndroid.content.Context): any;
						public constructor();
					}
					export class ApiLevel30 extends com.paypal.pyplcheckout.utils.ScreenMetricsCompat.Api {
						public static class: java.lang.Class<com.paypal.pyplcheckout.utils.ScreenMetricsCompat.ApiLevel30>;
						public getScreenSize(param0: globalAndroid.content.Context): any;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module utils {
				export class ShippingCallbackBlockingBehaviourObserver extends androidx.lifecycle.Observer<com.paypal.pyplcheckout.home.view.customviews.productviews.ShippingCallbackBlockingBehaviour> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.utils.ShippingCallbackBlockingBehaviourObserver>;
					public constructor();
					public onChanged(param0: com.paypal.pyplcheckout.home.view.customviews.productviews.ShippingCallbackBlockingBehaviour): void;
				}
				export module ShippingCallbackBlockingBehaviourObserver {
					export class WhenMappings {
						public static class: java.lang.Class<com.paypal.pyplcheckout.utils.ShippingCallbackBlockingBehaviourObserver.WhenMappings>;
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module utils {
				export class SplitBalanceUtils {
					public static class: java.lang.Class<com.paypal.pyplcheckout.utils.SplitBalanceUtils>;
					public static INSTANCE: com.paypal.pyplcheckout.utils.SplitBalanceUtils;
					public static findPlanMatchingSelectedSplitBalance(param0: com.paypal.pyplcheckout.pojo.FundingOption, param1: boolean, param2: boolean): com.paypal.pyplcheckout.pojo.Plan;
					public static getSecondSplitBalanceAmount(): string;
					public static getSplitBalanceTypeOfAllFundingOptions(): com.paypal.pyplcheckout.pojo.SplitBalanceType.Type;
					public static getFirstSplitBalanceAmount(): string;
					public static getSecondSplitBalanceId(): string;
					public static clearSplitBalanceAmountAndId(): void;
					public static getSplitBalanceFundingInstrumentList(): java.util.List<com.paypal.pyplcheckout.pojo.FundingInstrument>;
					public static getFirstSplitBalanceId(): string;
					public static generateSplitBalanceAmountAndId(): void;
					public static isSingleSplitBalanceVisible(): boolean;
					public static isMultipleSplitBalanceVisible(): boolean;
					public clear(): void;
					public static createFundingOptionsPlanMap(param0: java.util.List<com.paypal.pyplcheckout.pojo.FundingOption>): void;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module utils {
				export class VersionUtils {
					public static class: java.lang.Class<com.paypal.pyplcheckout.utils.VersionUtils>;
					public static INSTANCE: com.paypal.pyplcheckout.utils.VersionUtils;
					public getSdkVersion(): string;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module utils {
				export class WhiteSpaceSpan {
					public static class: java.lang.Class<com.paypal.pyplcheckout.utils.WhiteSpaceSpan>;
					public draw(param0: globalAndroid.graphics.Canvas, param1: string, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number, param8: globalAndroid.graphics.Paint): void;
					public constructor();
					public getSize(param0: globalAndroid.graphics.Paint, param1: string, param2: number, param3: number, param4: globalAndroid.graphics.Paint.FontMetricsInt): number;
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module viewmodels {
				export class BaseViewModel {
					public static class: java.lang.Class<com.paypal.pyplcheckout.viewmodels.BaseViewModel>;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module viewmodels {
				export class CancelViewModel extends com.paypal.pyplcheckout.viewmodels.BaseViewModel {
					public static class: java.lang.Class<com.paypal.pyplcheckout.viewmodels.CancelViewModel>;
					public getViewState(): androidx.lifecycle.LiveData<com.paypal.pyplcheckout.viewmodels.CancelViewModel.State>;
					public handle3PCancelAction(param0: string, param1: string): void;
					public handle1PCancelAction(param0: string, param1: string): void;
					public constructor();
					public constructor(param0: com.paypal.pyplcheckout.domain.usecase.GetMerchantConfigUseCase, param1: com.paypal.pyplcheckout.state.usecase.GetCheckoutStateUseCase, param2: boolean);
					public cancelAction(param0: string, param1: string): void;
				}
				export module CancelViewModel {
					export class Companion {
						public static class: java.lang.Class<com.paypal.pyplcheckout.viewmodels.CancelViewModel.Companion>;
					}
					export abstract class State {
						public static class: java.lang.Class<com.paypal.pyplcheckout.viewmodels.CancelViewModel.State>;
					}
					export module State {
						export class CloseSDK extends com.paypal.pyplcheckout.viewmodels.CancelViewModel.State {
							public static class: java.lang.Class<com.paypal.pyplcheckout.viewmodels.CancelViewModel.State.CloseSDK>;
							public getFromMessage(): string;
							public constructor(param0: string, param1: string);
							public getFromClass(): string;
						}
						export class Initial extends com.paypal.pyplcheckout.viewmodels.CancelViewModel.State {
							public static class: java.lang.Class<com.paypal.pyplcheckout.viewmodels.CancelViewModel.State.Initial>;
							public static INSTANCE: com.paypal.pyplcheckout.viewmodels.CancelViewModel.State.Initial;
						}
						export class ShowCancelDialog extends com.paypal.pyplcheckout.viewmodels.CancelViewModel.State {
							public static class: java.lang.Class<com.paypal.pyplcheckout.viewmodels.CancelViewModel.State.ShowCancelDialog>;
							public getFromMessage(): string;
							public constructor(param0: string, param1: string);
							public getFromClass(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module paypal {
		export module pyplcheckout {
			export module viewmodels {
				export class CancelViewModel_Factory extends dagger.internal.Factory<com.paypal.pyplcheckout.viewmodels.CancelViewModel> {
					public static class: java.lang.Class<com.paypal.pyplcheckout.viewmodels.CancelViewModel_Factory>;
					public static newInstance(param0: com.paypal.pyplcheckout.domain.usecase.GetMerchantConfigUseCase, param1: com.paypal.pyplcheckout.state.usecase.GetCheckoutStateUseCase, param2: boolean): com.paypal.pyplcheckout.viewmodels.CancelViewModel;
					public get(): com.paypal.pyplcheckout.viewmodels.CancelViewModel;
					public static create(param0: javax.inject.Provider<com.paypal.pyplcheckout.domain.usecase.GetMerchantConfigUseCase>, param1: javax.inject.Provider<com.paypal.pyplcheckout.state.usecase.GetCheckoutStateUseCase>, param2: javax.inject.Provider<java.lang.Boolean>): com.paypal.pyplcheckout.viewmodels.CancelViewModel_Factory;
					public constructor(param0: javax.inject.Provider<com.paypal.pyplcheckout.domain.usecase.GetMerchantConfigUseCase>, param1: javax.inject.Provider<com.paypal.pyplcheckout.state.usecase.GetCheckoutStateUseCase>, param2: javax.inject.Provider<java.lang.Boolean>);
				}
			}
		}
	}
}

//Generics information:
//com.paypal.checkout.paymentbutton.PaymentButton:1
//com.paypal.pyplcheckout.events.Error:1
//com.paypal.pyplcheckout.events.ObserversWrapper:1
//com.paypal.pyplcheckout.events.SingleLiveEvent:1
//com.paypal.pyplcheckout.events.Success:1
//com.paypal.pyplcheckout.home.view.customviews.AutoCloseBottomSheetBehavior:1
//com.paypal.pyplcheckout.interfaces.PageId:1
//com.paypal.pyplcheckout.model.GenericViewData:1
//com.paypal.pyplcheckout.services.api.factory.AuthenticatedApiFactory:1
//com.paypal.pyplcheckout.utils.Result:1
//com.paypal.pyplcheckout.utils.Result.Error:1
//com.paypal.pyplcheckout.utils.Result.Success:1

